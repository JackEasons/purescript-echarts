(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require('Main').main()
},{"Main":112}],2:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Array = require("Data.Array");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = {
    title: {
        text: "Another chinese stuff", 
        subtext: "Subtitle here"
    }, 
    tooltip: {
        trigger: "axis", 
        axisPointer: {
            type: "cross", 
            lineStyle: {
                type: "dashed", 
                width: 1
            }
        }, 
        formatter: function (p) {
            return p.seriesName + (" : [ " + (Data_Maybe.fromMaybe("")(Data_Array["!!"](p.value)(0)) + (", " + (Data_Maybe.fromMaybe("")(Data_Array["!!"](p.value)(1)) + "]"))));
        }
    }, 
    legend: {
        data: [ "\u6570\u636e", "\u6570\u636e" ]
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            magicType: {
                show: true, 
                type: [ "line", "bar" ]
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    calculable: true, 
    xAxis: [ {
        type: "value"
    } ], 
    yAxis: [ {
        type: "value", 
        axisLine: {
            lineStyle: {
                color: "#dc143c"
            }
        }
    } ], 
    series: Data_Tuple_Nested["/\\"](Data_Maybe.Nothing.value)(Data_Tuple_Nested["/\\"]({
        name: "\u6570\u636e", 
        type: "bar", 
        data: [ [ 1.5, 10 ], [ 5, 7 ], [ 8, 8 ], [ 12, 6 ], [ 11, 12 ], [ 16, 9 ], [ 14, 6 ], [ 17, 4 ], [ 19, 9 ] ], 
        markPoint: {
            data: Data_Tuple_Nested["/\\"]({
                type: "max", 
                name: "\u6700\u5927\u503c", 
                symbol: "emptyCircle", 
                itemStyle: {
                    normal: {
                        color: "#dc143c", 
                        label: {
                            position: "top"
                        }
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "min", 
                name: "\u6700\u5c0f\u503c", 
                symbol: "emptyCircle", 
                itemStyle: {
                    normal: {
                        color: "#dc143c", 
                        label: {
                            position: "top"
                        }
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "max", 
                name: "\u6700\u5927\u503c", 
                valueIndex: 0, 
                symbol: "emptyCircle", 
                itemStyle: {
                    normal: {
                        color: "#1e90ff", 
                        label: {
                            position: "right"
                        }
                    }
                }
            })({
                type: "min", 
                name: "\u6700\u5c0f\u503c", 
                valueIndex: 0, 
                symbol: "emptyCircle", 
                itemStyle: {
                    normal: {
                        color: "#1e90ff", 
                        label: {
                            position: "right"
                        }
                    }
                }
            })))
        }, 
        makrLine: {
            data: Data_Tuple_Nested["/\\"]({
                type: "max", 
                name: "max", 
                itemStyle: {
                    normal: {
                        color: "#dc143c"
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "min", 
                name: "min", 
                itemStyle: {
                    normal: {
                        color: "#dc143c"
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "average", 
                name: "average", 
                itemStyle: {
                    normal: {
                        color: "#dc143c"
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "max", 
                name: "max", 
                valueIndex: 0, 
                itemStyle: {
                    normal: {
                        color: "#1e90ff"
                    }
                }
            })(Data_Tuple_Nested["/\\"]({
                type: "min", 
                name: "min", 
                valueIndex: 0, 
                itemStyle: {
                    normal: {
                        color: "#1e90ff"
                    }
                }
            })({
                type: "average", 
                name: "average", 
                itemStyle: {
                    normal: {
                        color: "#1e90ff"
                    }
                }
            })))))
        }
    })({
        name: "bar", 
        type: "bar", 
        barHeight: 10, 
        data: [ [ 1, 2 ], [ 2, 3 ], [ 4, 4 ], [ 7, 5 ], [ 11, 11 ], [ 18, 15 ] ]
    }))
};
var bar13 = function (id) {
    return function __do() {
        var _65 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    bar13: bar13, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],3:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Data_Argonaut = require("Data.Argonaut");
var Data_StrMap = require("Data.StrMap");
var Data_String = require("Data.String");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Control_Alt = require("Control.Alt");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = {
    color: [ "#FBB367", "#80B1D2", "#FB8070", "#CC99FF", "#B0D961", "#99CCCC", "#BEBBD8", "#FFCC99", "#8DD3C8", "#FF9999", "#CCEAC4", "#BB81BC", "#FBCCEC", "#CCFF66", "#99CC66", "#66CC66", "#FF6666", "#FFED6F", "#ff7f50", "#87cefa" ], 
    title: {
        text: "\u4e2d\u4e1c\u5730\u533a\u7684\u654c\u53cb\u5173\u7cfb", 
        subtext: "\u6570\u636e\u6765\u81ea\u8d22\u65b0\u7f51", 
        sublink: "http://international.caixin.com/2013-09-06/100579154.html", 
        x: "right", 
        y: "bottom"
    }, 
    toolbox: {
        show: true, 
        feature: {
            restore: {
                show: true
            }, 
            magicType: {
                show: true, 
                type: [ "force", "chord" ]
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    tooltip: {
        trigger: "item", 
        formatter: function (params) {
            return Data_Maybe.fromMaybe("")(Control_Alt["<|>"](Data_Maybe.altMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut.toObject(params))(function (_63) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_StrMap.lookup("name")(_63))(Data_Argonaut.toString))(function (_62) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_StrMap.lookup("seriesName")(_63))(Data_Argonaut.toString))(function (_61) {
                        return Prelude["return"](Data_Maybe.monadMaybe)(Data_String.replace("-")(" ")(_62) + (_61 + " "));
                    });
                });
            }))(Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut.toObject(params))(Data_StrMap.lookup("data")))(Data_Argonaut.toObject))(Data_StrMap.lookup("id")))(Data_Argonaut.toString)));
        }
    }, 
    legend: {
        data: [ "\u7f8e\u56fd", "\u53d9\u5229\u4e9a\u53cd\u5bf9\u6d3e", "\u963f\u8428\u5fb7", "\u4f0a\u6717", "\u585e\u897f", "\u54c8\u9a6c\u65af", "\u4ee5\u8272\u5217", "\u7a46\u65af\u6797\u5144\u5f1f\u4f1a", "\u57fa\u5730\u7ec4\u7ec7", "\u4fc4\u7f57\u65af", "\u9ece\u5df4\u5ae9\u4ec0\u53f6\u6d3e", "\u571f\u8033\u5176", "\u5361\u5854\u5c14", "\u6c99\u7279", "\u9ece\u5df4\u5ae9\u900a\u5c3c\u6d3e", "", "\u652f\u6301", "\u53cd\u5bf9", "\u672a\u8868\u6001" ], 
        orient: "vertical", 
        x: "left"
    }, 
    series: Data_Tuple_Nested["/\\"]({
        name: "\u652f\u6301", 
        type: "chord", 
        showScaleText: false, 
        clockWise: false, 
        data: [ {
            name: "\u7f8e\u56fd"
        }, {
            name: "\u53d9\u5229\u4e9a\u53cd\u5bf9\u6d3e"
        }, {
            name: "\u963f\u8428\u5fb7"
        }, {
            name: "\u4f0a\u6717"
        }, {
            name: "\u585e\u897f"
        }, {
            name: "\u54c8\u9a6c\u65af"
        }, {
            name: "\u4ee5\u8272\u5217"
        }, {
            name: "\u7a46\u65af\u6797\u5144\u5f1f\u4f1a"
        }, {
            name: "\u57fa\u5730\u7ec4\u7ec7"
        }, {
            name: "\u4fc4\u7f57\u65af"
        }, {
            name: "\u9ece\u5df4\u5ae9\u4ec0\u53f6\u6d3e"
        }, {
            name: "\u571f\u8033\u5176"
        }, {
            name: "\u5361\u5854\u5c14"
        }, {
            name: "\u6c99\u7279"
        }, {
            name: "\u9ece\u5df4\u5ae9\u900a\u5c3c\u6d3e"
        } ], 
        matrix: [ [ 0, 100, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 10, 0, 0, 0, 0, 10, 10, 0, 10, 0, 0, 10, 10, 10, 10 ], [ 0, 0, 0, 10, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 0, 100, 0, 0, 0, 0, 100, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0 ], [ 0, 100, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0 ], [ 10, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0 ], [ 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 100, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 100, 0, 0, 0, 100, 0, 100, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 ], [ 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0 ] ]
    })(Data_Tuple_Nested["/\\"]({
        name: "\u53cd\u5bf9", 
        type: "chord", 
        insertToSerie: "\u652f\u6301", 
        data: [ {
            name: "\u7f8e\u56fd"
        }, {
            name: "\u53d9\u5229\u4e9a\u53cd\u5bf9\u6d3e"
        }, {
            name: "\u963f\u8428\u5fb7"
        }, {
            name: "\u4f0a\u6717"
        }, {
            name: "\u585e\u897f"
        }, {
            name: "\u54c8\u9a6c\u65af"
        }, {
            name: "\u4ee5\u8272\u5217"
        }, {
            name: "\u7a46\u65af\u6797\u5144\u5f1f\u4f1a"
        }, {
            name: "\u57fa\u5730\u7ec4\u7ec7"
        }, {
            name: "\u4fc4\u7f57\u65af"
        }, {
            name: "\u9ece\u5df4\u5ae9\u4ec0\u53f6\u6d3e"
        }, {
            name: "\u571f\u8033\u5176"
        }, {
            name: "\u5361\u5854\u5c14"
        }, {
            name: "\u6c99\u7279"
        }, {
            name: "\u9ece\u5df4\u5ae9\u900a\u5c3c\u6d3e"
        } ], 
        matrix: [ [ 0, 0, 100, 100, 0, 100, 0, 0, 100, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 10, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0 ], [ 10, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 10, 10, 0, 10 ], [ 10, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 10, 0, 100, 0, 0, 0, 10, 10, 0, 0 ], [ 10, 0, 0, 0, 100, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0 ], [ 10, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0 ], [ 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 100, 10, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]
    })({
        name: "\u672a\u8868\u6001", 
        type: "chord", 
        insertToSerie: "\u652f\u6301", 
        data: [ {
            name: "\u7f8e\u56fd"
        }, {
            name: "\u53d9\u5229\u4e9a\u53cd\u5bf9\u6d3e"
        }, {
            name: "\u963f\u8428\u5fb7"
        }, {
            name: "\u4f0a\u6717"
        }, {
            name: "\u585e\u897f"
        }, {
            name: "\u54c8\u9a6c\u65af"
        }, {
            name: "\u4ee5\u8272\u5217"
        }, {
            name: "\u7a46\u65af\u6797\u5144\u5f1f\u4f1a"
        }, {
            name: "\u57fa\u5730\u7ec4\u7ec7"
        }, {
            name: "\u4fc4\u7f57\u65af"
        }, {
            name: "\u9ece\u5df4\u5ae9\u4ec0\u53f6\u6d3e"
        }, {
            name: "\u571f\u8033\u5176"
        }, {
            name: "\u5361\u5854\u5c14"
        }, {
            name: "\u6c99\u7279"
        }, {
            name: "\u9ece\u5df4\u5ae9\u900a\u5c3c\u6d3e"
        } ], 
        matrix: [ [ 0, 0, 0, 0, 100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]
    }))
};
var chord2 = function (id) {
    return function __do() {
        var _64 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    chord2: chord2, 
    options: options
};

},{"Control.Alt":5,"Control.Monad.Eff":12,"Data.Argonaut":24,"Data.Maybe":39,"Data.StrMap":50,"Data.String":53,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],4:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var ECharts_Connect = require("ECharts.Connect");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options2 = {
    tooltip: {
        trigger: "axis", 
        axisPointer: {
            type: "shadow"
        }
    }, 
    legend: {
        data: [ "\u76f4\u63a5\u8bbf\u95ee", "\u90ae\u4ef6\u8425\u9500", "\u8054\u76df\u5e7f\u544a", "\u89c6\u9891\u5e7f\u544a", "\u641c\u7d22\u5f15\u64ce" ]
    }, 
    toolbox: {
        show: true, 
        orient: "vertical", 
        y: "center", 
        feature: {
            mark: {
                show: true
            }, 
            magicType: {
                show: true, 
                type: [ "line", "bar", "stack", "tiled" ]
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    calculable: true, 
    xAxis: [ {
        type: "category", 
        data: [ "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d", "\u5468\u65e5" ]
    } ], 
    yAxis: [ {
        type: "value", 
        splitArea: {
            show: true
        }
    } ], 
    grid: {
        x2: 40
    }, 
    series: [ {
        name: "\u76f4\u63a5\u8bbf\u95ee", 
        type: "bar", 
        stack: "\u603b\u91cf", 
        data: [ 320, 332, 301, 334, 390, 330, 320 ]
    }, {
        name: "\u90ae\u4ef6\u8425\u9500", 
        type: "bar", 
        stack: "\u603b\u91cf", 
        data: [ 120, 132, 101, 134, 90, 230, 210 ]
    }, {
        name: "\u8054\u76df\u5e7f\u544a", 
        type: "bar", 
        stack: "\u603b\u91cf", 
        data: [ 220, 182, 191, 234, 290, 330, 310 ]
    }, {
        name: "\u89c6\u9891\u5e7f\u544a", 
        type: "bar", 
        stack: "\u603b\u91cf", 
        data: [ 150, 232, 201, 154, 190, 330, 410 ]
    }, {
        name: "\u641c\u7d22\u5f15\u64ce", 
        type: "bar", 
        stack: "\u603b\u91cf", 
        data: [ 820, 932, 901, 934, 1290, 1330, 1320 ]
    } ]
};
var options1 = {
    title: {
        text: "\u67d0\u7ad9\u70b9\u7528\u6237\u8bbf\u95ee\u6765\u6e90", 
        subtext: "\u7eaf\u5c5e\u865a\u6784", 
        x: "center"
    }, 
    tooltip: {
        trigger: "item", 
        formatter: "{a} <br/>{b} : {c} ({d}%)"
    }, 
    legend: {
        orient: "vertical", 
        x: "left", 
        data: [ "\u76f4\u63a5\u8bbf\u95ee", "\u90ae\u4ef6\u8425\u9500", "\u8054\u76df\u5e7f\u544a", "\u89c6\u9891\u5e7f\u544a", "\u641c\u7d22\u5f15\u64ce" ]
    }, 
    calculable: true, 
    series: [ {
        name: "\u8bbf\u95ee\u6765\u6e90", 
        type: "pie", 
        radius: "55%", 
        center: Data_Tuple_Nested["/\\"]("50%")(225), 
        data: [ {
            value: 335, 
            name: "\u76f4\u63a5\u8bbf\u95ee"
        }, {
            value: 310, 
            name: "\u90ae\u4ef6\u8425\u9500"
        }, {
            value: 234, 
            name: "\u8054\u76df\u5e7f\u544a"
        }, {
            value: 135, 
            name: "\u89c6\u9891\u5e7f\u544a"
        }, {
            value: 1548, 
            name: "\u641c\u7d22\u5f15\u64ce"
        } ]
    } ]
};
var bind = function (first) {
    return function (second) {
        return function __do() {
            ECharts_Connect.connect(first)(second)();
            return ECharts_Connect.connect(second)(first)();
        };
    };
};
var connectM = function (firstId) {
    return function (secondId) {
        return function __do() {
            var _60 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(firstId))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options1)(true))();
            var _59 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(secondId))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options2)(true))();
            return bind(_60)(_59)();
        };
    };
};
module.exports = {
    bind: bind, 
    connectM: connectM, 
    options1: options1, 
    options2: options2
};

},{"Control.Monad.Eff":12,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Connect":64,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],5:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
    this["<|>"] = $less$bar$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$bar$greater = function (dict) {
    return dict["<|>"];
};
module.exports = {
    "<|>": $less$bar$greater, 
    Alt: Alt
};

},{"Prelude":122}],6:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var some = function (__dict_Alternative_0) {
    return function (__dict_Lazy1_1) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_0["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_0["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_1)(function (_) {
                return many(__dict_Alternative_0)(__dict_Lazy1_1)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_2) {
    return function (__dict_Lazy1_3) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_2["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_2)(__dict_Lazy1_3)(v))(Prelude.pure(__dict_Alternative_2["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
module.exports = {
    Alternative: Alternative, 
    many: many, 
    some: some
};

},{"Control.Alt":5,"Control.Lazy":10,"Prelude":122}],7:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
var forever = function (__dict_Apply_6) {
    return function (a) {
        return $times$greater(__dict_Apply_6)(a)(forever(__dict_Apply_6)(a));
    };
};
module.exports = {
    "*>": $times$greater, 
    "<*": $less$times, 
    forever: forever, 
    lift2: lift2, 
    lift3: lift3, 
    lift4: lift4, 
    lift5: lift5
};

},{"Prelude":122}],8:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Prelude":122}],9:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
    this["<<="] = $less$less$eq;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$less$eq = function (dict) {
    return dict["<<="];
};
var $eq$less$eq = function (__dict_Extend_0) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_0)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_1) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_1)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_2) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_2)(f)(w);
        };
    };
};
var extendArr = function (__dict_Semigroup_3) {
    return new Extend(function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_3)(w)(w$prime));
                });
            };
        };
    }, function () {
        return Prelude.functorArr;
    });
};
var duplicate = function (__dict_Extend_4) {
    return function (w) {
        return $less$less$eq(__dict_Extend_4)(Prelude.id(Prelude.categoryArr))(w);
    };
};
module.exports = {
    "<<=": $less$less$eq, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    Extend: Extend, 
    duplicate: duplicate, 
    extendArr: extendArr
};

},{"Prelude":122}],10:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Lazy(defer) {
    this.defer = defer;
};
function Lazy1(defer1) {
    this.defer1 = defer1;
};
function Lazy2(defer2) {
    this.defer2 = defer2;
};
var defer2 = function (dict) {
    return dict.defer2;
};
var fix2 = function (__dict_Lazy2_0) {
    return function (f) {
        return defer2(__dict_Lazy2_0)(function (_) {
            return f(fix2(__dict_Lazy2_0)(f));
        });
    };
};
var defer1 = function (dict) {
    return dict.defer1;
};
var fix1 = function (__dict_Lazy1_1) {
    return function (f) {
        return defer1(__dict_Lazy1_1)(function (_) {
            return f(fix1(__dict_Lazy1_1)(f));
        });
    };
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_2) {
    return function (f) {
        return defer(__dict_Lazy_2)(function (_) {
            return f(fix(__dict_Lazy_2)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    Lazy1: Lazy1, 
    Lazy2: Lazy2, 
    defer: defer, 
    defer1: defer1, 
    defer2: defer2, 
    fix: fix, 
    fix1: fix1, 
    fix2: fix2
};

},{"Prelude":122}],11:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function random() {  return Math.random();};
module.exports = {
    random: random
};

},{"Prelude":122}],12:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function returnE(a) {  return function() {    return a;  };};
function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
function runPure(f) {  return f();};
function untilE(f) {  return function() {    while (!f());    return {};  };};
function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(bindE, function () {
    return applyEff;
});
var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
    return functorEff;
});
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    applicativeEff: applicativeEff, 
    applyEff: applyEff, 
    bindE: bindE, 
    bindEff: bindEff, 
    forE: forE, 
    foreachE: foreachE, 
    functorEff: functorEff, 
    monadEff: monadEff, 
    returnE: returnE, 
    runPure: runPure, 
    untilE: untilE, 
    whileE: whileE
};

},{"Prelude":122}],13:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
function newSTRef(val) {  return function() {    return { value: val };  };};
function readSTRef(ref) {  return function() {    return ref.value;  };};
function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
function runST(f) {  return f;};
var pureST = function (st) {
    return Control_Monad_Eff.runPure(runST(st));
};
module.exports = {
    modifySTRef: modifySTRef, 
    newSTRef: newSTRef, 
    pureST: pureST, 
    readSTRef: readSTRef, 
    runST: runST, 
    writeSTRef: writeSTRef
};

},{"Control.Monad.Eff":12,"Prelude":122}],14:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var guard = function (__dict_MonadPlus_0) {
    return function (_151) {
        if (_151) {
            return Prelude["return"](__dict_MonadPlus_0["__superclass_Prelude.Monad_0"]())(Prelude.unit);
        };
        if (!_151) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match");
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard
};

},{"Control.Plus":15,"Prelude":122}],15:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty
};

},{"Prelude":122}],16:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var $tilde$greater = function (__dict_EncodeJson_0) {
    return function (_751) {
        return function (_752) {
            return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_751.value0)(_751.value1))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.insert(_751.value0)(_751.value1))(Data_Argonaut_Core.fromObject))(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(_752));
        };
    };
};
var $qmark$greater$greater$eq = function (_753) {
    return function (_754) {
        if (_753 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_753.value0);
        };
        return Data_Either.Left.create("Couldn't decode " + _754);
    };
};
var $colon$eq = function (__dict_EncodeJson_1) {
    return function (k) {
        return function (v) {
            return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_1)(v));
        };
    };
};
var $dot$qmark = function (__dict_DecodeJson_2) {
    return function (o) {
        return function (s) {
            return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_2))(Data_StrMap.lookup(s)(o));
        };
    };
};
module.exports = {
    ".?": $dot$qmark, 
    ":=": $colon$eq, 
    "?>>=": $qmark$greater$greater$eq, 
    "~>": $tilde$greater
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Decode":18,"Data.Argonaut.Encode":19,"Data.Either":32,"Data.Maybe":39,"Data.StrMap":50,"Data.Tuple":56,"Prelude":122}],17:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_StrMap = require("Data.StrMap");
var Optic_Prism = require("Optic.Prism");
var Optic_Fold = require("Optic.Fold");
var Data_Maybe = require("Data.Maybe");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
function fromNull(_){return null;};
function fromBoolean(b){return b;};
function fromNumber(n){return n;};
function fromString(s){return s;};
function fromArray(a){return a;};
function fromObject(o){return o;};
var jsonNull = null;;
function _stringify(j){ return JSON.stringify(j); };
function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };

    function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
        return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
        var a = [];
        for (var k in o) {
          a.push(k);
        }
        return a;
      }

      if (a == null) {
        if (b == null) return EQ;
        else return LT;
      } else if (typeof a === 'boolean') {
        if (typeof b === 'boolean') {
          // boolean / boolean
          if (a === b) return EQ;
          else if (a == false) return LT;
          else return GT;
        } else if (b == null) return GT;
        else return LT;
      } else if (typeof a === 'number') {
        if (typeof b === 'number') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else return LT;
      } else if (typeof a === 'string') {
        if (typeof b === 'string') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else return LT;
      } else if (isArray(a)) {
        if (isArray(b)) {
          for (var i = 0; i < Math.min(a.length, b.length); i++) {
            var c = _compare(EQ, GT, LT, a[i], b[i]);

            if (c !== EQ) return c;
          }
          if (a.length === b.length) return EQ;
          else if (a.length < b.length) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else return LT;
      }
      else {
        if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else if (isArray(b)) return GT;
        else {
          var akeys = keys(a);
          var bkeys = keys(b);

          var keys = akeys.concat(bkeys).sort();

          for (var i = 0; i < keys.length; i++) {
            var k = keys[i];

            if (a[k] === undefined) return LT;
            else if (b[k] === undefined) return GT;

            var c = _compare(EQ, GT, LT, a[k], b[k]);

            if (c !== EQ) return c;
          }

          if (akeys.length === bkeys.length) return EQ;
          else if (akeys.length < bkeys.length) return LT;
          else return GT;
        }
      }
    }
    ;
var verbJsonType = function (def) {
    return function (f) {
        return function (fold) {
            return fold(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
var showJson = new Prelude.Show(_stringify);
var jsonZero = fromNumber(0);
var jsonTrue = fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return fromObject(Data_StrMap.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return fromArray([ j ]);
};
var jsonFalse = fromBoolean(false);
var jsonEmptyString = fromString("");
var jsonEmptyObject = fromObject(Data_StrMap.empty);
var jsonEmptyArray = fromArray([  ]);
var isJsonType = verbJsonType(false)(Prelude["const"](true));
var foldJsonString = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isString = isJsonType(foldJsonString);
var jsonStringL = function (__dict_Applicative_0) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_0)(Data_Profunctor_Choice.choiceArr)(isString));
};
var toString = toJsonType(foldJsonString);
var stringL = function (__dict_Applicative_1) {
    return function (__dict_Choice_2) {
        return Optic_Prism["prism'"](fromString)(toString)(__dict_Applicative_1)(__dict_Choice_2);
    };
};
var foldJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(foldJsonObject);
var jsonObjectL = function (__dict_Applicative_3) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_3)(Data_Profunctor_Choice.choiceArr)(isObject));
};
var toObject = toJsonType(foldJsonObject);
var objectL = function (__dict_Applicative_4) {
    return function (__dict_Choice_5) {
        return Optic_Prism["prism'"](fromObject)(toObject)(__dict_Applicative_4)(__dict_Choice_5);
    };
};
var foldJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNumber = isJsonType(foldJsonNumber);
var jsonNumberL = function (__dict_Applicative_6) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_6)(Data_Profunctor_Choice.choiceArr)(isNumber));
};
var toNumber = toJsonType(foldJsonNumber);
var numberL = function (__dict_Applicative_7) {
    return function (__dict_Choice_8) {
        return Optic_Prism["prism'"](fromNumber)(toNumber)(__dict_Applicative_7)(__dict_Choice_8);
    };
};
var foldJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNull = isJsonType(foldJsonNull);
var jsonNullL = function (__dict_Applicative_9) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_9)(Data_Profunctor_Choice.choiceArr)(isNull));
};
var toNull = toJsonType(foldJsonNull);
var nullL = function (__dict_Applicative_10) {
    return function (__dict_Choice_11) {
        return Optic_Prism["prism'"](fromNull)(toNull)(__dict_Applicative_10)(__dict_Choice_11);
    };
};
var foldJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(foldJsonBoolean);
var jsonBooleanL = function (__dict_Applicative_12) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_12)(Data_Profunctor_Choice.choiceArr)(isBoolean));
};
var toBoolean = toJsonType(foldJsonBoolean);
var foldJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
        };
    };
};
var isArray = isJsonType(foldJsonArray);
var jsonArrayL = function (__dict_Applicative_13) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_13)(Data_Profunctor_Choice.choiceArr)(isArray));
};
var toArray = toJsonType(foldJsonArray);
var foldJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return _foldJson(a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
var ordJson = new Prelude.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return _compare(Prelude.EQ.value, Prelude.GT.value, Prelude.LT.value, a, b);
    };
});
var eqJson = new Prelude.Eq(function (j) {
    return function (j$prime) {
        return !Prelude["=="](eqJson)(j)(j$prime);
    };
}, function (j1) {
    return function (j2) {
        return Prelude["=="](Prelude.eqOrdering)(Prelude.compare(ordJson)(j1)(j2))(Prelude.EQ.value);
    };
});
var eqJNull = new Prelude.Eq(function (n1) {
    return function (n2) {
        return false;
    };
}, function (n1) {
    return function (n2) {
        return true;
    };
});
var ordJNull = new Prelude.Ord(function () {
    return eqJNull;
}, Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["const"])(Prelude["const"](Prelude.EQ.value)));
var booleanL = function (__dict_Applicative_14) {
    return function (__dict_Choice_15) {
        return Optic_Prism["prism'"](fromBoolean)(toBoolean)(__dict_Applicative_14)(__dict_Choice_15);
    };
};
var arrayL = function (__dict_Applicative_16) {
    return function (__dict_Choice_17) {
        return Optic_Prism["prism'"](fromArray)(toArray)(__dict_Applicative_16)(__dict_Choice_17);
    };
};
module.exports = {
    arrayL: arrayL, 
    booleanL: booleanL, 
    eqJNull: eqJNull, 
    eqJson: eqJson, 
    foldJson: foldJson, 
    foldJsonArray: foldJsonArray, 
    foldJsonBoolean: foldJsonBoolean, 
    foldJsonNull: foldJsonNull, 
    foldJsonNumber: foldJsonNumber, 
    foldJsonObject: foldJsonObject, 
    foldJsonString: foldJsonString, 
    fromArray: fromArray, 
    fromBoolean: fromBoolean, 
    fromNull: fromNull, 
    fromNumber: fromNumber, 
    fromObject: fromObject, 
    fromString: fromString, 
    isArray: isArray, 
    isBoolean: isBoolean, 
    isJsonType: isJsonType, 
    isNull: isNull, 
    isNumber: isNumber, 
    isObject: isObject, 
    isString: isString, 
    jsonArrayL: jsonArrayL, 
    jsonBooleanL: jsonBooleanL, 
    jsonEmptyArray: jsonEmptyArray, 
    jsonEmptyObject: jsonEmptyObject, 
    jsonEmptyString: jsonEmptyString, 
    jsonFalse: jsonFalse, 
    jsonNull: jsonNull, 
    jsonNullL: jsonNullL, 
    jsonNumberL: jsonNumberL, 
    jsonObjectL: jsonObjectL, 
    jsonSingletonArray: jsonSingletonArray, 
    jsonSingletonObject: jsonSingletonObject, 
    jsonStringL: jsonStringL, 
    jsonTrue: jsonTrue, 
    jsonZero: jsonZero, 
    nullL: nullL, 
    numberL: numberL, 
    objectL: objectL, 
    ordJNull: ordJNull, 
    ordJson: ordJson, 
    showJson: showJson, 
    showJsonNull: showJsonNull, 
    stringL: stringL, 
    toArray: toArray, 
    toBoolean: toBoolean, 
    toNull: toNull, 
    toNumber: toNumber, 
    toObject: toObject, 
    toString: toString
};

},{"Data.Function":35,"Data.Maybe":39,"Data.Profunctor.Choice":46,"Data.StrMap":50,"Optic.Fold":116,"Optic.Prism":120,"Prelude":122}],18:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_String = require("Data.String");
var Data_Maybe = require("Data.Maybe");
var Data_Traversable = require("Data.Traversable");
var Data_Map = require("Data.Map");
var Data_Either = require("Data.Either");
var Optic_Prism = require("Optic.Prism");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Optic_Index = require("Optic.Index");
var Control_Alt = require("Control.Alt");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_StrMap = require("Data.StrMap");
var Data_Tuple = require("Data.Tuple");
function DecodeJson(decodeJson) {
    this.decodeJson = decodeJson;
};
var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
var decodeJson = function (dict) {
    return dict.decodeJson;
};
var decodeJsonChar = new DecodeJson(function (j) {
    var go = function (_750) {
        if (_750 instanceof Data_Maybe.Nothing) {
            return Data_Either.Left.create("Expected character but found: " + Prelude.show(Data_Argonaut_Core.showJson)(j));
        };
        if (_750 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_750.value0);
        };
        throw new Error("Failed pattern match");
    };
    return Prelude[">>="](Data_Either.bindEither)(Prelude["<$>"](Data_Either.functorEither)(Data_String.charAt(0))(decodeJson(decodeJsonString)(j)))(go);
});
var decodeJsonEither = function (__dict_DecodeJson_0) {
    return function (__dict_DecodeJson_1) {
        return new DecodeJson(function (j) {
            return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(__dict_DecodeJson_0)(j)))(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(__dict_DecodeJson_1)(j)));
        });
    };
};
var decodeJsonMaybe = function (__dict_DecodeJson_2) {
    return new DecodeJson(function (j) {
        return Control_Alt["<|>"](Data_Either.altEither)(decodeJson(decodeJsonMaybe(__dict_DecodeJson_2))(j))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
    });
};
var decodeMaybe = function (__dict_DecodeJson_8) {
    return function (json) {
        return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_8)(json));
    };
};
var decodeL = function (__dict_DecodeJson_9) {
    return function (__dict_EncodeJson_10) {
        return function (__dict_Applicative_11) {
            return function (__dict_Choice_12) {
                return Optic_Prism["prism'"](Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_10))(decodeMaybe(__dict_DecodeJson_9))(__dict_Applicative_11)(__dict_Choice_12);
            };
        };
    };
};
var objectFieldL = function (__dict_DecodeJson_13) {
    return function (__dict_EncodeJson_14) {
        return function (key) {
            return function (__dict_Applicative_15) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_13)(__dict_EncodeJson_14)(__dict_Applicative_15)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexStrMap)(key)(__dict_Applicative_15))(Data_Argonaut_Core.objectL(__dict_Applicative_15)(Data_Profunctor_Choice.choiceArr)));
            };
        };
    };
};
var decodeStrMap = function (__dict_DecodeJson_16) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (_32) {
            return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_16))(_32);
        }));
    });
};
var decodeArray = function (__dict_DecodeJson_17) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_33) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_17))(_33);
        }));
    });
};
var decodeJsonTuple = function (__dict_DecodeJson_3) {
    return function (__dict_DecodeJson_4) {
        return new DecodeJson(function (j) {
            var f = function (_749) {
                if (_749.length >= 2) {
                    var _2560 = _749.slice(2);
                    if (_2560.length === 0) {
                        return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(__dict_DecodeJson_3)(_749[0])))(decodeJson(__dict_DecodeJson_4)(_749[1]));
                    };
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](Data_Either.bindEither)(decodeJson(decodeArray(decodeJsonJson))(j))(f);
        });
    };
};
var decodeMap = function (__dict_Ord_5) {
    return function (__dict_DecodeJson_6) {
        return function (__dict_DecodeJson_7) {
            return new DecodeJson(function (j) {
                return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(__dict_Ord_5))(decodeJson(decodeArray(decodeJsonTuple(__dict_DecodeJson_6)(__dict_DecodeJson_7)))(j));
            });
        };
    };
};
var arrayIndexL = function (__dict_DecodeJson_18) {
    return function (__dict_EncodeJson_19) {
        return function (i) {
            return function (__dict_Applicative_20) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_18)(__dict_EncodeJson_19)(__dict_Applicative_20)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(i)(__dict_Applicative_20))(Data_Argonaut_Core.arrayL(__dict_Applicative_20)(Data_Profunctor_Choice.choiceArr)));
            };
        };
    };
};
module.exports = {
    DecodeJson: DecodeJson, 
    arrayIndexL: arrayIndexL, 
    decodeArray: decodeArray, 
    decodeJson: decodeJson, 
    decodeJsonBoolean: decodeJsonBoolean, 
    decodeJsonChar: decodeJsonChar, 
    decodeJsonEither: decodeJsonEither, 
    decodeJsonJson: decodeJsonJson, 
    decodeJsonMaybe: decodeJsonMaybe, 
    decodeJsonNull: decodeJsonNull, 
    decodeJsonNumber: decodeJsonNumber, 
    decodeJsonString: decodeJsonString, 
    decodeJsonTuple: decodeJsonTuple, 
    decodeL: decodeL, 
    decodeMap: decodeMap, 
    decodeMaybe: decodeMaybe, 
    decodeStrMap: decodeStrMap, 
    objectFieldL: objectFieldL
};

},{"Control.Alt":5,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Either":32,"Data.Map":37,"Data.Maybe":39,"Data.Profunctor.Choice":46,"Data.StrMap":50,"Data.String":53,"Data.Traversable":54,"Data.Tuple":56,"Optic.Index":118,"Optic.Prism":120,"Prelude":122}],19:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Map = require("Data.Map");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_StrMap = require("Data.StrMap");
function EncodeJson(encodeJson) {
    this.encodeJson = encodeJson;
};
var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryArr));
var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
var encodeJson = function (dict) {
    return dict.encodeJson;
};
var encodeJsonArray = function (__dict_EncodeJson_0) {
    return new EncodeJson(function (json) {
        return Data_Argonaut_Core.fromArray(Prelude["<$>"](Data_Array.functorArray)(encodeJson(__dict_EncodeJson_0))(json));
    });
};
var encodeJsonChar = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonJString))(Data_Char.charString));
var encodeJsonEither = function (__dict_EncodeJson_1) {
    return function (__dict_EncodeJson_2) {
        return new EncodeJson(function (_747) {
            if (_747 instanceof Data_Either.Left) {
                return encodeJson(__dict_EncodeJson_1)(_747.value0);
            };
            if (_747 instanceof Data_Either.Right) {
                return encodeJson(__dict_EncodeJson_2)(_747.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
};
var encodeJsonMaybe = function (__dict_EncodeJson_3) {
    return new EncodeJson(function (_745) {
        if (_745 instanceof Data_Maybe.Nothing) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (_745 instanceof Data_Maybe.Just) {
            return encodeJson(__dict_EncodeJson_3)(_745.value0);
        };
        throw new Error("Failed pattern match");
    });
};
var encodeJsonTuple = function (__dict_EncodeJson_4) {
    return function (__dict_EncodeJson_5) {
        return new EncodeJson(function (_746) {
            return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(__dict_EncodeJson_4)(_746.value0), encodeJson(__dict_EncodeJson_5)(_746.value1) ]);
        });
    };
};
var encodeMap = function (__dict_Ord_6) {
    return function (__dict_EncodeJson_7) {
        return function (__dict_EncodeJson_8) {
            return new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonArray(encodeJsonTuple(__dict_EncodeJson_7)(__dict_EncodeJson_8))))(Data_Map.toList));
        };
    };
};
var encodeStrMap = function (__dict_EncodeJson_9) {
    return new EncodeJson(function (m) {
        return Data_Argonaut_Core.fromObject(Prelude["<$>"](Data_StrMap.functorStrMap)(encodeJson(__dict_EncodeJson_9))(m));
    });
};
module.exports = {
    EncodeJson: EncodeJson, 
    encodeJson: encodeJson, 
    encodeJsonArray: encodeJsonArray, 
    encodeJsonChar: encodeJsonChar, 
    encodeJsonEither: encodeJsonEither, 
    encodeJsonJBoolean: encodeJsonJBoolean, 
    encodeJsonJNumber: encodeJsonJNumber, 
    encodeJsonJString: encodeJsonJString, 
    encodeJsonJson: encodeJsonJson, 
    encodeJsonMaybe: encodeJsonMaybe, 
    encodeJsonTuple: encodeJsonTuple, 
    encodeJsonUnit: encodeJsonUnit, 
    encodeMap: encodeMap, 
    encodeStrMap: encodeStrMap
};

},{"Data.Argonaut.Core":17,"Data.Array":27,"Data.Char":28,"Data.Either":32,"Data.Map":37,"Data.Maybe":39,"Data.StrMap":50,"Data.Tuple":56,"Prelude":122}],20:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Date = require("Data.Date");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");

function jsDateToJson(a) {return a;}
;
var dateEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (date) {
    return jsDateToJson(Data_Date.toJSDate(date));
});
module.exports = {
    dateEncodeJson: dateEncodeJson, 
    jsDateToJson: jsDateToJson
};

},{"Data.Argonaut.Encode":19,"Data.Date":31,"Prelude":122}],21:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Monoid = require("Data.Monoid");
var Data_Either = require("Data.Either");
var JsonPrim = {
    create: function (value) {
        return value;
    }
};
function JCursorTop() {

};
JCursorTop.value = new JCursorTop();
function JField(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
JField.create = function (value0) {
    return function (value1) {
        return new JField(value0, value1);
    };
};
function JIndex(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
JIndex.create = function (value0) {
    return function (value1) {
        return new JIndex(value0, value1);
    };
};
var jsonNull0 = null;;
var showJCursor = new Prelude.Show(function (_841) {
    if (_841 instanceof JCursorTop) {
        return "";
    };
    if (_841 instanceof JField) {
        return "." + (_841.value0 + Prelude.show(showJCursor)(_841.value1));
    };
    if (_841 instanceof JIndex) {
        return "[" + (Prelude.show(Prelude.showNumber)(_841.value0) + ("]" + Prelude.show(showJCursor)(_841.value1)));
    };
    throw new Error("Failed pattern match");
});
var semigroupJCursor = new Prelude.Semigroup(function (_846) {
    return function (_847) {
        if (_847 instanceof JCursorTop) {
            return _846;
        };
        if (_846 instanceof JCursorTop) {
            return _847;
        };
        if (_846 instanceof JField) {
            return new JField(_846.value0, Prelude["<>"](semigroupJCursor)(_846.value1)(_847));
        };
        if (_846 instanceof JIndex) {
            return new JIndex(_846.value0, Prelude["<>"](semigroupJCursor)(_846.value1)(_847));
        };
        throw new Error("Failed pattern match");
    };
});
var runJsonPrim = function (_829) {
    return _829;
};
var showJsonPrim = new Prelude.Show(function (p) {
    return runJsonPrim(p)(Prelude.show(Data_Argonaut_Core.showJsonNull))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.show(Prelude.showString));
});
var primToJson = function (p) {
    return runJsonPrim(p)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
};
var primStr = function (v) {
    return function (_) {
        return function (__1) {
            return function (__2) {
                return function (f) {
                    return f(v);
                };
            };
        };
    };
};
var primNum = function (v) {
    return function (_) {
        return function (__1) {
            return function (f) {
                return function (__2) {
                    return f(v);
                };
            };
        };
    };
};
var primNull = function (f) {
    return function (_) {
        return function (__1) {
            return function (__2) {
                return f(jsonNull0);
            };
        };
    };
};
var primBool = function (v) {
    return function (_) {
        return function (f) {
            return function (__1) {
                return function (__2) {
                    return f(v);
                };
            };
        };
    };
};
var toPrims = Data_Argonaut_Core.foldJson(Prelude["const"]([ new Data_Tuple.Tuple(JCursorTop.value, primNull) ]))(function (b) {
    return [ Data_Tuple.Tuple.create(JCursorTop.value)(primBool(b)) ];
})(function (n) {
    return [ Data_Tuple.Tuple.create(JCursorTop.value)(primNum(n)) ];
})(function (s) {
    return [ Data_Tuple.Tuple.create(JCursorTop.value)(primStr(s)) ];
})(function (a) {
    var zipped = Data_Array.zipWith(Data_Tuple.Tuple.create)(Data_Array.range(0)(Data_Array.length(a) - 1))(a);
    var f = function (_837) {
        return Prelude["<$>"](Data_Array.functorArray)(function (t) {
            return new Data_Tuple.Tuple(new JIndex(_837.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
        })(toPrims(_837.value1));
    };
    return Prelude[">>="](Data_Array.bindArray)(zipped)(f);
})(function (o) {
    var f = function (_838) {
        return Prelude["<$>"](Data_Array.functorArray)(function (t) {
            return new Data_Tuple.Tuple(new JField(_838.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
        })(toPrims(_838.value1));
    };
    return Prelude[">>="](Data_Array.bindArray)(Data_StrMap.toList(o))(f);
});
var monoidJCursor = new Data_Monoid.Monoid(function () {
    return semigroupJCursor;
}, JCursorTop.value);
var inferEmpty = function (_832) {
    if (_832 instanceof JCursorTop) {
        return Data_Argonaut_Core.jsonNull;
    };
    if (_832 instanceof JField) {
        return Data_Argonaut_Core.jsonEmptyObject;
    };
    if (_832 instanceof JIndex) {
        return Data_Argonaut_Core.jsonEmptyArray;
    };
    throw new Error("Failed pattern match");
};
var fail = function (__dict_Show_0) {
    return function (x) {
        return Data_Either.Left.create("Expected String or Number but found: " + Prelude.show(__dict_Show_0)(x));
    };
};
var eqJCursor = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqJCursor)(a)(b);
    };
}, function (_842) {
    return function (_843) {
        if (_842 instanceof JCursorTop && _843 instanceof JCursorTop) {
            return true;
        };
        if (_842 instanceof JField && _843 instanceof JField) {
            return _842.value0 === _843.value0 && Prelude["=="](eqJCursor)(_842.value1)(_843.value1);
        };
        if (_842 instanceof JIndex && _843 instanceof JIndex) {
            return _842.value0 === _843.value0 && Prelude["=="](eqJCursor)(_842.value1)(_843.value1);
        };
        return false;
    };
});
var ordJCursor = new Prelude.Ord(function () {
    return eqJCursor;
}, function (_844) {
    return function (_845) {
        if (_844 instanceof JCursorTop && _845 instanceof JCursorTop) {
            return Prelude.EQ.value;
        };
        if (_844 instanceof JCursorTop) {
            return Prelude.LT.value;
        };
        if (_845 instanceof JCursorTop) {
            return Prelude.GT.value;
        };
        if (_844 instanceof JField && _845 instanceof JIndex) {
            return Prelude.LT.value;
        };
        if (_844 instanceof JIndex && _845 instanceof JField) {
            return Prelude.GT.value;
        };
        if (_844 instanceof JField && _845 instanceof JField) {
            var _2765 = Prelude.compare(Prelude.ordString)(_844.value0)(_845.value0);
            if (_2765 instanceof Prelude.EQ) {
                return Prelude.compare(ordJCursor)(_844.value1)(_845.value1);
            };
            return _2765;
        };
        if (_844 instanceof JIndex && _845 instanceof JIndex) {
            var _2770 = Prelude.compare(Prelude.ordNumber)(_844.value0)(_845.value0);
            if (_2770 instanceof Prelude.EQ) {
                return Prelude.compare(ordJCursor)(_844.value1)(_845.value1);
            };
            return _2770;
        };
        throw new Error("Failed pattern match");
    };
});
var encodeJsonJCursor = new Data_Argonaut_Encode.EncodeJson((function () {
    var loop = function (_848) {
        if (_848 instanceof JCursorTop) {
            return [  ];
        };
        if (_848 instanceof JField) {
            return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_848.value0) ])(loop(_848.value1));
        };
        if (_848 instanceof JIndex) {
            return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_848.value0) ])(loop(_848.value1));
        };
        throw new Error("Failed pattern match");
    };
    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJson)))(loop);
})());
var downIndex = function (i) {
    var downIndex$prime = function (_836) {
        if (_836 instanceof JCursorTop) {
            return new JIndex(i, JCursorTop.value);
        };
        if (_836 instanceof JField) {
            return new JField(_836.value0, downIndex$prime(_836.value1));
        };
        if (_836 instanceof JIndex) {
            return new JIndex(_836.value0, downIndex$prime(_836.value1));
        };
        throw new Error("Failed pattern match");
    };
    return downIndex$prime;
};
var downField = function (i) {
    var downField$prime = function (_835) {
        if (_835 instanceof JCursorTop) {
            return new JField(i, JCursorTop.value);
        };
        if (_835 instanceof JField) {
            return new JField(_835.value0, downField$prime(_835.value1));
        };
        if (_835 instanceof JIndex) {
            return new JIndex(_835.value0, downField$prime(_835.value1));
        };
        throw new Error("Failed pattern match");
    };
    return downField$prime;
};
var insideOut = function (_830) {
    if (_830 instanceof JCursorTop) {
        return JCursorTop.value;
    };
    if (_830 instanceof JField) {
        return downField(_830.value0)(insideOut(_830.value1));
    };
    if (_830 instanceof JIndex) {
        return downIndex(_830.value0)(insideOut(_830.value1));
    };
    throw new Error("Failed pattern match");
};
var decodeJsonJCursor = new Data_Argonaut_Decode.DecodeJson(function (j) {
    var loop = function (_849) {
        if (_849.length === 0) {
            return new Data_Either.Right(JCursorTop.value);
        };
        if (_849.length >= 1) {
            var _2798 = _849.slice(1);
            return Prelude[">>="](Data_Either.bindEither)(loop(_2798))(function (_34) {
                return Data_Argonaut_Core.foldJson(fail(Data_Argonaut_Core.showJsonNull))(fail(Prelude.showBoolean))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JIndex.create)(_34)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JField.create)(_34)))(fail(Prelude.showArray(Data_Argonaut_Core.showJson)))(fail(Data_StrMap.showStrMap(Data_Argonaut_Core.showJson)))(_849[0]);
            });
        };
        throw new Error("Failed pattern match");
    };
    return Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonJson))(j))(loop);
});
var cursorSet = function (_833) {
    return function (_834) {
        if (_833 instanceof JCursorTop) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["const"](_834));
        };
        if (_833 instanceof JField) {
            var g = function (m) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Prelude.flip(Data_StrMap.insert(_833.value0))(m)))(cursorSet(_833.value1)(_834)(Data_Maybe.fromMaybe(inferEmpty(_833.value1))(Data_StrMap.lookup(_833.value0)(m))));
            };
            var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Data_StrMap.singleton(_833.value0)))(cursorSet(_833.value1)(_834)(inferEmpty(_833.value1)));
            return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g);
        };
        if (_833 instanceof JIndex) {
            var setArr = function (xs) {
                return function (i_2) {
                    return function (v_3) {
                        var len = Data_Array.length(xs);
                        return i_2 < 0 ? Data_Maybe.Nothing.value : i_2 >= len ? setArr(Prelude["<>"](Data_Array.semigroupArray)(xs)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(i_2 - len))))(i_2)(v_3) : Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Argonaut_Core.fromArray)(Data_Array.updateAt(i_2)(v_3)(xs));
                    };
                };
            };
            var g = function (a) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(cursorSet(_833.value1)(_834)(Data_Maybe.fromMaybe(inferEmpty(_833.value1))(Data_Array["!!"](a)(_833.value0))))(setArr(a)(_833.value0));
            };
            var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromArray)(Prelude.flip(Data_Array.updateAt(_833.value0))(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(_833.value0)))))(cursorSet(_833.value1)(_834)(inferEmpty(_833.value1)));
            return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g)(Prelude["const"](d));
        };
        throw new Error("Failed pattern match");
    };
};
var fromPrims = function (a) {
    var f = function (_839) {
        return function (_840) {
            return Prelude[">>="](Data_Maybe.bindMaybe)(_839)(cursorSet(_840.value0)(runJsonPrim(_840.value1)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString)));
        };
    };
    return Data_Foldable.foldlArray(f)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(inferEmpty)(Data_Tuple.fst))(Data_Array.head(a)))(a);
};
var cursorGet = function (_831) {
    if (_831 instanceof JCursorTop) {
        return Data_Maybe.Just.create;
    };
    if (_831 instanceof JField) {
        var g = function (m) {
            return Prelude[">>="](Data_Maybe.bindMaybe)(Data_StrMap.lookup(_831.value0)(m))(cursorGet(_831.value1));
        };
        return Data_Argonaut_Core.foldJsonObject(Data_Maybe.Nothing.value)(g);
    };
    if (_831 instanceof JIndex) {
        var g = function (a) {
            return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](a)(_831.value0))(cursorGet(_831.value1));
        };
        return Data_Argonaut_Core.foldJsonArray(Data_Maybe.Nothing.value)(g);
    };
    throw new Error("Failed pattern match");
};
module.exports = {
    JCursorTop: JCursorTop, 
    JField: JField, 
    JIndex: JIndex, 
    JsonPrim: JsonPrim, 
    cursorGet: cursorGet, 
    cursorSet: cursorSet, 
    decodeJsonJCursor: decodeJsonJCursor, 
    downField: downField, 
    downIndex: downIndex, 
    encodeJsonJCursor: encodeJsonJCursor, 
    eqJCursor: eqJCursor, 
    fromPrims: fromPrims, 
    insideOut: insideOut, 
    monoidJCursor: monoidJCursor, 
    ordJCursor: ordJCursor, 
    primBool: primBool, 
    primNull: primNull, 
    primNum: primNum, 
    primStr: primStr, 
    primToJson: primToJson, 
    runJsonPrim: runJsonPrim, 
    semigroupJCursor: semigroupJCursor, 
    showJCursor: showJCursor, 
    showJsonPrim: showJsonPrim, 
    toPrims: toPrims
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Decode":18,"Data.Argonaut.Encode":19,"Data.Array":27,"Data.Either":32,"Data.Foldable":34,"Data.Maybe":39,"Data.Monoid":45,"Data.StrMap":50,"Data.Tuple":56,"Prelude":122}],22:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
var jsonParser = function (j) {
    return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
};
module.exports = {
    jsonParser: jsonParser
};

},{"Data.Either":32,"Data.Function":35,"Prelude":122}],23:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
function Printer(printJson) {
    this.printJson = printJson;
};
var printerString = new Printer(Prelude.show(Data_Argonaut_Core.showJson));
var printJson = function (dict) {
    return dict.printJson;
};
module.exports = {
    Printer: Printer, 
    printJson: printJson, 
    printerString: printerString
};

},{"Data.Argonaut.Core":17,"Prelude":122}],24:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_JCursor = require("Data.Argonaut.JCursor");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Parser = require("Data.Argonaut.Parser");
var Data_Argonaut_Printer = require("Data.Argonaut.Printer");
var Prelude = require("Prelude");
var $tilde$greater = Data_Argonaut_Combinators["~>"];
var $qmark$greater$greater$eq = Data_Argonaut_Combinators["?>>="];
var $colon$eq = Data_Argonaut_Combinators[":="];
var $dot$qmark = Data_Argonaut_Combinators[".?"];
var toString = Data_Argonaut_Core.toString;
var toPrims = Data_Argonaut_JCursor.toPrims;
var toObject = Data_Argonaut_Core.toObject;
var toNumber = Data_Argonaut_Core.toNumber;
var toNull = Data_Argonaut_Core.toNull;
var toBoolean = Data_Argonaut_Core.toBoolean;
var toArray = Data_Argonaut_Core.toArray;
var stringL = Data_Argonaut_Core.stringL;
var runJsonPrim = Data_Argonaut_JCursor.runJsonPrim;
var printJson = Data_Argonaut_Printer.printJson;
var primToJson = Data_Argonaut_JCursor.primToJson;
var primStr = Data_Argonaut_JCursor.primStr;
var primNum = Data_Argonaut_JCursor.primNum;
var primNull = Data_Argonaut_JCursor.primNull;
var primBool = Data_Argonaut_JCursor.primBool;
var objectL = Data_Argonaut_Core.objectL;
var objectFieldL = Data_Argonaut_Decode.objectFieldL;
var numberL = Data_Argonaut_Core.numberL;
var nullL = Data_Argonaut_Core.nullL;
var jsonZero = Data_Argonaut_Core.jsonZero;
var jsonTrue = Data_Argonaut_Core.jsonTrue;
var jsonStringL = Data_Argonaut_Core.jsonStringL;
var jsonSingletonObject = Data_Argonaut_Core.jsonSingletonObject;
var jsonSingletonArray = Data_Argonaut_Core.jsonSingletonArray;
var jsonParser = Data_Argonaut_Parser.jsonParser;
var jsonObjectL = Data_Argonaut_Core.jsonObjectL;
var jsonNumberL = Data_Argonaut_Core.jsonNumberL;
var jsonNullL = Data_Argonaut_Core.jsonNullL;
var jsonNull = Data_Argonaut_Core.jsonNull;
var jsonFalse = Data_Argonaut_Core.jsonFalse;
var jsonEmptyString = Data_Argonaut_Core.jsonEmptyString;
var jsonEmptyObject = Data_Argonaut_Core.jsonEmptyObject;
var jsonEmptyArray = Data_Argonaut_Core.jsonEmptyArray;
var jsonBooleanL = Data_Argonaut_Core.jsonBooleanL;
var jsonArrayL = Data_Argonaut_Core.jsonArrayL;
var isString = Data_Argonaut_Core.isString;
var isObject = Data_Argonaut_Core.isObject;
var isNumber = Data_Argonaut_Core.isNumber;
var isNull = Data_Argonaut_Core.isNull;
var isBoolean = Data_Argonaut_Core.isBoolean;
var isArray = Data_Argonaut_Core.isArray;
var insideOut = Data_Argonaut_JCursor.insideOut;
var fromString = Data_Argonaut_Core.fromString;
var fromPrims = Data_Argonaut_JCursor.fromPrims;
var fromObject = Data_Argonaut_Core.fromObject;
var fromNumber = Data_Argonaut_Core.fromNumber;
var fromNull = Data_Argonaut_Core.fromNull;
var fromBoolean = Data_Argonaut_Core.fromBoolean;
var fromArray = Data_Argonaut_Core.fromArray;
var foldJsonString = Data_Argonaut_Core.foldJsonString;
var foldJsonObject = Data_Argonaut_Core.foldJsonObject;
var foldJsonNumber = Data_Argonaut_Core.foldJsonNumber;
var foldJsonNull = Data_Argonaut_Core.foldJsonNull;
var foldJsonBoolean = Data_Argonaut_Core.foldJsonBoolean;
var foldJsonArray = Data_Argonaut_Core.foldJsonArray;
var foldJson = Data_Argonaut_Core.foldJson;
var encodeJson = Data_Argonaut_Encode.encodeJson;
var downIndex = Data_Argonaut_JCursor.downIndex;
var downField = Data_Argonaut_JCursor.downField;
var decodeMaybe = Data_Argonaut_Decode.decodeMaybe;
var decodeL = Data_Argonaut_Decode.decodeL;
var decodeJson = Data_Argonaut_Decode.decodeJson;
var cursorSet = Data_Argonaut_JCursor.cursorSet;
var cursorGet = Data_Argonaut_JCursor.cursorGet;
var booleanL = Data_Argonaut_Core.booleanL;
var arrayL = Data_Argonaut_Core.arrayL;
var arrayIndexL = Data_Argonaut_Decode.arrayIndexL;
module.exports = {
    ".?": $dot$qmark, 
    ":=": $colon$eq, 
    "?>>=": $qmark$greater$greater$eq, 
    arrayIndexL: arrayIndexL, 
    arrayL: arrayL, 
    booleanL: booleanL, 
    decodeJson: decodeJson, 
    decodeL: decodeL, 
    decodeMaybe: decodeMaybe, 
    encodeJson: encodeJson, 
    foldJson: foldJson, 
    foldJsonArray: foldJsonArray, 
    foldJsonBoolean: foldJsonBoolean, 
    foldJsonNull: foldJsonNull, 
    foldJsonNumber: foldJsonNumber, 
    foldJsonObject: foldJsonObject, 
    foldJsonString: foldJsonString, 
    fromArray: fromArray, 
    fromBoolean: fromBoolean, 
    fromNull: fromNull, 
    fromNumber: fromNumber, 
    fromObject: fromObject, 
    fromString: fromString, 
    isArray: isArray, 
    isBoolean: isBoolean, 
    isNull: isNull, 
    isNumber: isNumber, 
    isObject: isObject, 
    isString: isString, 
    jsonArrayL: jsonArrayL, 
    jsonBooleanL: jsonBooleanL, 
    jsonEmptyArray: jsonEmptyArray, 
    jsonEmptyObject: jsonEmptyObject, 
    jsonEmptyString: jsonEmptyString, 
    jsonFalse: jsonFalse, 
    jsonNull: jsonNull, 
    jsonNullL: jsonNullL, 
    jsonNumberL: jsonNumberL, 
    jsonObjectL: jsonObjectL, 
    jsonParser: jsonParser, 
    jsonSingletonArray: jsonSingletonArray, 
    jsonSingletonObject: jsonSingletonObject, 
    jsonStringL: jsonStringL, 
    jsonTrue: jsonTrue, 
    jsonZero: jsonZero, 
    nullL: nullL, 
    numberL: numberL, 
    objectFieldL: objectFieldL, 
    objectL: objectL, 
    printJson: printJson, 
    stringL: stringL, 
    toArray: toArray, 
    toBoolean: toBoolean, 
    toNull: toNull, 
    toNumber: toNumber, 
    toObject: toObject, 
    toString: toString, 
    "~>": $tilde$greater
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Decode":18,"Data.Argonaut.Encode":19,"Data.Argonaut.JCursor":21,"Data.Argonaut.Parser":22,"Data.Argonaut.Printer":23,"Prelude":122}],25:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

  function runSTArray(f) {
    return f;
  };

  function emptySTArray() {
    return [];
  };

  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };

  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };

  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
var pushSTArray = function (arr) {
    return function (a) {
        return pushSTArrayImpl(arr, a);
    };
};
var pokeSTArray = function (arr) {
    return function (i) {
        return function (a) {
            return pokeSTArrayImpl(arr, i, a);
        };
    };
};
var peekSTArray = function (arr) {
    return function (i) {
        return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    emptySTArray: emptySTArray, 
    peekSTArray: peekSTArray, 
    pokeSTArray: pokeSTArray, 
    pushSTArray: pushSTArray, 
    runSTArray: runSTArray
};

},{"Data.Function":35,"Data.Maybe":39,"Prelude":122}],26:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude_Unsafe = require("Prelude.Unsafe");
var Data_Array = require("Data.Array");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Prelude = require("Prelude");
var tail = function (_219) {
    if (_219.length >= 1) {
        var _1062 = _219.slice(1);
        return _1062;
    };
    throw new Error("Failed pattern match");
};
var last = function (xs) {
    return xs[Data_Array.length(xs) - 1];
};
var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
var head = function (_218) {
    if (_218.length >= 1) {
        var _1065 = _218.slice(1);
        return _218[0];
    };
    throw new Error("Failed pattern match");
};
module.exports = {
    head: head, 
    init: init, 
    last: last, 
    tail: tail
};

},{"Data.Array":27,"Data.Maybe.Unsafe":38,"Prelude":122,"Prelude.Unsafe":121}],27:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Prelude_Unsafe = require("Prelude.Unsafe");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
function length (xs) {  return xs.length;};
function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
function reverse (l) {  return l.slice().reverse();};
function drop (n) {  return function (l) {    return l.slice(n);  };};
function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
var $dot$dot = range;
var $bang$bang = function (xs) {
    return function (n) {
        var isInt = function (n_1) {
            return n_1 !== ~~n_1;
        };
        return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
    };
};
var take = function (n) {
    return slice(0)(n);
};
var tail = function (_198) {
    if (_198.length >= 1) {
        var _1021 = _198.slice(1);
        return new Data_Maybe.Just(_1021);
    };
    return Data_Maybe.Nothing.value;
};
var span = (function () {
    var go = function (__copy__214) {
        return function (__copy__215) {
            return function (__copy__216) {
                var _214 = __copy__214;
                var _215 = __copy__215;
                var _216 = __copy__216;
                tco: while (true) {
                    if (_216.length >= 1) {
                        var _1026 = _216.slice(1);
                        if (_215(_216[0])) {
                            var __tco__214 = Prelude[":"](_216[0])(_214);
                            var __tco__215 = _215;
                            _214 = __tco__214;
                            _215 = __tco__215;
                            _216 = _1026;
                            continue tco;
                        };
                    };
                    return {
                        init: reverse(_214), 
                        rest: _216
                    };
                };
            };
        };
    };
    return go([  ]);
})();
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var _1027 = comp(x)(y);
                if (_1027 instanceof Prelude.GT) {
                    return 1;
                };
                if (_1027 instanceof Prelude.EQ) {
                    return 0;
                };
                if (_1027 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match");
            };
        };
        return sortJS(comp$prime)(xs);
    };
};
var sort = function (__dict_Ord_0) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_0))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var semigroupArray = new Prelude.Semigroup(append);
var $$null = function (_200) {
    if (_200.length === 0) {
        return true;
    };
    return false;
};
var nubBy = function (_207) {
    return function (_208) {
        if (_208.length === 0) {
            return [  ];
        };
        if (_208.length >= 1) {
            var _1032 = _208.slice(1);
            return Prelude[":"](_208[0])(nubBy(_207)(filter(function (y) {
                return !_207(_208[0])(y);
            })(_1032)));
        };
        throw new Error("Failed pattern match");
    };
};
var nub = function (__dict_Eq_1) {
    return nubBy(Prelude["=="](__dict_Eq_1));
};
var mapMaybe = function (f) {
    return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
};
var last = function (__copy__197) {
    var _197 = __copy__197;
    tco: while (true) {
        if (_197.length >= 1) {
            var _1035 = _197.slice(1);
            if (_1035.length === 0) {
                return new Data_Maybe.Just(_197[0]);
            };
        };
        if (_197.length >= 1) {
            var _1037 = _197.slice(1);
            _197 = _1037;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var intersectBy = function (_204) {
    return function (_205) {
        return function (_206) {
            if (_205.length === 0) {
                return [  ];
            };
            if (_206.length === 0) {
                return [  ];
            };
            var el = function (x) {
                return findIndex(_204(x))(_206) >= 0;
            };
            return filter(el)(_205);
        };
    };
};
var intersect = function (__dict_Eq_2) {
    return intersectBy(Prelude["=="](__dict_Eq_2));
};
var init = function (_199) {
    if (_199.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(slice(0)(length(_199) - 1)(_199));
};
var head = function (_196) {
    if (_196.length >= 1) {
        var _1044 = _196.slice(1);
        return new Data_Maybe.Just(_196[0]);
    };
    return Data_Maybe.Nothing.value;
};
var groupBy = (function () {
    var go = function (__copy__211) {
        return function (__copy__212) {
            return function (__copy__213) {
                var _211 = __copy__211;
                var _212 = __copy__212;
                var _213 = __copy__213;
                tco: while (true) {
                    if (_213.length === 0) {
                        return reverse(_211);
                    };
                    if (_213.length >= 1) {
                        var _1049 = _213.slice(1);
                        var sp = span(_212(_213[0]))(_1049);
                        var __tco__211 = Prelude[":"](Prelude[":"](_213[0])(sp.init))(_211);
                        var __tco__212 = _212;
                        _211 = __tco__211;
                        _212 = __tco__212;
                        _213 = sp.rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return go([  ]);
})();
var group = function (__dict_Eq_3) {
    return function (xs) {
        return groupBy(Prelude["=="](__dict_Eq_3))(xs);
    };
};
var group$prime = function (__dict_Ord_4) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_4["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_4));
};
var functorArray = new Prelude.Functor(map);
var elemLastIndex = function (__dict_Eq_5) {
    return function (x) {
        return findLastIndex(Prelude["=="](__dict_Eq_5)(x));
    };
};
var elemIndex = function (__dict_Eq_6) {
    return function (x) {
        return findIndex(Prelude["=="](__dict_Eq_6)(x));
    };
};
var deleteBy = function (_201) {
    return function (_202) {
        return function (_203) {
            if (_203.length === 0) {
                return [  ];
            };
            var _1053 = findIndex(_201(_202))(_203);
            if (_1053 < 0) {
                return _203;
            };
            return deleteAt(_1053)(1)(_203);
        };
    };
};
var $$delete = function (__dict_Eq_7) {
    return deleteBy(Prelude["=="](__dict_Eq_7));
};
var $bslash$bslash = function (__dict_Eq_8) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy__209) {
                return function (__copy__210) {
                    var _209 = __copy__209;
                    var _210 = __copy__210;
                    tco: while (true) {
                        if (_210.length === 0) {
                            return _209;
                        };
                        if (_209.length === 0) {
                            return [  ];
                        };
                        if (_210.length >= 1) {
                            var _1057 = _210.slice(1);
                            var __tco__209 = $$delete(__dict_Eq_8)(_210[0])(_209);
                            _209 = __tco__209;
                            _210 = _1057;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return go(xs)(ys);
        };
    };
};
var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
var monadArray = new Prelude.Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
    return applyArray;
});
var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
    return functorArray;
});
var applicativeArray = new Prelude.Applicative(function () {
    return applyArray;
}, singleton);
var altArray = new Control_Alt.Alt(append, function () {
    return functorArray;
});
var plusArray = new Control_Plus.Plus(function () {
    return altArray;
}, [  ]);
var alternativeArray = new Control_Alternative.Alternative(function () {
    return plusArray;
}, function () {
    return applicativeArray;
});
var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
    return alternativeArray;
}, function () {
    return monadArray;
});
module.exports = {
    "!!": $bang$bang, 
    "..": $dot$dot, 
    "\\\\": $bslash$bslash, 
    altArray: altArray, 
    alternativeArray: alternativeArray, 
    append: append, 
    applicativeArray: applicativeArray, 
    applyArray: applyArray, 
    bindArray: bindArray, 
    catMaybes: catMaybes, 
    concat: concat, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    drop: drop, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filter: filter, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    functorArray: functorArray, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    init: init, 
    insertAt: insertAt, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    length: length, 
    map: map, 
    mapMaybe: mapMaybe, 
    monadArray: monadArray, 
    monadPlusArray: monadPlusArray, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    plusArray: plusArray, 
    range: range, 
    reverse: reverse, 
    semigroupArray: semigroupArray, 
    singleton: singleton, 
    snoc: snoc, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    tail: tail, 
    take: take, 
    updateAt: updateAt, 
    zipWith: zipWith
};

},{"Control.Alt":5,"Control.Alternative":6,"Control.MonadPlus":14,"Control.Plus":15,"Data.Maybe":39,"Prelude":122,"Prelude.Unsafe":121}],28:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Char = {
    create: function (value) {
        return value;
    }
};

    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;

    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
var showChar = new Prelude.Show(function (_139) {
    return "Char " + Prelude.show(Prelude.showString)(_139);
});
var eqChar = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqChar)(a)(b);
    };
}, function (_135) {
    return function (_136) {
        return _135 === _136;
    };
});
var ordChar = new Prelude.Ord(function () {
    return eqChar;
}, function (_137) {
    return function (_138) {
        return Prelude.compare(Prelude.ordString)(_137)(_138);
    };
});
var charString = function (_134) {
    return _134;
};
module.exports = {
    charString: charString, 
    eqChar: eqChar, 
    fromCharCode: fromCharCode, 
    ordChar: ordChar, 
    showChar: showChar, 
    toCharCode: toCharCode
};

},{"Prelude":122}],29:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Data_Contravariant = require("Data.Contravariant");
var Const = {
    create: function (value) {
        return value;
    }
};
var showConst = function (__dict_Show_2) {
    return new Prelude.Show(function (_421) {
        return "Const (" + (Prelude.show(__dict_Show_2)(_421) + ")");
    });
};
var semigroupoidConst = new Prelude.Semigroupoid(function (_422) {
    return function (_423) {
        return _423;
    };
});
var semigroupConst = function (__dict_Semigroup_3) {
    return new Prelude.Semigroup(function (_424) {
        return function (_425) {
            return Prelude["<>"](__dict_Semigroup_3)(_424)(_425);
        };
    });
};
var monoidConst = function (__dict_Monoid_5) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConst(__dict_Monoid_5["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_5));
};
var getConst = function (_416) {
    return _416;
};
var functorConst = new Prelude.Functor(function (_426) {
    return function (_427) {
        return _427;
    };
});
var foldableConst = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (_441) {
        return function (_442) {
            return Data_Monoid.mempty(__dict_Monoid_6);
        };
    };
}, function (_438) {
    return function (_439) {
        return function (_440) {
            return _439;
        };
    };
}, function (_435) {
    return function (_436) {
        return function (_437) {
            return _436;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (__dict_Applicative_1) {
    return function (_445) {
        return Prelude.pure(__dict_Applicative_1)(_445);
    };
}, function (__dict_Applicative_0) {
    return function (_443) {
        return function (_444) {
            return Prelude.pure(__dict_Applicative_0)(_444);
        };
    };
});
var eqConst = function (__dict_Eq_7) {
    return new Prelude.Eq(function (c) {
        return function (c$prime) {
            return !Prelude["=="](eqConst(__dict_Eq_7))(c)(c$prime);
        };
    }, function (_417) {
        return function (_418) {
            return Prelude["=="](__dict_Eq_7)(_417)(_418);
        };
    });
};
var ordConst = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqConst(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_419) {
        return function (_420) {
            return Prelude.compare(__dict_Ord_4)(_419)(_420);
        };
    });
};
var contravariantConst = new Data_Contravariant.Contravariant(function (_433) {
    return function (_434) {
        return _434;
    };
});
var applyConst = function (__dict_Semigroup_9) {
    return new Prelude.Apply(function (_428) {
        return function (_429) {
            return Prelude["<>"](__dict_Semigroup_9)(_428)(_429);
        };
    }, function () {
        return functorConst;
    });
};
var bindConst = function (__dict_Semigroup_8) {
    return new Prelude.Bind(function (_430) {
        return function (_431) {
            return _430;
        };
    }, function () {
        return applyConst(__dict_Semigroup_8);
    });
};
var applicativeConst = function (__dict_Monoid_10) {
    return new Prelude.Applicative(function () {
        return applyConst(__dict_Monoid_10["__superclass_Prelude.Semigroup_0"]());
    }, function (_432) {
        return Data_Monoid.mempty(__dict_Monoid_10);
    });
};
module.exports = {
    Const: Const, 
    applicativeConst: applicativeConst, 
    applyConst: applyConst, 
    bindConst: bindConst, 
    contravariantConst: contravariantConst, 
    eqConst: eqConst, 
    foldableConst: foldableConst, 
    functorConst: functorConst, 
    getConst: getConst, 
    monoidConst: monoidConst, 
    ordConst: ordConst, 
    semigroupConst: semigroupConst, 
    semigroupoidConst: semigroupoidConst, 
    showConst: showConst, 
    traversableConst: traversableConst
};

},{"Data.Contravariant":30,"Data.Foldable":34,"Data.Monoid":45,"Data.Traversable":54,"Prelude":122}],30:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Contravariant($greater$dollar$less) {
    this[">$<"] = $greater$dollar$less;
};
var $greater$dollar$less = function (dict) {
    return dict[">$<"];
};
module.exports = {
    ">$<": $greater$dollar$less, 
    Contravariant: Contravariant
};

},{"Prelude":122}],31:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Global = require("Global");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
function January() {

};
January.value = new January();
function February() {

};
February.value = new February();
function March() {

};
March.value = new March();
function April() {

};
April.value = new April();
function May() {

};
May.value = new May();
function June() {

};
June.value = new June();
function July() {

};
July.value = new July();
function August() {

};
August.value = new August();
function September() {

};
September.value = new September();
function October() {

};
October.value = new October();
function November() {

};
November.value = new November();
function December() {

};
December.value = new December();
function Sunday() {

};
Sunday.value = new Sunday();
function Monday() {

};
Monday.value = new Monday();
function Tuesday() {

};
Tuesday.value = new Tuesday();
function Wednesday() {

};
Wednesday.value = new Wednesday();
function Thursday() {

};
Thursday.value = new Thursday();
function Friday() {

};
Friday.value = new Friday();
function Saturday() {

};
Saturday.value = new Saturday();
function DateTime(value0) {
    this.value0 = value0;
};
DateTime.create = function (value0) {
    return new DateTime(value0);
};
function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
function jsDateConstructor(x) {   return new Date(x); };
function strictJsDate(Just, Nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return Nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    if (idx < 0) return Nothing;
    else return Just(date);
  };
function jsDateFromRecord(r) {  return new Date(r.year, r.month, r.day, r.hours, r.minutes, r.seconds, r.milliseconds); };

  function nowImpl(f) {
    return function(){
      return f(new Date()); 
    };    
  }
  ;
var toJSDate = function (_719) {
    return _719.value0;
};
var showMonth = new Prelude.Show(function (_724) {
    if (_724 instanceof January) {
        return "January";
    };
    if (_724 instanceof February) {
        return "February";
    };
    if (_724 instanceof March) {
        return "March";
    };
    if (_724 instanceof April) {
        return "April";
    };
    if (_724 instanceof May) {
        return "May";
    };
    if (_724 instanceof June) {
        return "June";
    };
    if (_724 instanceof July) {
        return "July";
    };
    if (_724 instanceof August) {
        return "August";
    };
    if (_724 instanceof September) {
        return "September";
    };
    if (_724 instanceof October) {
        return "October";
    };
    if (_724 instanceof November) {
        return "November";
    };
    if (_724 instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match");
});
var showDayOfWeek = new Prelude.Show(function (_727) {
    if (_727 instanceof Sunday) {
        return "Sunday";
    };
    if (_727 instanceof Monday) {
        return "Monday";
    };
    if (_727 instanceof Tuesday) {
        return "Tuesday";
    };
    if (_727 instanceof Wednesday) {
        return "Wednesday";
    };
    if (_727 instanceof Thursday) {
        return "Thursday";
    };
    if (_727 instanceof Friday) {
        return "Friday";
    };
    if (_727 instanceof Saturday) {
        return "Saturday";
    };
    throw new Error("Failed pattern match");
});
var now = nowImpl(DateTime.create);
var monthToEnum = function (_715) {
    if (_715 === 0) {
        return new Data_Maybe.Just(January.value);
    };
    if (_715 === 1) {
        return new Data_Maybe.Just(February.value);
    };
    if (_715 === 2) {
        return new Data_Maybe.Just(March.value);
    };
    if (_715 === 3) {
        return new Data_Maybe.Just(April.value);
    };
    if (_715 === 4) {
        return new Data_Maybe.Just(May.value);
    };
    if (_715 === 5) {
        return new Data_Maybe.Just(June.value);
    };
    if (_715 === 6) {
        return new Data_Maybe.Just(July.value);
    };
    if (_715 === 7) {
        return new Data_Maybe.Just(August.value);
    };
    if (_715 === 8) {
        return new Data_Maybe.Just(September.value);
    };
    if (_715 === 9) {
        return new Data_Maybe.Just(October.value);
    };
    if (_715 === 10) {
        return new Data_Maybe.Just(November.value);
    };
    if (_715 === 11) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
};
var monthFromEnum = function (_716) {
    if (_716 instanceof January) {
        return 0;
    };
    if (_716 instanceof February) {
        return 1;
    };
    if (_716 instanceof March) {
        return 2;
    };
    if (_716 instanceof April) {
        return 3;
    };
    if (_716 instanceof May) {
        return 4;
    };
    if (_716 instanceof June) {
        return 5;
    };
    if (_716 instanceof July) {
        return 6;
    };
    if (_716 instanceof August) {
        return 7;
    };
    if (_716 instanceof September) {
        return 8;
    };
    if (_716 instanceof October) {
        return 9;
    };
    if (_716 instanceof November) {
        return 10;
    };
    if (_716 instanceof December) {
        return 11;
    };
    throw new Error("Failed pattern match");
};
var liftDate = function (_720) {
    return function (_721) {
        return _720(_721.value0);
    };
};
var millisecond = liftDate(jsDateMethod("getMilliseconds"));
var millisecondUTC = liftDate(jsDateMethod("getUTCMilliseconds"));
var minute = liftDate(jsDateMethod("getMinutes"));
var minuteUTC = liftDate(jsDateMethod("getUTCMinutes"));
var second = liftDate(jsDateMethod("getSeconds"));
var secondUTC = liftDate(jsDateMethod("getUTCSeconds"));
var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
var timezoneOffset = liftDate(jsDateMethod("getTimezoneOffset"));
var toEpochMilliseconds = liftDate(jsDateMethod("getTime"));
var liftOp = function (op) {
    return function (x) {
        return function (y) {
            return op(toEpochMilliseconds(x))(toEpochMilliseconds(y));
        };
    };
};
var year = liftDate(jsDateMethod("getFullYear"));
var yearUTC = liftDate(jsDateMethod("getUTCFullYear"));
var hourUTC = liftDate(jsDateMethod("getUTCHours"));
var hour = liftDate(jsDateMethod("getHours"));
var fromJSDate = function (d) {
    return Global.isNaN(jsDateMethod("getTime")(d)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(new DateTime(d));
};
var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
var fromStringStrict = function (s) {
    return Prelude[">>="](Data_Maybe.bindMaybe)(strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
};
var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
var eqMonth = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqMonth)(a)(b);
    };
}, function (_722) {
    return function (_723) {
        if (_722 instanceof January && _723 instanceof January) {
            return true;
        };
        if (_722 instanceof February && _723 instanceof February) {
            return true;
        };
        if (_722 instanceof March && _723 instanceof March) {
            return true;
        };
        if (_722 instanceof April && _723 instanceof April) {
            return true;
        };
        if (_722 instanceof May && _723 instanceof May) {
            return true;
        };
        if (_722 instanceof June && _723 instanceof June) {
            return true;
        };
        if (_722 instanceof July && _723 instanceof July) {
            return true;
        };
        if (_722 instanceof August && _723 instanceof August) {
            return true;
        };
        if (_722 instanceof September && _723 instanceof September) {
            return true;
        };
        if (_722 instanceof October && _723 instanceof October) {
            return true;
        };
        if (_722 instanceof November && _723 instanceof November) {
            return true;
        };
        if (_722 instanceof December && _723 instanceof December) {
            return true;
        };
        return false;
    };
});
var eqDayOfWeek = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqDayOfWeek)(a)(b);
    };
}, function (_725) {
    return function (_726) {
        if (_725 instanceof Sunday && _726 instanceof Sunday) {
            return true;
        };
        if (_725 instanceof Monday && _726 instanceof Monday) {
            return true;
        };
        if (_725 instanceof Tuesday && _726 instanceof Tuesday) {
            return true;
        };
        if (_725 instanceof Wednesday && _726 instanceof Wednesday) {
            return true;
        };
        if (_725 instanceof Thursday && _726 instanceof Thursday) {
            return true;
        };
        if (_725 instanceof Friday && _726 instanceof Friday) {
            return true;
        };
        if (_725 instanceof Saturday && _726 instanceof Saturday) {
            return true;
        };
        return false;
    };
});
var eqDate = new Prelude.Eq(liftOp(Prelude["/="](Prelude.eqNumber)), liftOp(Prelude["=="](Prelude.eqNumber)));
var ordDate = new Prelude.Ord(function () {
    return eqDate;
}, liftOp(Prelude.compare(Prelude.ordNumber)));
var ordMonth = new Prelude.Ord(function () {
    return eqMonth;
}, function (a) {
    return function (b) {
        return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumMonth)(a))(Data_Enum.fromEnum(enumMonth)(b));
    };
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, 12, January.value, monthFromEnum, December.value, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
var month = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getMonth"))));
var monthUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getUTCMonth"))));
var dayUTC = liftDate(jsDateMethod("getUTCDate"));
var dayOfWeekToEnum = function (_717) {
    if (_717 === 0) {
        return new Data_Maybe.Just(Sunday.value);
    };
    if (_717 === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (_717 === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (_717 === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (_717 === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (_717 === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (_717 === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    return Data_Maybe.Nothing.value;
};
var dayOfWeekFromEnum = function (_718) {
    if (_718 instanceof Sunday) {
        return 0;
    };
    if (_718 instanceof Monday) {
        return 1;
    };
    if (_718 instanceof Tuesday) {
        return 2;
    };
    if (_718 instanceof Wednesday) {
        return 3;
    };
    if (_718 instanceof Thursday) {
        return 4;
    };
    if (_718 instanceof Friday) {
        return 5;
    };
    if (_718 instanceof Saturday) {
        return 6;
    };
    throw new Error("Failed pattern match");
};
var ordDayOfWeek = new Prelude.Ord(function () {
    return eqDayOfWeek;
}, function (a) {
    return function (b) {
        return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumDayOfWeek)(a))(Data_Enum.fromEnum(enumDayOfWeek)(b));
    };
});
var enumDayOfWeek = new Data_Enum.Enum(function () {
    return ordDayOfWeek;
}, 7, Sunday.value, dayOfWeekFromEnum, Saturday.value, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
var dayOfWeekUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getUTCDay"))));
var dayOfWeek = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getDay"))));
var day = liftDate(jsDateMethod("getDate"));
var dateTime = function (y) {
    return function (m) {
        return function (d) {
            return function (h) {
                return function (n) {
                    return function (s) {
                        return function (ms) {
                            return fromJSDate(jsDateFromRecord({
                                year: y, 
                                month: Data_Enum.fromEnum(enumMonth)(m), 
                                day: d, 
                                hours: h, 
                                minutes: n, 
                                seconds: s, 
                                milliseconds: ms
                            }));
                        };
                    };
                };
            };
        };
    };
};
var date = function (y) {
    return function (m) {
        return function (d) {
            return dateTime(y)(m)(d)(0)(0)(0)(0);
        };
    };
};
module.exports = {
    April: April, 
    August: August, 
    December: December, 
    February: February, 
    January: January, 
    July: July, 
    June: June, 
    March: March, 
    May: May, 
    November: November, 
    October: October, 
    September: September, 
    date: date, 
    dateTime: dateTime, 
    day: day, 
    dayOfWeek: dayOfWeek, 
    dayOfWeekUTC: dayOfWeekUTC, 
    dayUTC: dayUTC, 
    enumDayOfWeek: enumDayOfWeek, 
    enumMonth: enumMonth, 
    eqDate: eqDate, 
    eqDayOfWeek: eqDayOfWeek, 
    eqMonth: eqMonth, 
    fromEpochMilliseconds: fromEpochMilliseconds, 
    fromJSDate: fromJSDate, 
    fromString: fromString, 
    fromStringStrict: fromStringStrict, 
    hour: hour, 
    hourUTC: hourUTC, 
    millisecond: millisecond, 
    millisecondUTC: millisecondUTC, 
    minute: minute, 
    minuteUTC: minuteUTC, 
    month: month, 
    monthUTC: monthUTC, 
    now: now, 
    ordDate: ordDate, 
    ordDayOfWeek: ordDayOfWeek, 
    ordMonth: ordMonth, 
    second: second, 
    secondUTC: secondUTC, 
    showDate: showDate, 
    showDayOfWeek: showDayOfWeek, 
    showMonth: showMonth, 
    timezoneOffset: timezoneOffset, 
    toEpochMilliseconds: toEpochMilliseconds, 
    toJSDate: toJSDate, 
    year: year, 
    yearUTC: yearUTC
};

},{"Data.Enum":33,"Data.Function":35,"Data.Maybe":39,"Data.Maybe.Unsafe":38,"Global":107,"Prelude":122}],32:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
function Left(value0) {
    this.value0 = value0;
};
Left.create = function (value0) {
    return new Left(value0);
};
function Right(value0) {
    this.value0 = value0;
};
Right.create = function (value0) {
    return new Right(value0);
};
var showEither = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return new Prelude.Show(function (_162) {
            if (_162 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_0)(_162.value0) + ")");
            };
            if (_162 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_1)(_162.value0) + ")");
            };
            throw new Error("Failed pattern match");
        });
    };
};
var functorEither = new Prelude.Functor(function (_156) {
    return function (_157) {
        if (_157 instanceof Left) {
            return new Left(_157.value0);
        };
        if (_157 instanceof Right) {
            return new Right(_156(_157.value0));
        };
        throw new Error("Failed pattern match");
    };
});
var eqEither = function (__dict_Eq_4) {
    return function (__dict_Eq_5) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqEither(__dict_Eq_4)(__dict_Eq_5))(a)(b);
            };
        }, function (_163) {
            return function (_164) {
                if (_163 instanceof Left && _164 instanceof Left) {
                    return Prelude["=="](__dict_Eq_4)(_163.value0)(_164.value0);
                };
                if (_163 instanceof Right && _164 instanceof Right) {
                    return Prelude["=="](__dict_Eq_5)(_163.value0)(_164.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_2) {
    return function (__dict_Ord_3) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_2["__superclass_Prelude.Eq_0"]())(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
        }, function (_165) {
            return function (_166) {
                if (_165 instanceof Left && _166 instanceof Left) {
                    return Prelude.compare(__dict_Ord_2)(_165.value0)(_166.value0);
                };
                if (_165 instanceof Right && _166 instanceof Right) {
                    return Prelude.compare(__dict_Ord_3)(_165.value0)(_166.value0);
                };
                if (_165 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_166 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
};
var either = function (_153) {
    return function (_154) {
        return function (_155) {
            if (_155 instanceof Left) {
                return _153(_155.value0);
            };
            if (_155 instanceof Right) {
                return _154(_155.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var applyEither = new Prelude.Apply(function (_158) {
    return function (_159) {
        if (_158 instanceof Left) {
            return new Left(_158.value0);
        };
        if (_158 instanceof Right) {
            return Prelude["<$>"](functorEither)(_158.value0)(_159);
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return functorEither;
});
var bindEither = new Prelude.Bind(either(function (e) {
    return function (_) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}), function () {
    return applyEither;
});
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function (_160) {
    return function (_161) {
        if (_160 instanceof Left) {
            return _161;
        };
        return _160;
    };
}, function () {
    return functorEither;
});
module.exports = {
    Left: Left, 
    Right: Right, 
    altEither: altEither, 
    applicativeEither: applicativeEither, 
    applyEither: applyEither, 
    bindEither: bindEither, 
    either: either, 
    eqEither: eqEither, 
    functorEither: functorEither, 
    isLeft: isLeft, 
    isRight: isRight, 
    monadEither: monadEither, 
    ordEither: ordEither, 
    showEither: showEither
};

},{"Control.Alt":5,"Prelude":122}],33:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Char = require("Data.Char");
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Cardinality = {
    create: function (value) {
        return value;
    }
};
function Enum(__superclass_Prelude$dotOrd_0, cardinality, firstEnum, fromEnum, lastEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
    this.cardinality = cardinality;
    this.firstEnum = firstEnum;
    this.fromEnum = fromEnum;
    this.lastEnum = lastEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
function floor(n){ return Math.floor(n); };
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_695) {
    return _695;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality.create(runCardinality(l) * runCardinality(r));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_2) {
    return function (c) {
        return Cardinality.create(1 + runCardinality(c));
    };
};
var maybeToEnum = function (__dict_Enum_3) {
    return function (_700) {
        return function (_701) {
            if (_701 <= runCardinality(maybeCardinality(__dict_Enum_3)(_700))) {
                return _701 === 0 ? Data_Maybe.Just.create(Data_Maybe.Nothing.value) : Data_Maybe.Just.create(toEnum(__dict_Enum_3)(_701 - 1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var lastEnum = function (dict) {
    return dict.lastEnum;
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                return e <= to ? Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step)) : Data_Maybe.Nothing.value;
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(1);
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_4) {
    return function (__dict_Enum_5) {
        return function (_704) {
            return function (_705) {
                return fromEnum(__dict_Enum_4)(_705.value0) * runCardinality(_704) + fromEnum(__dict_Enum_5)(_705.value1);
            };
        };
    };
};
var firstEnum = function (dict) {
    return dict.firstEnum;
};
var enumFromTo = function (__dict_Enum_6) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_6)(b);
            var a$prime = fromEnum(__dict_Enum_6)(a);
            return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_6))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_7) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_7)(c);
                var b$prime = fromEnum(__dict_Enum_7)(b);
                var a$prime = fromEnum(__dict_Enum_7)(a);
                return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_7))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_8) {
    return function (__dict_Enum_9) {
        return function (_706) {
            return function (_707) {
                if (_707 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_8)(_707.value0);
                };
                if (_707 instanceof Data_Either.Right) {
                    return fromEnum(__dict_Enum_9)(_707.value0) + runCardinality(_706);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (l) {
            return function (r) {
                return Cardinality.create(runCardinality(l) + runCardinality(r));
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    return n >= 0 && n < runCardinality(carda) ? Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_12)(n)) : n >= runCardinality(carda) && n < runCardinality(eitherCardinality(__dict_Enum_12)(__dict_Enum_13)(carda)(cardb)) ? Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_13)(n - runCardinality(carda))) : Data_Maybe.Nothing.value;
                };
            };
        };
    };
};
var div = function (a) {
    return function (b) {
        return floor(a / b);
    };
};
var tupleToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_14)(div(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_15)(n % runCardinality(cardb)));
            };
        };
    };
};
var defaultToEnum = function (_696) {
    return function (_697) {
        return function (_698) {
            if (_698 < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (_698 === 0) {
                return new Data_Maybe.Just(_697);
            };
            return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(_696)(_697)(_698 - 1))(_696);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1);
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(pred$prime)(prd) + 1;
        })(pred$prime(e));
    };
};
var charToEnum = function (_699) {
    if (_699 >= 0 && _699 <= 65535) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(_699));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Data_Char.ordChar;
}, 65535 + 1, Data_Char.fromCharCode(0), charFromEnum, Data_Char.fromCharCode(65535), defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.ordEither(__dict_Enum_16["__superclass_Prelude.Ord_0"]())(__dict_Enum_17["__superclass_Prelude.Ord_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), new Data_Either.Left(firstEnum(__dict_Enum_16)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), new Data_Either.Right(lastEnum(__dict_Enum_17)), function (_714) {
            if (_714 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_16)(_714.value0));
            };
            if (_714 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_16))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_17)(_714.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_713) {
            if (_713 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_17))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_16)(_713.value0));
            };
            if (_713 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_17)(_713.value0));
            };
            throw new Error("Failed pattern match");
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe(__dict_Enum_18["__superclass_Prelude.Ord_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), Data_Maybe.Nothing.value, function (_710) {
        if (_710 instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (_710 instanceof Data_Maybe.Just) {
            return fromEnum(__dict_Enum_18)(_710.value0) + 1;
        };
        throw new Error("Failed pattern match");
    }, Data_Maybe.Just.create(lastEnum(__dict_Enum_18)), function (_709) {
        if (_709 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_709 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_709.value0));
        };
        throw new Error("Failed pattern match");
    }, function (_708) {
        if (_708 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_18)));
        };
        if (_708 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_708.value0));
        };
        throw new Error("Failed pattern match");
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(__dict_Enum_19["__superclass_Prelude.Ord_0"]())(__dict_Enum_20["__superclass_Prelude.Ord_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_19), firstEnum(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_19), lastEnum(__dict_Enum_20)), function (_712) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_20)))(pred(__dict_Enum_19)(_712.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_712.value0)))(pred(__dict_Enum_20)(_712.value1));
        }, function (_711) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_20)))(succ(__dict_Enum_19)(_711.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_711.value0)))(succ(__dict_Enum_20)(_711.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_702) {
    if (!_702) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_703) {
    if (_703) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var booleanFirstEnum = false;
var enumBoolean = new Enum(function () {
    return Prelude.ordBoolean;
}, 2, booleanFirstEnum, defaultFromEnum(booleanPred), true, booleanPred, booleanSucc, defaultToEnum(booleanSucc)(booleanFirstEnum));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    cardinality: cardinality, 
    defaultFromEnum: defaultFromEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    defaultToEnum: defaultToEnum, 
    enumBoolean: enumBoolean, 
    enumChar: enumChar, 
    enumEither: enumEither, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    enumMaybe: enumMaybe, 
    enumTuple: enumTuple, 
    firstEnum: firstEnum, 
    fromEnum: fromEnum, 
    intFromTo: intFromTo, 
    intStepFromTo: intStepFromTo, 
    lastEnum: lastEnum, 
    pred: pred, 
    runCardinality: runCardinality, 
    succ: succ, 
    toEnum: toEnum
};

},{"Data.Array":27,"Data.Char":28,"Data.Either":32,"Data.Maybe":39,"Data.Maybe.Unsafe":38,"Data.Tuple":56,"Data.Unfoldable":57,"Prelude":122}],34:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Monoid = require("Data.Monoid");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid_First = require("Data.Monoid.First");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};

  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };

  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryArr));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_389) {
                    return function (_390) {
                        if (_389.init) {
                            return {
                                init: false, 
                                acc: _390
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_389.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(_390))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var mconcat = function (__dict_Foldable_8) {
    return function (__dict_Monoid_9) {
        return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
    };
};
var or = function (__dict_Foldable_10) {
    return foldl(__dict_Foldable_10)(Prelude["||"](Prelude.boolLikeBoolean))(false);
};
var product = function (__dict_Foldable_11) {
    return foldl(__dict_Foldable_11)(Prelude["*"](Prelude.numNumber))(1);
};
var sum = function (__dict_Foldable_12) {
    return foldl(__dict_Foldable_12)(Prelude["+"](Prelude.numNumber))(0);
};
var foldableTuple = new Foldable(function (__dict_Monoid_13) {
    return function (_387) {
        return function (_388) {
            return _387(_388.value1);
        };
    };
}, function (_384) {
    return function (_385) {
        return function (_386) {
            return _384(_385)(_386.value1);
        };
    };
}, function (_381) {
    return function (_382) {
        return function (_383) {
            return _381(_383.value1)(_382);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_14) {
    return function (_379) {
        return function (_380) {
            if (_380 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_14);
            };
            if (_380 instanceof Data_Maybe.Just) {
                return _379(_380.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_376) {
    return function (_377) {
        return function (_378) {
            if (_378 instanceof Data_Maybe.Nothing) {
                return _377;
            };
            if (_378 instanceof Data_Maybe.Just) {
                return _376(_377)(_378.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_373) {
    return function (_374) {
        return function (_375) {
            if (_375 instanceof Data_Maybe.Nothing) {
                return _374;
            };
            if (_375 instanceof Data_Maybe.Just) {
                return _373(_375.value0)(_374);
            };
            throw new Error("Failed pattern match");
        };
    };
});
var foldableEither = new Foldable(function (__dict_Monoid_15) {
    return function (_371) {
        return function (_372) {
            if (_372 instanceof Data_Either.Left) {
                return Data_Monoid.mempty(__dict_Monoid_15);
            };
            if (_372 instanceof Data_Either.Right) {
                return _371(_372.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_368) {
    return function (_369) {
        return function (_370) {
            if (_370 instanceof Data_Either.Left) {
                return _369;
            };
            if (_370 instanceof Data_Either.Right) {
                return _368(_369)(_370.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_365) {
    return function (_366) {
        return function (_367) {
            if (_367 instanceof Data_Either.Left) {
                return _366;
            };
            if (_367 instanceof Data_Either.Right) {
                return _365(_367.value0)(_366);
            };
            throw new Error("Failed pattern match");
        };
    };
});
var foldableArray = new Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return function (xs) {
            return foldr(foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_16))(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (xs) {
            return foldlArray(f)(z)(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (xs) {
            return foldrArray(f)(z)(xs);
        };
    };
});
var foldMap = function (dict) {
    return dict.foldMap;
};
var lookup = function (__dict_Eq_17) {
    return function (__dict_Foldable_18) {
        return function (a) {
            return function (f) {
                return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_18)(Data_Monoid_First.monoidFirst)(function (_364) {
                    return Prelude["=="](__dict_Eq_17)(a)(_364.value0) ? new Data_Maybe.Just(_364.value1) : Data_Maybe.Nothing.value;
                })(f));
            };
        };
    };
};
var fold = function (__dict_Foldable_19) {
    return function (__dict_Monoid_20) {
        return foldMap(__dict_Foldable_19)(__dict_Monoid_20)(Prelude.id(Prelude.categoryArr));
    };
};
var find = function (__dict_Foldable_21) {
    return function (p) {
        return function (f) {
            var _1495 = foldMap(__dict_Foldable_21)(Data_Monoid.monoidArray)(function (x) {
                return p(x) ? [ x ] : [  ];
            })(f);
            if (_1495.length >= 1) {
                var _1497 = _1495.slice(1);
                return new Data_Maybe.Just(_1495[0]);
            };
            if (_1495.length === 0) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    };
};
var any = function (__dict_Foldable_22) {
    return function (p) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_22)(Data_Monoid.monoidArray)(function (x) {
            return [ p(x) ];
        }));
    };
};
var elem = function (__dict_Eq_23) {
    return function (__dict_Foldable_24) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_24))(Prelude["=="](__dict_Eq_23));
    };
};
var notElem = function (__dict_Eq_25) {
    return function (__dict_Foldable_26) {
        return function (x) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_25)(__dict_Foldable_26)(x));
        };
    };
};
var and = function (__dict_Foldable_27) {
    return foldl(__dict_Foldable_27)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
};
var all = function (__dict_Foldable_28) {
    return function (p) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_28)(Data_Monoid.monoidArray)(function (x) {
            return [ p(x) ];
        }));
    };
};
module.exports = {
    Foldable: Foldable, 
    all: all, 
    and: and, 
    any: any, 
    elem: elem, 
    find: find, 
    fold: fold, 
    foldMap: foldMap, 
    foldableArray: foldableArray, 
    foldableEither: foldableEither, 
    foldableMaybe: foldableMaybe, 
    foldableTuple: foldableTuple, 
    foldl: foldl, 
    foldlArray: foldlArray, 
    foldr: foldr, 
    foldrArray: foldrArray, 
    for_: for_, 
    intercalate: intercalate, 
    lookup: lookup, 
    mconcat: mconcat, 
    notElem: notElem, 
    or: or, 
    product: product, 
    sequence_: sequence_, 
    sum: sum, 
    traverse_: traverse_
};

},{"Control.Apply":7,"Data.Either":32,"Data.Maybe":39,"Data.Monoid":45,"Data.Monoid.First":44,"Data.Tuple":56,"Prelude":122}],35:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function mkFn0(fn) {  return function() {    return fn({});  };};
function mkFn1(fn) {  return function(a) {    return fn(a);  };};
function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
function runFn0(fn) {  return fn();};
function runFn1(fn) {  return function(a) {    return fn(a);  };};
function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    mkFn0: mkFn0, 
    mkFn1: mkFn1, 
    mkFn10: mkFn10, 
    mkFn2: mkFn2, 
    mkFn3: mkFn3, 
    mkFn4: mkFn4, 
    mkFn5: mkFn5, 
    mkFn6: mkFn6, 
    mkFn7: mkFn7, 
    mkFn8: mkFn8, 
    mkFn9: mkFn9, 
    on: on, 
    runFn0: runFn0, 
    runFn1: runFn1, 
    runFn10: runFn10, 
    runFn2: runFn2, 
    runFn3: runFn3, 
    runFn4: runFn4, 
    runFn5: runFn5, 
    runFn6: runFn6, 
    runFn7: runFn7, 
    runFn8: runFn8, 
    runFn9: runFn9
};

},{"Prelude":122}],36:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Control_Extend = require("Control.Extend");
var Control_Comonad = require("Control.Comonad");
var Identity = {
    create: function (value) {
        return value;
    }
};
var showConst = function (__dict_Show_2) {
    return new Prelude.Show(function (_575) {
        return "Identity (" + (Prelude.show(__dict_Show_2)(_575) + ")");
    });
};
var runIdentity = function (_570) {
    return _570;
};
var functorIdentity = new Prelude.Functor(function (_576) {
    return function (_577) {
        return _576(_577);
    };
});
var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_4) {
    return function (_587) {
        return function (_588) {
            return _587(_588);
        };
    };
}, function (_584) {
    return function (_585) {
        return function (_586) {
            return _584(_585)(_586);
        };
    };
}, function (_581) {
    return function (_582) {
        return function (_583) {
            return _581(_583)(_582);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (__dict_Applicative_1) {
    return function (_591) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_591);
    };
}, function (__dict_Applicative_0) {
    return function (_589) {
        return function (_590) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_589(_590));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function (f) {
    return function (m) {
        return f(m);
    };
}, function () {
    return functorIdentity;
});
var eqIdentity = function (__dict_Eq_5) {
    return new Prelude.Eq(function (x) {
        return function (y) {
            return !Prelude["=="](eqIdentity(__dict_Eq_5))(x)(y);
        };
    }, function (_571) {
        return function (_572) {
            return Prelude["=="](__dict_Eq_5)(_571)(_572);
        };
    });
};
var ordIdentity = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqIdentity(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_573) {
        return function (_574) {
            return Prelude.compare(__dict_Ord_3)(_573)(_574);
        };
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (_580) {
    return _580;
});
var applyIdentity = new Prelude.Apply(function (_578) {
    return function (_579) {
        return _578(_579);
    };
}, function () {
    return functorIdentity;
});
var bindIdentity = new Prelude.Bind(function (m) {
    return function (f) {
        return f(runIdentity(m));
    };
}, function () {
    return applyIdentity;
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity.create);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    applicativeIdentity: applicativeIdentity, 
    applyIdentity: applyIdentity, 
    bindIdentity: bindIdentity, 
    comonadIdentity: comonadIdentity, 
    eqIdentity: eqIdentity, 
    extendIdentity: extendIdentity, 
    foldableIdentity: foldableIdentity, 
    functorIdentity: functorIdentity, 
    monadIdentity: monadIdentity, 
    ordIdentity: ordIdentity, 
    runIdentity: runIdentity, 
    showConst: showConst, 
    traversableIdentity: traversableIdentity
};

},{"Control.Comonad":8,"Control.Extend":9,"Data.Foldable":34,"Data.Traversable":54,"Prelude":122}],37:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
function Leaf() {

};
Leaf.value = new Leaf();
function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Two.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Two(value0, value1, value2, value3);
            };
        };
    };
};
function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
};
Three.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return function (value6) {
                            return new Three(value0, value1, value2, value3, value4, value5, value6);
                        };
                    };
                };
            };
        };
    };
};
function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoLeft(value0, value1, value2);
        };
    };
};
function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoRight(value0, value1, value2);
        };
    };
};
function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeMiddle.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeRight(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
KickUp.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new KickUp(value0, value1, value2, value3);
            };
        };
    };
};
var values = function (_607) {
    if (_607 instanceof Leaf) {
        return [  ];
    };
    if (_607 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_607.value0))(Prelude["++"](Data_Array.semigroupArray)([ _607.value2 ])(values(_607.value3)));
    };
    if (_607 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_607.value0))(Prelude["++"](Data_Array.semigroupArray)([ _607.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_607.value3))(Prelude["++"](Data_Array.semigroupArray)([ _607.value5 ])(values(_607.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_605) {
    if (_605 instanceof Leaf) {
        return [  ];
    };
    if (_605 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_605.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_605.value1, _605.value2) ])(toList(_605.value3)));
    };
    if (_605 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_605.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_605.value1, _605.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_605.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_605.value4, _605.value5) ])(toList(_605.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_599) {
            if (_599 instanceof Leaf) {
                return "Leaf";
            };
            if (_599 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_599.value0) + (") (" + (Prelude.show(__dict_Show_0)(_599.value1) + (") (" + (Prelude.show(__dict_Show_1)(_599.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_599.value3) + ")")))))));
            };
            if (_599 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_599.value0) + (") (" + (Prelude.show(__dict_Show_0)(_599.value1) + (") (" + (Prelude.show(__dict_Show_1)(_599.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_599.value3) + (") (" + (Prelude.show(__dict_Show_0)(_599.value4) + (") (" + (Prelude.show(__dict_Show_1)(_599.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_599.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__601) {
        return function (__copy__602) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _601 = __copy__601;
            var _602 = __copy__602;
            tco: while (true) {
                if (_602 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_602 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_601)(_602.value1)) {
                    return new Data_Maybe.Just(_602.value2);
                };
                if (_602 instanceof Two && Prelude["<"](__dict_Ord_4)(_601)(_602.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__601 = _601;
                    var __tco__602 = _602.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _601 = __tco__601;
                    _602 = __tco__602;
                    continue tco;
                };
                if (_602 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__601 = _601;
                    var __tco__602 = _602.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _601 = __tco__601;
                    _602 = __tco__602;
                    continue tco;
                };
                if (_602 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_601)(_602.value1)) {
                    return new Data_Maybe.Just(_602.value2);
                };
                if (_602 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_601)(_602.value4)) {
                    return new Data_Maybe.Just(_602.value5);
                };
                if (_602 instanceof Three && Prelude["<"](__dict_Ord_4)(_601)(_602.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__601 = _601;
                    var __tco__602 = _602.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _601 = __tco__601;
                    _602 = __tco__602;
                    continue tco;
                };
                if (_602 instanceof Three && (Prelude["<"](__dict_Ord_4)(_602.value1)(_601) && Prelude["<="](__dict_Ord_4)(_601)(_602.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__601 = _601;
                    var __tco__602 = _602.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _601 = __tco__601;
                    _602 = __tco__602;
                    continue tco;
                };
                if (_602 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__601 = _601;
                    var __tco__602 = _602.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _601 = __tco__601;
                    _602 = __tco__602;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_606) {
    if (_606 instanceof Leaf) {
        return [  ];
    };
    if (_606 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_606.value0))(Prelude["++"](Data_Array.semigroupArray)([ _606.value1 ])(keys(_606.value3)));
    };
    if (_606 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_606.value0))(Prelude["++"](Data_Array.semigroupArray)([ _606.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_606.value3))(Prelude["++"](Data_Array.semigroupArray)([ _606.value4 ])(keys(_606.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_600) {
    if (_600 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (_608) {
    return function (_609) {
        if (_609 instanceof Leaf) {
            return Leaf.value;
        };
        if (_609 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(_608)(_609.value0), _609.value1, _608(_609.value2), Prelude["<$>"](functorMap)(_608)(_609.value3));
        };
        if (_609 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(_608)(_609.value0), _609.value1, _608(_609.value2), Prelude["<$>"](functorMap)(_608)(_609.value3), _609.value4, _608(_609.value5), Prelude["<$>"](functorMap)(_608)(_609.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__603) {
        return function (__copy__604) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _603 = __copy__603;
            var _604 = __copy__604;
            tco: while (true) {
                if (_603.length === 0) {
                    return _604;
                };
                if (_603.length >= 1) {
                    var _1944 = _603.slice(1);
                    if (_603[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__604 = new Two(_604, (_603[0]).value0, (_603[0]).value1, (_603[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _603 = _1944;
                        _604 = __tco__604;
                        continue tco;
                    };
                };
                if (_603.length >= 1) {
                    var _1949 = _603.slice(1);
                    if (_603[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__604 = new Two((_603[0]).value0, (_603[0]).value1, (_603[0]).value2, _604);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _603 = _1949;
                        _604 = __tco__604;
                        continue tco;
                    };
                };
                if (_603.length >= 1) {
                    var _1957 = _603.slice(1);
                    if (_603[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__604 = new Three(_604, (_603[0]).value0, (_603[0]).value1, (_603[0]).value2, (_603[0]).value3, (_603[0]).value4, (_603[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _603 = _1957;
                        _604 = __tco__604;
                        continue tco;
                    };
                };
                if (_603.length >= 1) {
                    var _1965 = _603.slice(1);
                    if (_603[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__604 = new Three((_603[0]).value0, (_603[0]).value1, (_603[0]).value2, _604, (_603[0]).value3, (_603[0]).value4, (_603[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _603 = _1965;
                        _604 = __tco__604;
                        continue tco;
                    };
                };
                if (_603.length >= 1) {
                    var _1973 = _603.slice(1);
                    if (_603[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__604 = new Three((_603[0]).value0, (_603[0]).value1, (_603[0]).value2, (_603[0]).value3, (_603[0]).value4, (_603[0]).value5, _604);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _603 = _1973;
                        _604 = __tco__604;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__615) {
            return function (__copy__616) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _615 = __copy__615;
                var _616 = __copy__616;
                tco: while (true) {
                    if (_615.length === 0) {
                        return new Two(_616.value0, _616.value1, _616.value2, _616.value3);
                    };
                    if (_615.length >= 1) {
                        var _1988 = _615.slice(1);
                        if (_615[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_1988)(new Three(_616.value0, _616.value1, _616.value2, _616.value3, (_615[0]).value0, (_615[0]).value1, (_615[0]).value2));
                        };
                    };
                    if (_615.length >= 1) {
                        var _1997 = _615.slice(1);
                        if (_615[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_1997)(new Three((_615[0]).value0, (_615[0]).value1, (_615[0]).value2, _616.value0, _616.value1, _616.value2, _616.value3));
                        };
                    };
                    if (_615.length >= 1) {
                        var _2009 = _615.slice(1);
                        if (_615[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__616 = new KickUp(new Two(_616.value0, _616.value1, _616.value2, _616.value3), (_615[0]).value0, (_615[0]).value1, new Two((_615[0]).value2, (_615[0]).value3, (_615[0]).value4, (_615[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _615 = _2009;
                            _616 = __tco__616;
                            continue tco;
                        };
                    };
                    if (_615.length >= 1) {
                        var _2021 = _615.slice(1);
                        if (_615[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__616 = new KickUp(new Two((_615[0]).value0, (_615[0]).value1, (_615[0]).value2, _616.value0), _616.value1, _616.value2, new Two(_616.value3, (_615[0]).value3, (_615[0]).value4, (_615[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _615 = _2021;
                            _616 = __tco__616;
                            continue tco;
                        };
                    };
                    if (_615.length >= 1) {
                        var _2033 = _615.slice(1);
                        if (_615[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__616 = new KickUp(new Two((_615[0]).value0, (_615[0]).value1, (_615[0]).value2, (_615[0]).value3), (_615[0]).value4, (_615[0]).value5, new Two(_616.value0, _616.value1, _616.value2, _616.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _615 = _2033;
                            _616 = __tco__616;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__611) {
            return function (__copy__612) {
                return function (__copy__613) {
                    return function (__copy__614) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _611 = __copy__611;
                        var _612 = __copy__612;
                        var _613 = __copy__613;
                        var _614 = __copy__614;
                        tco: while (true) {
                            if (_614 instanceof Leaf) {
                                return up(__dict_Ord_9)(_611)(new KickUp(Leaf.value, _612, _613, Leaf.value));
                            };
                            if (_614 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_612)(_614.value1)) {
                                return fromZipper(__dict_Ord_9)(_611)(new Two(_614.value0, _612, _613, _614.value3));
                            };
                            if (_614 instanceof Two && Prelude["<"](__dict_Ord_9)(_612)(_614.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__611 = Prelude[":"](new TwoLeft(_614.value1, _614.value2, _614.value3))(_611);
                                var __tco__612 = _612;
                                var __tco__613 = _613;
                                var __tco__614 = _614.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                _614 = __tco__614;
                                continue tco;
                            };
                            if (_614 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__611 = Prelude[":"](new TwoRight(_614.value0, _614.value1, _614.value2))(_611);
                                var __tco__612 = _612;
                                var __tco__613 = _613;
                                var __tco__614 = _614.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                _614 = __tco__614;
                                continue tco;
                            };
                            if (_614 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_612)(_614.value1)) {
                                return fromZipper(__dict_Ord_9)(_611)(new Three(_614.value0, _612, _613, _614.value3, _614.value4, _614.value5, _614.value6));
                            };
                            if (_614 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_612)(_614.value4)) {
                                return fromZipper(__dict_Ord_9)(_611)(new Three(_614.value0, _614.value1, _614.value2, _614.value3, _612, _613, _614.value6));
                            };
                            if (_614 instanceof Three && Prelude["<"](__dict_Ord_9)(_612)(_614.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__611 = Prelude[":"](new ThreeLeft(_614.value1, _614.value2, _614.value3, _614.value4, _614.value5, _614.value6))(_611);
                                var __tco__612 = _612;
                                var __tco__613 = _613;
                                var __tco__614 = _614.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                _614 = __tco__614;
                                continue tco;
                            };
                            if (_614 instanceof Three && (Prelude["<"](__dict_Ord_9)(_614.value1)(_612) && Prelude["<="](__dict_Ord_9)(_612)(_614.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__611 = Prelude[":"](new ThreeMiddle(_614.value0, _614.value1, _614.value2, _614.value4, _614.value5, _614.value6))(_611);
                                var __tco__612 = _612;
                                var __tco__613 = _613;
                                var __tco__614 = _614.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                _614 = __tco__614;
                                continue tco;
                            };
                            if (_614 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__611 = Prelude[":"](new ThreeRight(_614.value0, _614.value1, _614.value2, _614.value3, _614.value4, _614.value5))(_611);
                                var __tco__612 = _612;
                                var __tco__613 = _613;
                                var __tco__614 = _614.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                _614 = __tco__614;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_10)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_598) {
            return insert(__dict_Ord_13)(_598.value0)(_598.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__620) {
            return function (__copy__621) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _620 = __copy__620;
                var _621 = __copy__621;
                tco: while (true) {
                    if (_620.length === 0) {
                        return _621;
                    };
                    if (_620.length >= 1) {
                        var _2094 = _620.slice(1);
                        if (_620[0] instanceof TwoLeft && ((_620[0]).value2 instanceof Leaf && _621 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_2094)(new Two(Leaf.value, (_620[0]).value0, (_620[0]).value1, Leaf.value));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2099 = _620.slice(1);
                        if (_620[0] instanceof TwoRight && ((_620[0]).value0 instanceof Leaf && _621 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_2099)(new Two(Leaf.value, (_620[0]).value1, (_620[0]).value2, Leaf.value));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2108 = _620.slice(1);
                        if (_620[0] instanceof TwoLeft && (_620[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__621 = new Three(_621, (_620[0]).value0, (_620[0]).value1, (_620[0]).value2.value0, (_620[0]).value2.value1, (_620[0]).value2.value2, (_620[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _620 = _2108;
                            _621 = __tco__621;
                            continue tco;
                        };
                    };
                    if (_620.length >= 1) {
                        var _2117 = _620.slice(1);
                        if (_620[0] instanceof TwoRight && (_620[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__621 = new Three((_620[0]).value0.value0, (_620[0]).value0.value1, (_620[0]).value0.value2, (_620[0]).value0.value3, (_620[0]).value1, (_620[0]).value2, _621);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _620 = _2117;
                            _621 = __tco__621;
                            continue tco;
                        };
                    };
                    if (_620.length >= 1) {
                        var _2129 = _620.slice(1);
                        if (_620[0] instanceof TwoLeft && (_620[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2129)(new Two(new Two(_621, (_620[0]).value0, (_620[0]).value1, (_620[0]).value2.value0), (_620[0]).value2.value1, (_620[0]).value2.value2, new Two((_620[0]).value2.value3, (_620[0]).value2.value4, (_620[0]).value2.value5, (_620[0]).value2.value6)));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2141 = _620.slice(1);
                        if (_620[0] instanceof TwoRight && (_620[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2141)(new Two(new Two((_620[0]).value0.value0, (_620[0]).value0.value1, (_620[0]).value0.value2, (_620[0]).value0.value3), (_620[0]).value0.value4, (_620[0]).value0.value5, new Two((_620[0]).value0.value6, (_620[0]).value1, (_620[0]).value2, _621)));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2149 = _620.slice(1);
                        if (_620[0] instanceof ThreeLeft && ((_620[0]).value2 instanceof Leaf && ((_620[0]).value5 instanceof Leaf && _621 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2149)(new Three(Leaf.value, (_620[0]).value0, (_620[0]).value1, Leaf.value, (_620[0]).value3, (_620[0]).value4, Leaf.value));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2157 = _620.slice(1);
                        if (_620[0] instanceof ThreeMiddle && ((_620[0]).value0 instanceof Leaf && ((_620[0]).value5 instanceof Leaf && _621 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2157)(new Three(Leaf.value, (_620[0]).value1, (_620[0]).value2, Leaf.value, (_620[0]).value3, (_620[0]).value4, Leaf.value));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2165 = _620.slice(1);
                        if (_620[0] instanceof ThreeRight && ((_620[0]).value0 instanceof Leaf && ((_620[0]).value3 instanceof Leaf && _621 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2165)(new Three(Leaf.value, (_620[0]).value1, (_620[0]).value2, Leaf.value, (_620[0]).value4, (_620[0]).value5, Leaf.value));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2177 = _620.slice(1);
                        if (_620[0] instanceof ThreeLeft && (_620[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2177)(new Two(new Three(_621, (_620[0]).value0, (_620[0]).value1, (_620[0]).value2.value0, (_620[0]).value2.value1, (_620[0]).value2.value2, (_620[0]).value2.value3), (_620[0]).value3, (_620[0]).value4, (_620[0]).value5));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2189 = _620.slice(1);
                        if (_620[0] instanceof ThreeMiddle && (_620[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2189)(new Two(new Three((_620[0]).value0.value0, (_620[0]).value0.value1, (_620[0]).value0.value2, (_620[0]).value0.value3, (_620[0]).value1, (_620[0]).value2, _621), (_620[0]).value3, (_620[0]).value4, (_620[0]).value5));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2201 = _620.slice(1);
                        if (_620[0] instanceof ThreeMiddle && (_620[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2201)(new Two((_620[0]).value0, (_620[0]).value1, (_620[0]).value2, new Three(_621, (_620[0]).value3, (_620[0]).value4, (_620[0]).value5.value0, (_620[0]).value5.value1, (_620[0]).value5.value2, (_620[0]).value5.value3)));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2213 = _620.slice(1);
                        if (_620[0] instanceof ThreeRight && (_620[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2213)(new Two((_620[0]).value0, (_620[0]).value1, (_620[0]).value2, new Three((_620[0]).value3.value0, (_620[0]).value3.value1, (_620[0]).value3.value2, (_620[0]).value3.value3, (_620[0]).value4, (_620[0]).value5, _621)));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2228 = _620.slice(1);
                        if (_620[0] instanceof ThreeLeft && (_620[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2228)(new Three(new Two(_621, (_620[0]).value0, (_620[0]).value1, (_620[0]).value2.value0), (_620[0]).value2.value1, (_620[0]).value2.value2, new Two((_620[0]).value2.value3, (_620[0]).value2.value4, (_620[0]).value2.value5, (_620[0]).value2.value6), (_620[0]).value3, (_620[0]).value4, (_620[0]).value5));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2243 = _620.slice(1);
                        if (_620[0] instanceof ThreeMiddle && (_620[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2243)(new Three(new Two((_620[0]).value0.value0, (_620[0]).value0.value1, (_620[0]).value0.value2, (_620[0]).value0.value3), (_620[0]).value0.value4, (_620[0]).value0.value5, new Two((_620[0]).value0.value6, (_620[0]).value1, (_620[0]).value2, _621), (_620[0]).value3, (_620[0]).value4, (_620[0]).value5));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2258 = _620.slice(1);
                        if (_620[0] instanceof ThreeMiddle && (_620[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2258)(new Three((_620[0]).value0, (_620[0]).value1, (_620[0]).value2, new Two(_621, (_620[0]).value3, (_620[0]).value4, (_620[0]).value5.value0), (_620[0]).value5.value1, (_620[0]).value5.value2, new Two((_620[0]).value5.value3, (_620[0]).value5.value4, (_620[0]).value5.value5, (_620[0]).value5.value6)));
                        };
                    };
                    if (_620.length >= 1) {
                        var _2273 = _620.slice(1);
                        if (_620[0] instanceof ThreeRight && (_620[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2273)(new Three((_620[0]).value0, (_620[0]).value1, (_620[0]).value2, new Two((_620[0]).value3.value0, (_620[0]).value3.value1, (_620[0]).value3.value2, (_620[0]).value3.value3), (_620[0]).value3.value4, (_620[0]).value3.value5, new Two((_620[0]).value3.value6, (_620[0]).value4, (_620[0]).value5, _621)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__623) {
            return function (__copy__624) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _623 = __copy__623;
                var _624 = __copy__624;
                tco: while (true) {
                    if (_624 instanceof Two && (_624.value0 instanceof Leaf && _624.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_623)(Leaf.value);
                    };
                    if (_624 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__623 = Prelude[":"](new TwoRight(_624.value0, _624.value1, _624.value2))(_623);
                        var __tco__624 = _624.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _623 = __tco__623;
                        _624 = __tco__624;
                        continue tco;
                    };
                    if (_624 instanceof Three && (_624.value0 instanceof Leaf && (_624.value3 instanceof Leaf && _624.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _624.value1, _624.value2))(_623))(Leaf.value);
                    };
                    if (_624 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__623 = Prelude[":"](new ThreeRight(_624.value0, _624.value1, _624.value2, _624.value3, _624.value4, _624.value5))(_623);
                        var __tco__624 = _624.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _623 = __tco__623;
                        _624 = __tco__624;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__622) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _622 = __copy__622;
            tco: while (true) {
                if (_622 instanceof Two && _622.value3 instanceof Leaf) {
                    return {
                        key: _622.value1, 
                        value: _622.value2
                    };
                };
                if (_622 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__622 = _622.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _622 = __tco__622;
                    continue tco;
                };
                if (_622 instanceof Three && _622.value6 instanceof Leaf) {
                    return {
                        key: _622.value4, 
                        value: _622.value5
                    };
                };
                if (_622 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__622 = _622.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _622 = __tco__622;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__617) {
            return function (__copy__618) {
                return function (__copy__619) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _617 = __copy__617;
                    var _618 = __copy__618;
                    var _619 = __copy__619;
                    tco: while (true) {
                        if (_619 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_617)(Leaf.value);
                        };
                        if (_619 instanceof Two && (_619.value0 instanceof Leaf && (_619.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value1)))) {
                            return up(__dict_Ord_19)(_617)(Leaf.value);
                        };
                        if (_619 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value1)) {
                                var max = maxNode(__dict_Ord_19)(_619.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _619.value3))(_617))(_619.value0);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_618)(_619.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__617 = Prelude[":"](new TwoLeft(_619.value1, _619.value2, _619.value3))(_617);
                                var __tco__618 = _618;
                                var __tco__619 = _619.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                _619 = __tco__619;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__617 = Prelude[":"](new TwoRight(_619.value0, _619.value1, _619.value2))(_617);
                                var __tco__618 = _618;
                                var __tco__619 = _619.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                _619 = __tco__619;
                                continue tco;
                            };
                        };
                        if (_619 instanceof Three && (_619.value0 instanceof Leaf && (_619.value3 instanceof Leaf && _619.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value1)) {
                                return fromZipper(__dict_Ord_19)(_617)(new Two(Leaf.value, _619.value4, _619.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value4)) {
                                return fromZipper(__dict_Ord_19)(_617)(new Two(Leaf.value, _619.value1, _619.value2, Leaf.value));
                            };
                        };
                        if (_619 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value1)) {
                                var max = maxNode(__dict_Ord_19)(_619.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _619.value3, _619.value4, _619.value5, _619.value6))(_617))(_619.value0);
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_618)(_619.value4)) {
                                var max = maxNode(__dict_Ord_19)(_619.value3);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_619.value0, _619.value1, _619.value2, max.key, max.value, _619.value6))(_617))(_619.value3);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_618)(_619.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__617 = Prelude[":"](new ThreeLeft(_619.value1, _619.value2, _619.value3, _619.value4, _619.value5, _619.value6))(_617);
                                var __tco__618 = _618;
                                var __tco__619 = _619.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                _619 = __tco__619;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_19)(_619.value1)(_618) && Prelude["<"](__dict_Ord_19)(_618)(_619.value4)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__617 = Prelude[":"](new ThreeMiddle(_619.value0, _619.value1, _619.value2, _619.value4, _619.value5, _619.value6))(_617);
                                var __tco__618 = _618;
                                var __tco__619 = _619.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                _619 = __tco__619;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__617 = Prelude[":"](new ThreeRight(_619.value0, _619.value1, _619.value2, _619.value3, _619.value4, _619.value5))(_617);
                                var __tco__618 = _618;
                                var __tco__619 = _619.value6;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                _619 = __tco__619;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_610) {
        if (_610 instanceof Leaf) {
            return [ 0 ];
        };
        if (_610 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_610.value0))(allHeights(_610.value3)));
        };
        if (_610 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_610.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_610.value3))(allHeights(_610.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _2358 = f(lookup(__dict_Ord_20)(k)(m));
                if (_2358 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_2358 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_2358.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var unionWith = function (__dict_Ord_21) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (_625) {
                    return function (_626) {
                        return alter(__dict_Ord_21)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_626.value1)(f(_626.value1))))(_626.value0)(_625);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_22) {
    return unionWith(__dict_Ord_22)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_23) {
    return new Prelude.Semigroup(union(__dict_Ord_23));
};
var monoidMap = function (__dict_Ord_14) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_14);
    }, empty);
};
var traversableMap = function (__dict_Ord_24) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_26) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_24))(__dict_Applicative_26)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_25) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_25["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_24))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_25)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_25)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_27) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_27))(empty);
};
var update = function (__dict_Ord_28) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_28)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    alter: alter, 
    checkValid: checkValid, 
    "delete": $$delete, 
    empty: empty, 
    eqMap: eqMap, 
    foldableMap: foldableMap, 
    fromList: fromList, 
    functorMap: functorMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    monoidMap: monoidMap, 
    semigroupMap: semigroupMap, 
    showMap: showMap, 
    showTree: showTree, 
    singleton: singleton, 
    size: size, 
    toList: toList, 
    traversableMap: traversableMap, 
    union: union, 
    unionWith: unionWith, 
    unions: unions, 
    update: update, 
    values: values
};

},{"Data.Array":27,"Data.Foldable":34,"Data.Maybe":39,"Data.Monoid":45,"Data.Traversable":54,"Data.Tuple":56,"Prelude":122}],38:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (_217) {
    if (_217 instanceof Data_Maybe.Just) {
        return _217.value0;
    };
    throw new Error("Failed pattern match");
};
module.exports = {
    fromJust: fromJust
};

},{"Data.Maybe":39,"Prelude":122}],39:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
function Nothing() {

};
Nothing.value = new Nothing();
function Just(value0) {
    this.value0 = value0;
};
Just.create = function (value0) {
    return new Just(value0);
};
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_191) {
        if (_191 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_191.value0) + ")");
        };
        if (_191 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match");
    });
};
var semigroupMaybe = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_189) {
        return function (_190) {
            if (_189 instanceof Nothing) {
                return _190;
            };
            if (_190 instanceof Nothing) {
                return _189;
            };
            if (_189 instanceof Just && _190 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_1)(_189.value0)(_190.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
};
var maybe = function (_176) {
    return function (_177) {
        return function (_178) {
            if (_178 instanceof Nothing) {
                return _176;
            };
            if (_178 instanceof Just) {
                return _177(_178.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (_179) {
    return function (_180) {
        if (_180 instanceof Just) {
            return new Just(_179(_180.value0));
        };
        return Nothing.value;
    };
});
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryArr));
};
var extendMaybe = new Control_Extend.Extend(function (_187) {
    return function (_188) {
        if (_188 instanceof Nothing) {
            return Nothing.value;
        };
        return Just.create(_187(_188));
    };
}, function () {
    return functorMaybe;
});
var eqMaybe = function (__dict_Eq_3) {
    return new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMaybe(__dict_Eq_3))(a)(b);
        };
    }, function (_192) {
        return function (_193) {
            if (_192 instanceof Nothing && _193 instanceof Nothing) {
                return true;
            };
            if (_192 instanceof Just && _193 instanceof Just) {
                return Prelude["=="](__dict_Eq_3)(_192.value0)(_193.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_194) {
        return function (_195) {
            if (_194 instanceof Just && _195 instanceof Just) {
                return Prelude.compare(__dict_Ord_2)(_194.value0)(_195.value0);
            };
            if (_194 instanceof Nothing && _195 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_194 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_195 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
};
var applyMaybe = new Prelude.Apply(function (_181) {
    return function (_182) {
        if (_181 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_181.value0)(_182);
        };
        if (_181 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return functorMaybe;
});
var bindMaybe = new Prelude.Bind(function (_185) {
    return function (_186) {
        if (_185 instanceof Just) {
            return _186(_185.value0);
        };
        if (_185 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return applyMaybe;
});
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function (_183) {
    return function (_184) {
        if (_183 instanceof Nothing) {
            return _184;
        };
        return _183;
    };
}, function () {
    return functorMaybe;
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Just: Just, 
    Nothing: Nothing, 
    altMaybe: altMaybe, 
    alternativeMaybe: alternativeMaybe, 
    applicativeMaybe: applicativeMaybe, 
    applyMaybe: applyMaybe, 
    bindMaybe: bindMaybe, 
    eqMaybe: eqMaybe, 
    extendMaybe: extendMaybe, 
    fromMaybe: fromMaybe, 
    functorMaybe: functorMaybe, 
    isJust: isJust, 
    isNothing: isNothing, 
    maybe: maybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    ordMaybe: ordMaybe, 
    plusMaybe: plusMaybe, 
    semigroupMaybe: semigroupMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":5,"Control.Alternative":6,"Control.Extend":9,"Control.MonadPlus":14,"Control.Plus":15,"Prelude":122}],40:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var All = {
    create: function (value) {
        return value;
    }
};
var showAll = new Prelude.Show(function (_225) {
    return "All (" + (Prelude.show(Prelude.showBoolean)(_225) + ")");
});
var semigroupAll = new Prelude.Semigroup(function (_226) {
    return function (_227) {
        return _226 && _227;
    };
});
var runAll = function (_220) {
    return _220;
};
var monoidAll = new Data_Monoid.Monoid(function () {
    return semigroupAll;
}, true);
var eqAll = new Prelude.Eq(function (_223) {
    return function (_224) {
        return _223 !== _224;
    };
}, function (_221) {
    return function (_222) {
        return _221 === _222;
    };
});
module.exports = {
    All: All, 
    eqAll: eqAll, 
    monoidAll: monoidAll, 
    runAll: runAll, 
    semigroupAll: semigroupAll, 
    showAll: showAll
};

},{"Data.Monoid":45,"Prelude":122}],41:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Any = {
    create: function (value) {
        return value;
    }
};
var showAny = new Prelude.Show(function (_233) {
    return "Any (" + (Prelude.show(Prelude.showBoolean)(_233) + ")");
});
var semigroupAny = new Prelude.Semigroup(function (_234) {
    return function (_235) {
        return _234 || _235;
    };
});
var runAny = function (_228) {
    return _228;
};
var monoidAny = new Data_Monoid.Monoid(function () {
    return semigroupAny;
}, false);
var eqAny = new Prelude.Eq(function (_231) {
    return function (_232) {
        return _231 !== _232;
    };
}, function (_229) {
    return function (_230) {
        return _229 === _230;
    };
});
module.exports = {
    Any: Any, 
    eqAny: eqAny, 
    monoidAny: monoidAny, 
    runAny: runAny, 
    semigroupAny: semigroupAny, 
    showAny: showAny
};

},{"Data.Monoid":45,"Prelude":122}],42:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Dual = {
    create: function (value) {
        return value;
    }
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_243) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_243) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_244) {
        return function (_245) {
            return Prelude["<>"](__dict_Semigroup_1)(_245)(_244);
        };
    });
};
var runDual = function (_236) {
    return _236;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_239) {
        return function (_240) {
            return Prelude["/="](__dict_Eq_4)(_239)(_240);
        };
    }, function (_237) {
        return function (_238) {
            return Prelude["=="](__dict_Eq_4)(_237)(_238);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_241) {
        return function (_242) {
            return Prelude.compare(__dict_Ord_2)(_241)(_242);
        };
    });
};
module.exports = {
    Dual: Dual, 
    eqDual: eqDual, 
    monoidDual: monoidDual, 
    ordDual: ordDual, 
    runDual: runDual, 
    semigroupDual: semigroupDual, 
    showDual: showDual
};

},{"Data.Monoid":45,"Prelude":122}],43:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Endo = {
    create: function (value) {
        return value;
    }
};
var semigroupEndo = new Prelude.Semigroup(function (_247) {
    return function (_248) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(_247)(_248);
    };
});
var runEndo = function (_246) {
    return _246;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryArr));
module.exports = {
    Endo: Endo, 
    monoidEndo: monoidEndo, 
    runEndo: runEndo, 
    semigroupEndo: semigroupEndo
};

},{"Data.Monoid":45,"Prelude":122}],44:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = {
    create: function (value) {
        return value;
    }
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_361) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_361) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_362) {
    return function (_363) {
        if (_362 instanceof Data_Maybe.Just) {
            return _362;
        };
        return _363;
    };
});
var runFirst = function (_354) {
    return _354;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_357) {
        return function (_358) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_357)(_358);
        };
    }, function (_355) {
        return function (_356) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_355)(_356);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_359) {
        return function (_360) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_359)(_360);
        };
    });
};
module.exports = {
    First: First, 
    eqFirst: eqFirst, 
    monoidFirst: monoidFirst, 
    ordFirst: ordFirst, 
    runFirst: runFirst, 
    semigroupFirst: semigroupFirst, 
    showFirst: showFirst
};

},{"Data.Maybe":39,"Data.Monoid":45,"Prelude":122}],45:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidMaybe = function (__dict_Semigroup_0) {
    return new Monoid(function () {
        return Data_Maybe.semigroupMaybe(__dict_Semigroup_0);
    }, Data_Maybe.Nothing.value);
};
var monoidArray = new Monoid(function () {
    return Data_Array.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidArr = function (__dict_Monoid_1) {
    return new Monoid(function () {
        return Prelude.semigroupArr(__dict_Monoid_1["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_1)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidArr: monoidArr, 
    monoidArray: monoidArray, 
    monoidMaybe: monoidMaybe, 
    monoidString: monoidString, 
    monoidUnit: monoidUnit
};

},{"Data.Array":27,"Data.Maybe":39,"Prelude":122}],46:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Profunctor = require("Data.Profunctor");
function Choice(__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var choiceArr = new Choice(function () {
    return Data_Profunctor.profunctorArr;
}, function (_167) {
    return function (_168) {
        if (_168 instanceof Data_Either.Left) {
            return Data_Either.Left.create(_167(_168.value0));
        };
        if (_168 instanceof Data_Either.Right) {
            return new Data_Either.Right(_168.value0);
        };
        throw new Error("Failed pattern match");
    };
}, Prelude["<$>"](Data_Either.functorEither));
module.exports = {
    Choice: Choice, 
    choiceArr: choiceArr, 
    left: left, 
    right: right
};

},{"Data.Either":32,"Data.Profunctor":47,"Prelude":122}],47:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Profunctor(dimap) {
    this.dimap = dimap;
};
var profunctorArr = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (__dict_Profunctor_0) {
    return function (a2b) {
        return dimap(__dict_Profunctor_0)(a2b)(Prelude.id(Prelude.categoryArr));
    };
};
var rmap = function (__dict_Profunctor_1) {
    return function (b2c) {
        return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryArr))(b2c);
    };
};
module.exports = {
    Profunctor: Profunctor, 
    dimap: dimap, 
    lmap: lmap, 
    profunctorArr: profunctorArr, 
    rmap: rmap
};

},{"Prelude":122}],48:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Map = require("Data.Map");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
function Set(value0) {
    this.value0 = value0;
};
Set.create = function (value0) {
    return new Set(value0);
};
var union = function (__dict_Ord_0) {
    return function (_636) {
        return function (_637) {
            return new Set(Data_Map.union(__dict_Ord_0)(_636.value0)(_637.value0));
        };
    };
};
var toList = function (_635) {
    return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_635.value0));
};
var singleton = function (a) {
    return new Set(Data_Map.singleton(a)(Prelude.unit));
};
var showSet = function (__dict_Show_1) {
    return new Prelude.Show(function (s) {
        return "fromList " + Prelude.show(Prelude.showArray(__dict_Show_1))(toList(s));
    });
};
var member = function (__dict_Ord_2) {
    return function (_629) {
        return function (_630) {
            return Data_Map.member(__dict_Ord_2)(_629)(_630.value0);
        };
    };
};
var isEmpty = function (_627) {
    return Data_Map.isEmpty(_627.value0);
};
var insert = function (__dict_Ord_3) {
    return function (_631) {
        return function (_632) {
            return new Set(Data_Map.insert(__dict_Ord_3)(_631)(Prelude.unit)(_632.value0));
        };
    };
};
var eqSet = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_640) {
        return function (_641) {
            return Prelude["/="](Data_Map.eqMap(__dict_Eq_4)(Prelude.eqUnit))(_640.value0)(_641.value0);
        };
    }, function (_638) {
        return function (_639) {
            return Prelude["=="](Data_Map.eqMap(__dict_Eq_4)(Prelude.eqUnit))(_638.value0)(_639.value0);
        };
    });
};
var empty = new Set(Data_Map.empty);
var fromList = function (__dict_Ord_5) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (a) {
            return insert(__dict_Ord_5)(a)(m);
        };
    })(empty);
};
var unions = function (__dict_Ord_6) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_6))(empty);
};
var $$delete = function (__dict_Ord_7) {
    return function (_633) {
        return function (_634) {
            return new Set(Data_Map["delete"](__dict_Ord_7)(_633)(_634.value0));
        };
    };
};
var difference = function (__dict_Ord_8) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip($$delete(__dict_Ord_8)))(s1)(toList(s2));
        };
    };
};
var checkValid = function (_628) {
    return Data_Map.checkValid(_628.value0);
};
module.exports = {
    checkValid: checkValid, 
    "delete": $$delete, 
    difference: difference, 
    empty: empty, 
    eqSet: eqSet, 
    fromList: fromList, 
    insert: insert, 
    isEmpty: isEmpty, 
    member: member, 
    showSet: showSet, 
    singleton: singleton, 
    toList: toList, 
    union: union, 
    unions: unions
};

},{"Data.Array":27,"Data.Foldable":34,"Data.Map":37,"Data.Tuple":56,"Prelude":122}],49:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

  function _new() {
    return {};
  }
  ;

  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;

  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;

  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
var $$new = _new;
var $$delete = _delete;
module.exports = {
    "delete": $$delete, 
    "new": $$new, 
    peek: peek, 
    poke: poke
};

},{"Prelude":122}],50:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap_ST = require("Data.StrMap.ST");
var Data_Array = require("Data.Array");

  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;

  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;

  function runST(f) {
    return f;
  }
  ;

  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;

  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;

  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;

  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
var empty = {};;

  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;

  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;

  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;

  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;

  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
var values = _collect(function (_) {
    return function (v) {
        return v;
    };
});
var toList = _collect(Data_Tuple.Tuple.create);
var thawST = _copyEff;
var showStrMap = function (__dict_Show_0) {
    return new Prelude.Show(function (m) {
        return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_0)))(toList(m));
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure(runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var _27 = Data_StrMap_ST["new"]();
            Data_StrMap_ST.poke(_27)(k)(v)();
            return _27;
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var _26 = thawST(m)();
            f(_26)();
            return _26;
        });
    };
};
var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (__dict_Eq_1) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return _lookup(false, Prelude["=="](__dict_Eq_1)(v), k, m2);
                };
            };
            return all(f)(m1);
        };
    };
};
var isEmpty = all(function (_) {
    return function (__1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_StrMap_ST.poke(s)(k)(v);
        });
    };
};
var functorStrMap = new Prelude.Functor(function (f) {
    return function (m) {
        return _fmapStrMap(m, f);
    };
});
var map = Prelude["<$>"](functorStrMap);
var fromList = function (l) {
    return pureST(function __do() {
        var _28 = Data_StrMap_ST["new"]();
        Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_642) {
            return Data_StrMap_ST.poke(_28)(_642.value0)(_642.value1);
        })();
        return _28;
    });
};
var freezeST = _copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (__dict_Monad_2) {
    return function (f) {
        return function (z) {
            return _foldM(Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(z));
        };
    };
};
var semigroupStrMap = function (__dict_Semigroup_3) {
    return new Prelude.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s) {
                return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                return Prelude["<>"](__dict_Semigroup_3)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s)(m1);
            })(m2);
        };
    });
};
var union = function (m) {
    return mutate(function (s) {
        return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
    });
};
var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
var fold = _foldM(Prelude["#"]);
var foldMap = function (__dict_Monoid_6) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["<>"](__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(__dict_Monoid_6));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_7) {
    return function (f) {
        return foldMap(__dict_Monoid_7)(Prelude["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (_) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (__dict_Applicative_5) {
    return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_5)(Prelude.id(Prelude.categoryArr));
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (ms) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<*>"](__dict_Applicative_4["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                };
            })(Prelude.pure(__dict_Applicative_4)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_4)(f))(toList(ms))));
        };
    };
});
var eqStrMap = function (__dict_Eq_8) {
    return new Prelude.Eq(function (m1) {
        return function (m2) {
            return !Prelude["=="](eqStrMap(__dict_Eq_8))(m1)(m2);
        };
    }, function (m1) {
        return function (m2) {
            return isSubmap(__dict_Eq_8)(m1)(m2) && isSubmap(__dict_Eq_8)(m2)(m1);
        };
    });
};
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_StrMap_ST["delete"](s)(k);
    });
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var _2397 = f(lookup(k)(m));
            if (_2397 instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (_2397 instanceof Data_Maybe.Just) {
                return insert(k)(_2397.value0)(m);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    all: all, 
    alter: alter, 
    "delete": $$delete, 
    empty: empty, 
    eqStrMap: eqStrMap, 
    fold: fold, 
    foldM: foldM, 
    foldMap: foldMap, 
    foldMaybe: foldMaybe, 
    foldableStrMap: foldableStrMap, 
    freezeST: freezeST, 
    fromList: fromList, 
    functorStrMap: functorStrMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    isSubmap: isSubmap, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    runST: runST, 
    semigroupStrMap: semigroupStrMap, 
    showStrMap: showStrMap, 
    singleton: singleton, 
    size: size, 
    thawST: thawST, 
    toList: toList, 
    traversableStrMap: traversableStrMap, 
    union: union, 
    unions: unions, 
    update: update, 
    values: values
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Foldable":34,"Data.Function":35,"Data.Maybe":39,"Data.Monoid":45,"Data.StrMap.ST":49,"Data.Traversable":54,"Data.Tuple":56,"Prelude":122}],51:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_String = require("Data.String");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

  function showRegex$prime(r) {
    return '' + r;
  }
  ;

  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;

  function source(r) {
    return r.source;
  }
  ;

  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;

  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;

  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;

  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;

  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;

  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;

  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
var showRegex = new Prelude.Show(showRegex$prime);
var renderFlags = function (flags_1) {
    return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
};
var regex = function (source_1) {
    return function (flags_1) {
        return regex$prime(source_1)(renderFlags(flags_1));
    };
};
var parseFlags = function (s) {
    return {
        global: Data_String.indexOf("g")(s) >= 0, 
        ignoreCase: Data_String.indexOf("i")(s) >= 0, 
        multiline: Data_String.indexOf("m")(s) >= 0, 
        sticky: Data_String.indexOf("y")(s) >= 0, 
        unicode: Data_String.indexOf("u")(s) >= 0
    };
};
var match = function (r) {
    return function (s) {
        return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    flags: flags, 
    match: match, 
    parseFlags: parseFlags, 
    regex: regex, 
    renderFlags: renderFlags, 
    replace: replace, 
    "replace'": replace$prime, 
    search: search, 
    showRegex: showRegex, 
    source: source, 
    split: split, 
    test: test
};

},{"Data.Function":35,"Data.Maybe":39,"Data.String":53,"Prelude":122}],52:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;

    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt
};

},{"Prelude":122}],53:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Data_Char = require("Data.Char");
var Data_String_Unsafe = require("Data.String.Unsafe");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;

    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;

    function fromCharArray(a) {
      return a.join('');
    }
    ;

    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;

    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;

    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;

    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;

    function length(s) {
      return s.length;
    }
    ;

    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;

    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;

    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;

    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;

    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;

    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;

    function toCharArray(s) {
      return s.split('');
    }
    ;

    function toLower(s) {
      return s.toLowerCase();
    }
    ;

    function toUpper(s) {
      return s.toUpperCase();
    }
    ;

    function trim(s) {
      return s.trim();
    }
    ;

    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
var takeWhile = function (p) {
    return function (s) {
        return take(count(p)(s))(s);
    };
};
var $$null = function (s) {
    return length(s) === 0;
};
var uncons = function (_401) {
    if ($$null(_401)) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(_401), 
        tail: drop(1)(_401)
    });
};
var fromChar = Data_Char.charString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return drop(count(p)(s))(s);
    };
};
var charCodeAt = function (n) {
    return function (s) {
        return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
var charAt = function (n) {
    return function (s) {
        return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt, 
    count: count, 
    drop: drop, 
    dropWhile: dropWhile, 
    fromChar: fromChar, 
    fromCharArray: fromCharArray, 
    indexOf: indexOf, 
    "indexOf'": indexOf$prime, 
    joinWith: joinWith, 
    lastIndexOf: lastIndexOf, 
    "lastIndexOf'": lastIndexOf$prime, 
    length: length, 
    localeCompare: localeCompare, 
    "null": $$null, 
    replace: replace, 
    singleton: singleton, 
    split: split, 
    take: take, 
    takeWhile: takeWhile, 
    toCharArray: toCharArray, 
    toLower: toLower, 
    toUpper: toUpper, 
    trim: trim, 
    uncons: uncons
};

},{"Data.Char":28,"Data.Function":35,"Data.Maybe":39,"Data.String.Unsafe":52,"Prelude":122}],54:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var StateR = {
    create: function (value) {
        return value;
    }
};
var StateL = {
    create: function (value) {
        return value;
    }
};
function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableTuple = new Traversable(function () {
    return Data_Foldable.foldableTuple;
}, function () {
    return Data_Tuple.functorTuple;
}, function (__dict_Applicative_1) {
    return function (_415) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_415.value0))(_415.value1);
    };
}, function (__dict_Applicative_0) {
    return function (_413) {
        return function (_414) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_414.value0))(_413(_414.value1));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_412) {
        if (_412 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_412 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_412.value0);
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_2) {
    return function (_410) {
        return function (_411) {
            if (_411 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_411 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_410(_411.value0));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var traversableEither = new Traversable(function () {
    return Data_Foldable.foldableEither;
}, function () {
    return Data_Either.functorEither;
}, function (__dict_Applicative_5) {
    return function (_409) {
        if (_409 instanceof Data_Either.Left) {
            return Prelude.pure(__dict_Applicative_5)(new Data_Either.Left(_409.value0));
        };
        if (_409 instanceof Data_Either.Right) {
            return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_409.value0);
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_4) {
    return function (_407) {
        return function (_408) {
            if (_408 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_4)(new Data_Either.Left(_408.value0));
            };
            if (_408 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_407(_408.value0));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var stateR = function (_403) {
    return _403;
};
var stateL = function (_402) {
    return _402;
};
var sequence = function (dict) {
    return dict.sequence;
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Array.functorArray;
}, function (__dict_Applicative_7) {
    return function (_406) {
        if (_406.length === 0) {
            return Prelude.pure(__dict_Applicative_7)([  ]);
        };
        if (_406.length >= 1) {
            var _1533 = _406.slice(1);
            return Prelude["<*>"](__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_406[0]))(sequence(traversableArray)(__dict_Applicative_7)(_1533));
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_6) {
    return function (_404) {
        return function (_405) {
            if (_405.length === 0) {
                return Prelude.pure(__dict_Applicative_6)([  ]);
            };
            if (_405.length >= 1) {
                var _1537 = _405.slice(1);
                return Prelude["<*>"](__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_404(_405[0])))(traverse(traversableArray)(__dict_Applicative_6)(_404)(_1537));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var zipWithA = function (__dict_Applicative_8) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return sequence(traversableArray)(__dict_Applicative_8)(Data_Array.zipWith(f)(xs)(ys));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return StateR.create(function (s) {
            var _1538 = stateR(k)(s);
            return new Data_Tuple.Tuple(_1538.value0, f(_1538.value1));
        });
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return StateL.create(function (s) {
            var _1541 = stateL(k)(s);
            return new Data_Tuple.Tuple(_1541.value0, f(_1541.value1));
        });
    };
});
var $$for = function (__dict_Applicative_13) {
    return function (__dict_Traversable_14) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_14)(__dict_Applicative_13)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function (f) {
    return function (x) {
        return StateR.create(function (s) {
            var _1544 = stateR(x)(s);
            var _1545 = stateR(f)(_1544.value0);
            return new Data_Tuple.Tuple(_1545.value0, _1545.value1(_1544.value1));
        });
    };
}, function () {
    return functorStateR;
});
var applyStateL = new Prelude.Apply(function (f) {
    return function (x) {
        return StateL.create(function (s) {
            var _1550 = stateL(f)(s);
            var _1551 = stateL(x)(_1550.value0);
            return new Data_Tuple.Tuple(_1551.value0, _1550.value1(_1551.value1));
        });
    };
}, function () {
    return functorStateL;
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return StateR.create(function (s) {
        return new Data_Tuple.Tuple(s, a);
    });
});
var mapAccumR = function (__dict_Traversable_9) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_9)(applicativeStateR)(function (a) {
                    return StateR.create(function (s) {
                        return f(s)(a);
                    });
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_10) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return Data_Tuple.snd(mapAccumR(__dict_Traversable_10)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return new Data_Tuple.Tuple(b$prime, b$prime);
                    };
                })(b0)(xs));
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return StateL.create(function (s) {
        return new Data_Tuple.Tuple(s, a);
    });
});
var mapAccumL = function (__dict_Traversable_11) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_11)(applicativeStateL)(function (a) {
                    return StateL.create(function (s) {
                        return f(s)(a);
                    });
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_12) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return Data_Tuple.snd(mapAccumL(__dict_Traversable_12)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return new Data_Tuple.Tuple(b$prime, b$prime);
                    };
                })(b0)(xs));
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    "for": $$for, 
    mapAccumL: mapAccumL, 
    mapAccumR: mapAccumR, 
    scanl: scanl, 
    scanr: scanr, 
    sequence: sequence, 
    traversableArray: traversableArray, 
    traversableEither: traversableEither, 
    traversableMaybe: traversableMaybe, 
    traversableTuple: traversableTuple, 
    traverse: traverse, 
    zipWithA: zipWithA
};

},{"Data.Array":27,"Data.Either":32,"Data.Foldable":34,"Data.Maybe":39,"Data.Tuple":56,"Prelude":122}],55:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var $div$bslash = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, b);
    };
};
var con9 = function (f) {
    return function (_352) {
        return f(_352.value0)(_352.value1.value0)(_352.value1.value1.value0)(_352.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value1.value1);
    };
};
var con8 = function (f) {
    return function (_351) {
        return f(_351.value0)(_351.value1.value0)(_351.value1.value1.value0)(_351.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value1.value1);
    };
};
var con7 = function (f) {
    return function (_350) {
        return f(_350.value0)(_350.value1.value0)(_350.value1.value1.value0)(_350.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value1.value1);
    };
};
var con6 = function (f) {
    return function (_349) {
        return f(_349.value0)(_349.value1.value0)(_349.value1.value1.value0)(_349.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1);
    };
};
var con5 = function (f) {
    return function (_348) {
        return f(_348.value0)(_348.value1.value0)(_348.value1.value1.value0)(_348.value1.value1.value1.value0)(_348.value1.value1.value1.value1);
    };
};
var con4 = function (f) {
    return function (_347) {
        return f(_347.value0)(_347.value1.value0)(_347.value1.value1.value0)(_347.value1.value1.value1);
    };
};
var con3 = function (f) {
    return function (_346) {
        return f(_346.value0)(_346.value1.value0)(_346.value1.value1);
    };
};
var con2 = function (f) {
    return function (_345) {
        return f(_345.value0)(_345.value1);
    };
};
var con10 = function (f) {
    return function (_353) {
        return f(_353.value0)(_353.value1.value0)(_353.value1.value1.value0)(_353.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_353.value1.value1.value1.value1.value1.value1.value1.value1.value1);
    };
};
module.exports = {
    "/\\": $div$bslash, 
    con10: con10, 
    con2: con2, 
    con3: con3, 
    con4: con4, 
    con5: con5, 
    con6: con6, 
    con7: con7, 
    con8: con8, 
    con9: con9
};

},{"Data.Tuple":56,"Prelude":122}],56:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Lazy = require("Control.Lazy");
var Data_Array = require("Data.Array");
var Control_Extend = require("Control.Extend");
var Control_Comonad = require("Control.Comonad");
function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
Tuple.create = function (value0) {
    return function (value1) {
        return new Tuple(value0, value1);
    };
};
var zip = Data_Array.zipWith(Tuple.create);
var unzip = function (_273) {
    if (_273.length >= 1) {
        var _1122 = _273.slice(1);
        var _1116 = unzip(_1122);
        return new Tuple(Prelude[":"]((_273[0]).value0)(_1116.value0), Prelude[":"]((_273[0]).value1)(_1116.value1));
    };
    if (_273.length === 0) {
        return new Tuple([  ], [  ]);
    };
    throw new Error("Failed pattern match");
};
var uncurry = function (_271) {
    return function (_272) {
        return _271(_272.value0)(_272.value1);
    };
};
var swap = function (_274) {
    return new Tuple(_274.value1, _274.value0);
};
var snd = function (_270) {
    return _270.value1;
};
var showTuple = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return new Prelude.Show(function (_275) {
            return "Tuple (" + (Prelude.show(__dict_Show_0)(_275.value0) + (") (" + (Prelude.show(__dict_Show_1)(_275.value1) + ")")));
        });
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_280) {
    return function (_281) {
        return new Tuple(_281.value0, _280.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_2) {
    return function (__dict_Semigroup_3) {
        return new Prelude.Semigroup(function (_282) {
            return function (_283) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_2)(_282.value0)(_283.value0), Prelude["<>"](__dict_Semigroup_3)(_282.value1)(_283.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_6) {
    return function (__dict_Monoid_7) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_6), Data_Monoid.mempty(__dict_Monoid_7)));
    };
};
var functorTuple = new Prelude.Functor(function (_284) {
    return function (_285) {
        return new Tuple(_285.value0, _284(_285.value1));
    };
});
var fst = function (_269) {
    return _269.value0;
};
var lazyLazy1Tuple = function (__dict_Lazy1_9) {
    return function (__dict_Lazy1_10) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer1(__dict_Lazy1_9)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer1(__dict_Lazy1_10)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var lazyLazy2Tuple = function (__dict_Lazy2_11) {
    return function (__dict_Lazy2_12) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer2(__dict_Lazy2_11)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer2(__dict_Lazy2_12)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var lazyTuple = function (__dict_Lazy_13) {
    return function (__dict_Lazy_14) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_13)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_14)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var extendTuple = new Control_Extend.Extend(function (_290) {
    return function (_291) {
        return new Tuple(_291.value0, _290(_291));
    };
}, function () {
    return functorTuple;
});
var eqTuple = function (__dict_Eq_15) {
    return function (__dict_Eq_16) {
        return new Prelude.Eq(function (t1) {
            return function (t2) {
                return !Prelude["=="](eqTuple(__dict_Eq_15)(__dict_Eq_16))(t1)(t2);
            };
        }, function (_276) {
            return function (_277) {
                return Prelude["=="](__dict_Eq_15)(_276.value0)(_277.value0) && Prelude["=="](__dict_Eq_16)(_276.value1)(_277.value1);
            };
        });
    };
};
var ordTuple = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (_278) {
            return function (_279) {
                var _1167 = Prelude.compare(__dict_Ord_4)(_278.value0)(_279.value0);
                if (_1167 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_5)(_278.value1)(_279.value1);
                };
                return _1167;
            };
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var applyTuple = function (__dict_Semigroup_18) {
    return new Prelude.Apply(function (_286) {
        return function (_287) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_18)(_286.value0)(_287.value0), _286.value1(_287.value1));
        };
    }, function () {
        return functorTuple;
    });
};
var bindTuple = function (__dict_Semigroup_17) {
    return new Prelude.Bind(function (_288) {
        return function (_289) {
            var _1180 = _289(_288.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_17)(_288.value0)(_1180.value0), _1180.value1);
        };
    }, function () {
        return applyTuple(__dict_Semigroup_17);
    });
};
var applicativeTuple = function (__dict_Monoid_19) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_19)));
};
var monadTuple = function (__dict_Monoid_8) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_8);
    }, function () {
        return bindTuple(__dict_Monoid_8["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    applicativeTuple: applicativeTuple, 
    applyTuple: applyTuple, 
    bindTuple: bindTuple, 
    comonadTuple: comonadTuple, 
    curry: curry, 
    eqTuple: eqTuple, 
    extendTuple: extendTuple, 
    fst: fst, 
    functorTuple: functorTuple, 
    lazyLazy1Tuple: lazyLazy1Tuple, 
    lazyLazy2Tuple: lazyLazy2Tuple, 
    lazyTuple: lazyTuple, 
    monadTuple: monadTuple, 
    monoidTuple: monoidTuple, 
    ordTuple: ordTuple, 
    semigroupTuple: semigroupTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    showTuple: showTuple, 
    snd: snd, 
    swap: swap, 
    uncurry: uncurry, 
    unzip: unzip, 
    zip: zip
};

},{"Control.Comonad":8,"Control.Extend":9,"Control.Lazy":10,"Data.Array":27,"Data.Monoid":45,"Prelude":122}],57:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array_ST = require("Data.Array.ST");
var Prelude = require("Prelude");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
function Unfoldable(unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _31 = Data_Array_ST.emptySTArray();
            var _30 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _29 = Control_Monad_ST.readSTRef(_30)();
                    return (function () {
                        var _2454 = f(_29);
                        if (_2454 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.monadEff)(true);
                        };
                        if (_2454 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_31)(_2454.value0.value0)();
                                Control_Monad_ST.writeSTRef(_30)(_2454.value0.value1)();
                                return false;
                            };
                        };
                        throw new Error("Failed pattern match");
                    })()();
                })()) {

                };
                return {};
            })();
            return _31;
        }));
    };
});
module.exports = {
    Unfoldable: Unfoldable, 
    unfoldableArray: unfoldableArray, 
    unfoldr: unfoldr
};

},{"Control.Monad.Eff":12,"Control.Monad.ST":13,"Data.Array.ST":25,"Data.Maybe":39,"Data.Tuple":56,"Prelude":122}],58:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_String_Regex = require("Data.String.Regex");
var Prelude = require("Prelude");
var Data_Date = require("Data.Date");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Utils = require("Utils");
var Data_Traversable = require("Data.Traversable");
var Math = require("Math");
var Signal_Time = require("Signal.Time");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Signal = require("Signal");
var Data_Foldable = require("Data.Foldable");
var ECharts_AddData = require("ECharts.AddData");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");

function toLocaleTimeString(date) {
console.log(date);
  return date.toLocaleTimeString();
}
;
var options_ = function (xAxis) {
    return function (d1) {
        return function (d2) {
            return {
                title: {
                    text: "\u52a8\u6001\u6570\u636e", 
                    subtext: "\u7eaf\u5c5e\u865a\u6784"
                }, 
                tooltip: {
                    trigger: "axis"
                }, 
                legend: {
                    data: [ "\u6700\u65b0\u6210\u4ea4\u4ef7", "\u9884\u8d2d\u961f\u5217" ]
                }, 
                toolbox: {
                    show: true, 
                    feature: {
                        mark: {
                            show: true
                        }, 
                        dataView: {
                            show: true, 
                            readOnly: false
                        }, 
                        magicType: {
                            show: true, 
                            type: [ "line", "bar" ]
                        }, 
                        restore: {
                            show: true
                        }, 
                        saveAsImage: {
                            show: true
                        }
                    }
                }, 
                dataZoom: {
                    show: false, 
                    start: 0, 
                    end: 100
                }, 
                xAxis: Data_Tuple_Nested["/\\"]({
                    type: "category", 
                    boundaryGap: true, 
                    data: xAxis
                })({
                    type: "category", 
                    boundaryGap: true, 
                    data: Data_Array[".."](1)(10)
                }), 
                yAxis: Data_Tuple_Nested["/\\"]({
                    type: "value", 
                    scale: true, 
                    name: "\u4ef7\u683c", 
                    boundaryGap: [ 0.2, 0.2 ]
                })({
                    type: "value", 
                    scale: true, 
                    name: "\u9884\u8d2d\u91cf", 
                    boundaryGap: [ 0.2, 0.2 ]
                }), 
                series: Data_Tuple_Nested["/\\"]({
                    name: "\u9884\u8d2d\u961f\u5217", 
                    type: "bar", 
                    xAxisIndex: 1, 
                    yAxisIndex: 1, 
                    data: d1
                })({
                    name: "\u6700\u65b0\u6210\u4ea4\u4ef7", 
                    type: "line", 
                    data: d2
                })
            };
        };
    };
};
var onlyDigRgx = Data_String_Regex.regex("^\\D*")({
    global: false, 
    ignoreCase: false, 
    multiline: false, 
    sticky: false, 
    unicode: false
});
var xTimeAxis = function __do() {
    var _0 = Data_Date.now();
    return (function () {
        var start = Data_Date.toEpochMilliseconds(_0);
        var mapfn = function (i) {
            return Data_Maybe.fromMaybe("")(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<$>"](Prelude.functorArr)(Prelude["<$>"](Prelude.functorArr)(Data_String_Regex.replace(onlyDigRgx)(""))(toLocaleTimeString))(Data_Date.toJSDate))(Data_Date.fromEpochMilliseconds(start - i * 2000)));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
    })()();
};
var dataStream = Signal["~>"](Signal.functorSignal)(Signal_Time.every(2000))(Prelude["const"](function __do() {
    var _9 = Control_Monad_Eff_Random.random();
    var _8 = Control_Monad_Eff_Random.random();
    var _7 = Control_Monad_Eff_Random.random();
    return (function () {
        var lastData = Utils.precise(1)(_9 * (Math.round(_8 * 10 % 2) === 0 ? 1 : -1));
        return function __do() {
            var _6 = Data_Date.now();
            return (function () {
                var axisData = Data_String_Regex.replace(onlyDigRgx)("")(toLocaleTimeString(Data_Date.toJSDate(_6)));
                var firstData = {
                    idx: 0, 
                    datum: ECharts_Item_Data.Value.create(ECharts_Item_Value.Simple.create(Math.round(_7 * 1000))), 
                    isHead: true, 
                    dataGrow: false, 
                    additionalData: Data_Maybe.Nothing.value
                };
                var sndData = {
                    idx: 1, 
                    datum: ECharts_Item_Data.Value.create(ECharts_Item_Value.Simple.create(lastData)), 
                    isHead: false, 
                    dataGrow: false, 
                    additionalData: new Data_Maybe.Just(axisData)
                };
                return Prelude["return"](Control_Monad_Eff.monadEff)([ firstData, sndData ]);
            })()();
        };
    })()();
}));
var data2 = (function () {
    var mapfn = function (i) {
        return function __do() {
            var _1 = Control_Monad_Eff_Random.random();
            return Utils.precise(1)(_1 * 10 + 5);
        };
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
})();
var data1 = (function () {
    var mapfn = function (i) {
        return function __do() {
            var _2 = Control_Monad_Eff_Random.random();
            return Math.round(_2 * 1000);
        };
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
})();
var options = function __do() {
    var _5 = xTimeAxis();
    var _4 = data1();
    var _3 = data2();
    return options_(_5)(_4)(_3);
};
var dynamicLineBar = function (id) {
    return function __do() {
        var _12 = options();
        var _11 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(_12)(true))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(dataStream)(function (effContent) {
            return function __do() {
                var _10 = effContent();
                return Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Prelude["<$>"](Data_Array.functorArray)(Prelude.flip(ECharts_AddData.addData)(_11))(_10))();
            };
        }))();
    };
};
module.exports = {
    data1: data1, 
    data2: data2, 
    dataStream: dataStream, 
    dynamicLineBar: dynamicLineBar, 
    onlyDigRgx: onlyDigRgx, 
    options: options, 
    options_: options_, 
    toLocaleTimeString: toLocaleTimeString, 
    xTimeAxis: xTimeAxis
};

},{"Control.Monad.Eff":12,"Control.Monad.Eff.Random":11,"Data.Array":27,"Data.Date":31,"Data.Foldable":34,"Data.Maybe":39,"Data.String.Regex":51,"Data.Traversable":54,"Data.Tuple.Nested":55,"ECharts.AddData":59,"ECharts.Chart":61,"ECharts.Item.Data":72,"ECharts.Item.Value":73,"ECharts.Options.Unsafe":80,"Math":114,"Prelude":122,"Signal":126,"Signal.Time":125,"Utils":127}],59:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var ECharts_Item_Data = require("ECharts.Item.Data");
var AdditionalData = {
    create: function (value) {
        return value;
    }
};

function addDataImpl(data, chart) {
  return function() {
    return chart.addData.apply(chart, data);
  };
}
;
var additionalDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_20) {
    return Data_Argonaut_Core.fromArray([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_20.idx), Data_Argonaut_Encode.encodeJson(ECharts_Item_Data.itemDataEncodeJson)(_20.datum), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_20.isHead), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_20.dataGrow), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))(_20.additionalData) ]);
});
var addData = function (d) {
    return function (chart) {
        return addDataImpl(Data_Argonaut_Encode.encodeJson(additionalDataEncodeJson)(d), chart);
    };
};
module.exports = {
    AdditionalData: AdditionalData, 
    addData: addData, 
    additionalDataEncodeJson: additionalDataEncodeJson
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"ECharts.Item.Data":72,"Prelude":122}],60:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Area = require("ECharts.Style.Area");
function PolarPolygon() {

};
PolarPolygon.value = new PolarPolygon();
function PolarCircle() {

};
PolarCircle.value = new PolarCircle();
var PolarName = {
    create: function (value) {
        return value;
    }
};
function CategoryAxis() {

};
CategoryAxis.value = new CategoryAxis();
function ValueAxis() {

};
ValueAxis.value = new ValueAxis();
function TimeAxis() {

};
TimeAxis.value = new TimeAxis();
var AxisTick = {
    create: function (value) {
        return value;
    }
};
var AxisSplitLine = {
    create: function (value) {
        return value;
    }
};
var AxisSplitArea = {
    create: function (value) {
        return value;
    }
};
function LeftAxis() {

};
LeftAxis.value = new LeftAxis();
function RightAxis() {

};
RightAxis.value = new RightAxis();
function TopAxis() {

};
TopAxis.value = new TopAxis();
function BottomAxis() {

};
BottomAxis.value = new BottomAxis();
function Start() {

};
Start.value = new Start();
function End() {

};
End.value = new End();
var AxisLineStyle = {
    create: function (value) {
        return value;
    }
};
var AxisLine = {
    create: function (value) {
        return value;
    }
};
var AxisLabel = {
    create: function (value) {
        return value;
    }
};
var Indicator = {
    create: function (value) {
        return value;
    }
};
var Polar = {
    create: function (value) {
        return value;
    }
};
function CommonAxisData(value0) {
    this.value0 = value0;
};
CommonAxisData.create = function (value0) {
    return new CommonAxisData(value0);
};
function CustomAxisData(value0) {
    this.value0 = value0;
};
CustomAxisData.create = function (value0) {
    return new CustomAxisData(value0);
};
var Axis = {
    create: function (value) {
        return value;
    }
};
function OneAxis(value0) {
    this.value0 = value0;
};
OneAxis.create = function (value0) {
    return new OneAxis(value0);
};
function TwoAxises(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
TwoAxises.create = function (value0) {
    return function (value1) {
        return new TwoAxises(value0, value1);
    };
};
var polarTypeEncode = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof PolarPolygon) {
            return "polygon";
        };
        if (a instanceof PolarCircle) {
            return "circle";
        };
        throw new Error("Failed pattern match");
    })());
});
var polarNameEncode = new Data_Argonaut_Encode.EncodeJson(function (_30) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_30.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_30.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_30.textStyle) ]));
});
var polarNameDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var polarDefault = {
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    indicator: Data_Maybe.Nothing.value
};
var indicatorDefault = {
    text: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value
};
var axisTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof CategoryAxis) {
            return "category";
        };
        if (a instanceof ValueAxis) {
            return "value";
        };
        if (a instanceof TimeAxis) {
            return "time";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisTickEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_23) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_23.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_23.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_23.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_23.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_23.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_23.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("inside")(_23.inside) ]));
});
var axisTickDefault = {
    show: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    inside: Data_Maybe.Nothing.value
};
var axisSplitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_26) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_26.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_26.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_26.lineStyle) ]));
});
var axisSplitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisSplitAreaEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_27) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_27.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_27.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_27.areaStyle) ]));
});
var axisSplitAreaDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value
};
var axisPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LeftAxis) {
            return "left";
        };
        if (a instanceof RightAxis) {
            return "right";
        };
        if (a instanceof TopAxis) {
            return "top";
        };
        if (a instanceof BottomAxis) {
            return "bottom";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisNameLocationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Start) {
            return "start";
        };
        if (a instanceof End) {
            return "end";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisLineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_21) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJString))))("color")(_21.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_21.width) ]));
});
var axisLineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
var axisLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_22) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_22.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineStyleEncodeJson))("lineStyle")(_22.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onZero")(_22.onZero) ]));
});
var axisLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onZero: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_24) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_24.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_24.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_24.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_24.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("rotate")(_24.rotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("margin")(_24.margin), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(_24.clickable) ]));
});
var indicatorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_31) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_31.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_31.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_31.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_31.axisLabel) ]));
});
var polarEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_32) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(_32.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("radius")(_32.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(_32.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_32.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarNameEncode))("name")(_32.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("boundaryGap")(_32.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_32.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_32.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_32.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_32.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_32.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarTypeEncode))("type")(_32.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(indicatorEncodeJson)))("indicator")(_32.indicator) ]));
});
var axisLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    rotate: Data_Maybe.Nothing.value, 
    margin: Data_Maybe.Nothing.value, 
    clickable: Data_Maybe.Nothing.value
};
var axisDefault = {
    type: Data_Maybe.Nothing.value, 
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    nameLocation: Data_Maybe.Nothing.value, 
    nameTextStyle: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisTick: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var axisDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_28) {
    if (_28 instanceof CommonAxisData) {
        return Data_Argonaut_Core.fromString(_28.value0);
    };
    if (_28 instanceof CustomAxisData) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("value")(_28.value0.value), Data_Argonaut_Combinators[":="](ECharts_Style_Text.textStyleEncodeJson)("textStyle")(_28.value0.textStyle) ]));
    };
    throw new Error("Failed pattern match");
});
var axisEncJson = new Data_Argonaut_Encode.EncodeJson(function (_29) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTypeEncodeJson))("type")(_29.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_29.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisPositionEncodeJson))("position")(_29.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_29.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisNameLocationEncodeJson))("nameLocation")(_29.nameLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("nameTextStyle")(_29.nameTextStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("boundaryGap")(_29.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_29.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_29.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_29.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_29.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_29.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTickEncodeJson))("axisTick")(_29.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_29.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_29.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_29.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(axisDataEncodeJson)))("data")(_29.data) ]));
});
var axisesEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_25) {
    if (_25 instanceof OneAxis) {
        return Data_Argonaut_Encode.encodeJson(axisEncJson)(_25.value0);
    };
    if (_25 instanceof TwoAxises) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(axisEncJson))([ _25.value0, _25.value1 ]);
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    Axis: Axis, 
    AxisLabel: AxisLabel, 
    AxisLine: AxisLine, 
    AxisLineStyle: AxisLineStyle, 
    AxisSplitArea: AxisSplitArea, 
    AxisSplitLine: AxisSplitLine, 
    AxisTick: AxisTick, 
    BottomAxis: BottomAxis, 
    CategoryAxis: CategoryAxis, 
    CommonAxisData: CommonAxisData, 
    CustomAxisData: CustomAxisData, 
    End: End, 
    Indicator: Indicator, 
    LeftAxis: LeftAxis, 
    OneAxis: OneAxis, 
    Polar: Polar, 
    PolarCircle: PolarCircle, 
    PolarName: PolarName, 
    PolarPolygon: PolarPolygon, 
    RightAxis: RightAxis, 
    Start: Start, 
    TimeAxis: TimeAxis, 
    TopAxis: TopAxis, 
    TwoAxises: TwoAxises, 
    ValueAxis: ValueAxis, 
    axisDataEncodeJson: axisDataEncodeJson, 
    axisDefault: axisDefault, 
    axisEncJson: axisEncJson, 
    axisLabelDefault: axisLabelDefault, 
    axisLabelEncodeJson: axisLabelEncodeJson, 
    axisLineDefault: axisLineDefault, 
    axisLineEncodeJson: axisLineEncodeJson, 
    axisLineStyleDefault: axisLineStyleDefault, 
    axisLineStyleEncodeJson: axisLineStyleEncodeJson, 
    axisNameLocationEncodeJson: axisNameLocationEncodeJson, 
    axisPositionEncodeJson: axisPositionEncodeJson, 
    axisSplitAreaDefault: axisSplitAreaDefault, 
    axisSplitAreaEncodeJson: axisSplitAreaEncodeJson, 
    axisSplitLineDefault: axisSplitLineDefault, 
    axisSplitLineEncodeJson: axisSplitLineEncodeJson, 
    axisTickDefault: axisTickDefault, 
    axisTickEncodeJson: axisTickEncodeJson, 
    axisTypeEncodeJson: axisTypeEncodeJson, 
    axisesEncodeJson: axisesEncodeJson, 
    indicatorDefault: indicatorDefault, 
    indicatorEncodeJson: indicatorEncodeJson, 
    polarDefault: polarDefault, 
    polarEncodeJson: polarEncodeJson, 
    polarNameDefault: polarNameDefault, 
    polarNameEncode: polarNameEncode, 
    polarTypeEncode: polarTypeEncode
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Formatter":69,"ECharts.Style.Area":87,"ECharts.Style.Line":91,"ECharts.Style.Text":94,"Prelude":122}],61:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
function ThemeName(value0) {
    this.value0 = value0;
};
ThemeName.create = function (value0) {
    return new ThemeName(value0);
};
function ThemeConfig(value0) {
    this.value0 = value0;
};
ThemeConfig.create = function (value0) {
    return new ThemeConfig(value0);
};

function initImpl(node, theme) {
  return function() {
    return echarts.init(node, theme);
  };
}
;

function setThemeImpl(args, chart) {
  return function() {
    chart.setTheme.apply(chart, args);
  };
}
;

function getZRender(chart) {
  return function() {
    return chart.getZRender();
  };
}
;

function resize(chart) {
  return function() {
    return chart.resize();
  };
}
;

function refresh(chart) {
  return function( ){
    return chart.refresh();
  };
}
;

function clear(chart) {
  return function() {
    return chart.clear();
  };
}
;

function dispose() {
  return function() {
    return chart.dispose();
  };
}
;
var themeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (theme) {
    if (theme instanceof ThemeName) {
        return Data_Argonaut_Core.fromString(theme.value0);
    };
    if (theme instanceof ThemeConfig) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJson)(theme.value0);
    };
    throw new Error("Failed pattern match");
});
var setTheme = function (theme) {
    return function (chart) {
        return setThemeImpl(Data_Argonaut_Encode.encodeJson(themeEncodeJson)(theme), chart);
    };
};
var init = function (theme) {
    return function (dom) {
        return initImpl(dom, Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(themeEncodeJson))(theme));
    };
};
module.exports = {
    ThemeConfig: ThemeConfig, 
    ThemeName: ThemeName, 
    clear: clear, 
    dispose: dispose, 
    getZRender: getZRender, 
    init: init, 
    refresh: refresh, 
    resize: resize, 
    setTheme: setTheme, 
    themeEncodeJson: themeEncodeJson
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Prelude":122}],62:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var ColorFuncParam = {
    create: function (value) {
        return value;
    }
};
function SimpleColor(value0) {
    this.value0 = value0;
};
SimpleColor.create = function (value0) {
    return new SimpleColor(value0);
};
function ColorFunc(value0) {
    this.value0 = value0;
};
ColorFunc.create = function (value0) {
    return new ColorFunc(value0);
};
var calculableColorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (cc) {
    if (cc instanceof SimpleColor) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(cc.value0);
    };
    if (cc instanceof ColorFunc) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(cc.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    ColorFunc: ColorFunc, 
    ColorFuncParam: ColorFuncParam, 
    SimpleColor: SimpleColor, 
    calculableColorEncodeJson: calculableColorEncodeJson
};

},{"Data.Argonaut.Encode":19,"Data.Function":35,"ECharts.Utils":101,"Prelude":122}],63:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
function NoSort() {

};
NoSort.value = new NoSort();
function Asc() {

};
Asc.value = new Asc();
function Desc() {

};
Desc.value = new Desc();
function SelModeSingle() {

};
SelModeSingle.value = new SelModeSingle();
function SelModeMultiple() {

};
SelModeMultiple.value = new SelModeMultiple();
function SelModeFalse() {

};
SelModeFalse.value = new SelModeFalse();
function RTRadius() {

};
RTRadius.value = new RTRadius();
function RTArea() {

};
RTArea.value = new RTArea();
function Enable() {

};
Enable.value = new Enable();
function Disable() {

};
Disable.value = new Disable();
function Scale() {

};
Scale.value = new Scale();
function Move() {

};
Move.value = new Move();
function R(value0) {
    this.value0 = value0;
};
R.create = function (value0) {
    return new R(value0);
};
function Rs(value0) {
    this.value0 = value0;
};
Rs.create = function (value0) {
    return new Rs(value0);
};
function Percent(value0) {
    this.value0 = value0;
};
Percent.create = function (value0) {
    return new Percent(value0);
};
function Pixel(value0) {
    this.value0 = value0;
};
Pixel.create = function (value0) {
    return new Pixel(value0);
};
var MinMax = {
    create: function (value) {
        return value;
    }
};
function SumCalculation() {

};
SumCalculation.value = new SumCalculation();
function AverageCalculation() {

};
AverageCalculation.value = new AverageCalculation();
function Auto() {

};
Auto.value = new Auto();
function Custom(value0) {
    this.value0 = value0;
};
Custom.create = function (value0) {
    return new Custom(value0);
};
function AllCorners(value0) {
    this.value0 = value0;
};
AllCorners.create = function (value0) {
    return new AllCorners(value0);
};
function Corners(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Corners.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Corners(value0, value1, value2, value3);
            };
        };
    };
};
var sortEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof NoSort) {
            return "none";
        };
        if (a instanceof Asc) {
            return "ascending";
        };
        if (a instanceof Desc) {
            return "descending";
        };
        throw new Error("Failed pattern match");
    })());
});
var selModeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    if (a instanceof SelModeSingle) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("single");
    };
    if (a instanceof SelModeMultiple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("multiple");
    };
    if (a instanceof SelModeFalse) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    throw new Error("Failed pattern match");
});
var roseTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof RTRadius) {
            return "radius";
        };
        if (a instanceof RTArea) {
            return "area";
        };
        throw new Error("Failed pattern match");
    })());
});
var roamEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_68) {
    if (_68 instanceof Enable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(true);
    };
    if (_68 instanceof Disable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    if (_68 instanceof Scale) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("scale");
    };
    if (_68 instanceof Move) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("move");
    };
    throw new Error("Failed pattern match");
});
var radiusEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_70) {
    if (_70 instanceof R) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_70.value0);
    };
    if (_70 instanceof Rs) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ _70.value0.inner, _70.value0.outer ]);
    };
    throw new Error("Failed pattern match");
});
var percentOrPixelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_67) {
    if (_67 instanceof Percent) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(Prelude.show(Prelude.showNumber)(_67.value0) + "%");
    };
    if (_67 instanceof Pixel) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_67.value0);
    };
    throw new Error("Failed pattern match");
});
var minMaxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_69) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("min")(_69.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("max")(_69.max) ]));
});
var mapValueCalculationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof SumCalculation) {
            return "sum";
        };
        if (a instanceof AverageCalculation) {
            return "average";
        };
        throw new Error("Failed pattern match");
    })());
});
var intervalEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_71) {
    if (_71 instanceof Auto) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("auto");
    };
    if (_71 instanceof Custom) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_71.value0);
    };
    throw new Error("Failed pattern match");
});
var cornerJsonEncode = function (__dict_EncodeJson_0) {
    return new Data_Argonaut_Encode.EncodeJson(function (corners) {
        if (corners instanceof AllCorners) {
            return Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(corners.value0);
        };
        if (corners instanceof Corners) {
            return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(__dict_EncodeJson_0))([ corners.value0, corners.value1, corners.value2, corners.value3 ]);
        };
        throw new Error("Failed pattern match");
    });
};
module.exports = {
    AllCorners: AllCorners, 
    Asc: Asc, 
    Auto: Auto, 
    AverageCalculation: AverageCalculation, 
    Corners: Corners, 
    Custom: Custom, 
    Desc: Desc, 
    Disable: Disable, 
    Enable: Enable, 
    MinMax: MinMax, 
    Move: Move, 
    NoSort: NoSort, 
    Percent: Percent, 
    Pixel: Pixel, 
    R: R, 
    RTArea: RTArea, 
    RTRadius: RTRadius, 
    Rs: Rs, 
    Scale: Scale, 
    SelModeFalse: SelModeFalse, 
    SelModeMultiple: SelModeMultiple, 
    SelModeSingle: SelModeSingle, 
    SumCalculation: SumCalculation, 
    cornerJsonEncode: cornerJsonEncode, 
    intervalEncodeJson: intervalEncodeJson, 
    mapValueCalculationEncodeJson: mapValueCalculationEncodeJson, 
    minMaxEncodeJson: minMaxEncodeJson, 
    percentOrPixelEncodeJson: percentOrPixelEncodeJson, 
    radiusEncodeJson: radiusEncodeJson, 
    roamEncodeJson: roamEncodeJson, 
    roseTypeEncodeJson: roseTypeEncodeJson, 
    selModeEncodeJson: selModeEncodeJson, 
    sortEncodeJson: sortEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.StrMap":50,"Prelude":122}],64:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Connection = {
    create: function (value) {
        return value;
    }
};

function connectImpl(target, source) {
  return function() {
    source.connect(target);
    return function() {
      source.disconnect(target);
    };
  };
}
;
var connect = function (target) {
    return function (source) {
        return connectImpl(target, source);
    };
};
module.exports = {
    connect: connect
};

},{"Data.Function":35,"Prelude":122}],65:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
function YTop() {

};
YTop.value = new YTop();
function YBottom() {

};
YBottom.value = new YBottom();
function YCenter() {

};
YCenter.value = new YCenter();
function Y(value0) {
    this.value0 = value0;
};
Y.create = function (value0) {
    return new Y(value0);
};
function XLeft() {

};
XLeft.value = new XLeft();
function XRight() {

};
XRight.value = new XRight();
function XCenter() {

};
XCenter.value = new XCenter();
function X(value0) {
    this.value0 = value0;
};
X.create = function (value0) {
    return new X(value0);
};
function Horizontal() {

};
Horizontal.value = new Horizontal();
function Vertical() {

};
Vertical.value = new Vertical();
var Location = {
    create: function (value) {
        return value;
    }
};
function LPOuter() {

};
LPOuter.value = new LPOuter();
function LPInner() {

};
LPInner.value = new LPInner();
function LPTop() {

};
LPTop.value = new LPTop();
function LPRight() {

};
LPRight.value = new LPRight();
function LPLeft() {

};
LPLeft.value = new LPLeft();
function LPBottom() {

};
LPBottom.value = new LPBottom();
function LPInside() {

};
LPInside.value = new LPInside();
function LPInsideLeft() {

};
LPInsideLeft.value = new LPInsideLeft();
function LPInsideRight() {

};
LPInsideRight.value = new LPInsideRight();
function LPInsideTop() {

};
LPInsideTop.value = new LPInsideTop();
function LPInsideBottom() {

};
LPInsideBottom.value = new LPInsideBottom();
function HAlignLeft() {

};
HAlignLeft.value = new HAlignLeft();
function HAlignRight() {

};
HAlignRight.value = new HAlignRight();
function HAlignCenter() {

};
HAlignCenter.value = new HAlignCenter();
var yPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ypos) {
    if (ypos instanceof YTop) {
        return Data_Argonaut_Core.fromString("top");
    };
    if (ypos instanceof YBottom) {
        return Data_Argonaut_Core.fromString("bottom");
    };
    if (ypos instanceof YCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (ypos instanceof Y) {
        return Data_Argonaut_Core.fromNumber(ypos.value0);
    };
    throw new Error("Failed pattern match");
});
var xPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_20) {
    if (_20 instanceof XLeft) {
        return Data_Argonaut_Core.fromString("left");
    };
    if (_20 instanceof XRight) {
        return Data_Argonaut_Core.fromString("right");
    };
    if (_20 instanceof XCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (_20 instanceof X) {
        return Data_Argonaut_Core.fromNumber(_20.value0);
    };
    throw new Error("Failed pattern match");
});
var textAlignEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof HAlignLeft) {
            return "left";
        };
        if (a instanceof HAlignRight) {
            return "right";
        };
        if (a instanceof HAlignCenter) {
            return "center";
        };
        throw new Error("Failed pattern match");
    })());
});
var orientEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Horizontal) {
            return "horizontal";
        };
        if (a instanceof Vertical) {
            return "vertical";
        };
        throw new Error("Failed pattern match");
    })());
});
var locationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_21) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(xPosEncodeJson))("x")(_21.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(yPosEncodeJson))("y")(_21.y) ]));
});
var labelPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LPOuter) {
            return "outer";
        };
        if (a instanceof LPInner) {
            return "inner";
        };
        if (a instanceof LPTop) {
            return "top";
        };
        if (a instanceof LPRight) {
            return "right";
        };
        if (a instanceof LPLeft) {
            return "left";
        };
        if (a instanceof LPBottom) {
            return "bottom";
        };
        if (a instanceof LPInside) {
            return "inside";
        };
        if (a instanceof LPInsideLeft) {
            return "insideLeft";
        };
        if (a instanceof LPInsideRight) {
            return "insideRight";
        };
        if (a instanceof LPInsideTop) {
            return "insideTop";
        };
        if (a instanceof LPInsideBottom) {
            return "insideBottom";
        };
        throw new Error("Failed pattern match");
    })());
});
module.exports = {
    HAlignCenter: HAlignCenter, 
    HAlignLeft: HAlignLeft, 
    HAlignRight: HAlignRight, 
    Horizontal: Horizontal, 
    LPBottom: LPBottom, 
    LPInner: LPInner, 
    LPInside: LPInside, 
    LPInsideBottom: LPInsideBottom, 
    LPInsideLeft: LPInsideLeft, 
    LPInsideRight: LPInsideRight, 
    LPInsideTop: LPInsideTop, 
    LPLeft: LPLeft, 
    LPOuter: LPOuter, 
    LPRight: LPRight, 
    LPTop: LPTop, 
    Location: Location, 
    Vertical: Vertical, 
    X: X, 
    XCenter: XCenter, 
    XLeft: XLeft, 
    XRight: XRight, 
    Y: Y, 
    YBottom: YBottom, 
    YCenter: YCenter, 
    YTop: YTop, 
    labelPositionEncodeJson: labelPositionEncodeJson, 
    locationEncodeJson: locationEncodeJson, 
    orientEncodeJson: orientEncodeJson, 
    textAlignEncodeJson: textAlignEncodeJson, 
    xPosEncodeJson: xPosEncodeJson, 
    yPosEncodeJson: yPosEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.StrMap":50,"Prelude":122}],66:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var DataRange = {
    create: function (value) {
        return value;
    }
};
var dataRangeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_16) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_16.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_16.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_16.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_16.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_16.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_16.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_16.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_16.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_16.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_16.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_16.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_16.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_16.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(_16.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_16.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_16.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_16.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverLink")(_16.hoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_16.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_16.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_16.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJString)(Data_Argonaut_Encode.encodeJsonJString)))("text")(_16.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_16.textStyle) ]));
});
var dataRangeDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    precision: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    hoverLink: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
module.exports = {
    DataRange: DataRange, 
    dataRangeDefault: dataRangeDefault, 
    dataRangeEncodeJson: dataRangeEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Formatter":69,"ECharts.Style.Text":94,"Prelude":122}],67:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var Data_Maybe = require("Data.Maybe");
var DataZoom = {
    create: function (value) {
        return value;
    }
};
var dataZoomEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_2.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_2.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_2.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_2.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_2.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("dataBackgroundColor")(_2.dataBackgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_2.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_2.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("xAxisIndex")(_2.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("yAxisIndex")(_2.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("start")(_2.start), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("end")(_2.end), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showDetail")(_2.showDetail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_2.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("zoomlock")(_2.zoomlock) ]));
});
var dataZoomDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    dataBackgroundColor: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    start: Data_Maybe.Nothing.value, 
    end: Data_Maybe.Nothing.value, 
    showDetail: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    zoomlock: Data_Maybe.Nothing.value
};
module.exports = {
    DataZoom: DataZoom, 
    dataZoomDefault: dataZoomDefault, 
    dataZoomEncodeJson: dataZoomEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Coords":65,"Prelude":122}],68:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Sub = {
    create: function (value) {
        return value;
    }
};
function Refresh() {

};
Refresh.value = new Refresh();
function Restore() {

};
Restore.value = new Restore();
function Resize() {

};
Resize.value = new Resize();
function Click() {

};
Click.value = new Click();
function DoubleClick() {

};
DoubleClick.value = new DoubleClick();
function Hover() {

};
Hover.value = new Hover();
function DataChanged() {

};
DataChanged.value = new DataChanged();
function DataZoom() {

};
DataZoom.value = new DataZoom();
function DataRange() {

};
DataRange.value = new DataRange();
function DataRangeHoverLink() {

};
DataRangeHoverLink.value = new DataRangeHoverLink();
function LegendSelected() {

};
LegendSelected.value = new LegendSelected();
function LegendHoverLink() {

};
LegendHoverLink.value = new LegendHoverLink();
function MapSelected() {

};
MapSelected.value = new MapSelected();
function PieSelected() {

};
PieSelected.value = new PieSelected();
function DataViewChanged() {

};
DataViewChanged.value = new DataViewChanged();
function MapRoam() {

};
MapRoam.value = new MapRoam();
function MagicTypeChanged() {

};
MagicTypeChanged.value = new MagicTypeChanged();

function listenImpl(event, effHandler, chart) {
  return function() {
    var handler = function(param) {
      effHandler(param)();
    };
    chart.on(event, handler);
    return function() {
      chart.un(event, handler);
    }
  };
}
;
var eventTypeShow = new Prelude.Show(function (et) {
    if (et instanceof Refresh) {
        return "refresh";
    };
    if (et instanceof Restore) {
        return "restore";
    };
    if (et instanceof Resize) {
        return "resize";
    };
    if (et instanceof Click) {
        return "click";
    };
    if (et instanceof DoubleClick) {
        return "dblclick";
    };
    if (et instanceof Hover) {
        return "hover";
    };
    if (et instanceof DataChanged) {
        return "dataChanged";
    };
    if (et instanceof DataZoom) {
        return "dataZoom";
    };
    if (et instanceof DataRange) {
        return "dataRange";
    };
    if (et instanceof DataRangeHoverLink) {
        return "dataRangeHoverLink";
    };
    if (et instanceof LegendSelected) {
        return "legendSelected";
    };
    if (et instanceof LegendHoverLink) {
        return "legendHoverLink";
    };
    if (et instanceof MapSelected) {
        return "mapSelected";
    };
    if (et instanceof PieSelected) {
        return "pieSelected";
    };
    if (et instanceof DataViewChanged) {
        return "dataViewChanged";
    };
    if (et instanceof MapRoam) {
        return "mapRoam";
    };
    if (et instanceof MagicTypeChanged) {
        return "magicTypeChanged";
    };
    throw new Error("Failed pattern match");
});
var listen = function (eventName) {
    return function (handler) {
        return function (chart) {
            return listenImpl(Prelude.show(eventTypeShow)(eventName), handler, chart);
        };
    };
};
module.exports = {
    Click: Click, 
    DataChanged: DataChanged, 
    DataRange: DataRange, 
    DataRangeHoverLink: DataRangeHoverLink, 
    DataViewChanged: DataViewChanged, 
    DataZoom: DataZoom, 
    DoubleClick: DoubleClick, 
    Hover: Hover, 
    LegendHoverLink: LegendHoverLink, 
    LegendSelected: LegendSelected, 
    MagicTypeChanged: MagicTypeChanged, 
    MapRoam: MapRoam, 
    MapSelected: MapSelected, 
    PieSelected: PieSelected, 
    Refresh: Refresh, 
    Resize: Resize, 
    Restore: Restore, 
    eventTypeShow: eventTypeShow, 
    listen: listen
};

},{"Data.Function":35,"Prelude":122}],69:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Prelude = require("Prelude");
function Template(value0) {
    this.value0 = value0;
};
Template.create = function (value0) {
    return new Template(value0);
};
function FormatFunc(value0) {
    this.value0 = value0;
};
FormatFunc.create = function (value0) {
    return new FormatFunc(value0);
};

function effArrToFn(arr) {
  return function(x) {
    arr(x)();
  };
}
;
var formatterEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    if (_15 instanceof Template) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_15.value0);
    };
    if (_15 instanceof FormatFunc) {
        return ECharts_Utils.func2json(effArrToFn(_15.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    FormatFunc: FormatFunc, 
    Template: Template, 
    formatterEncodeJson: formatterEncodeJson
};

},{"Data.Argonaut.Encode":19,"ECharts.Utils":101,"Prelude":122}],70:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Common = require("ECharts.Common");
var Data_Maybe = require("Data.Maybe");
var Grid = {
    create: function (value) {
        return value;
    }
};
var gridEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_2.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_2.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_2.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_2.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_2.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_2.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderColor")(_2.borderColor) ]));
});
var gridDefault = {
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
module.exports = {
    Grid: Grid, 
    gridDefault: gridDefault, 
    gridEncodeJson: gridEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"Prelude":122}],71:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
function PNG() {

};
PNG.value = new PNG();
function JPEG() {

};
JPEG.value = new JPEG();

function getDataURLImpl(imgType, chart) {
  return function() {
    return chart.getDataURL(imgType);
  };
}
;

function getImageImpl(imgType, chart) {
  return function( ){
    return chart.getImage(imgType);
  };
}
;
var imgTypeShow = new Prelude.Show(function (_66) {
    if (_66 instanceof PNG) {
        return "png";
    };
    if (_66 instanceof JPEG) {
        return "jpeg";
    };
    throw new Error("Failed pattern match");
});
var getImage = function (img) {
    return function (chart) {
        return getImageImpl(Prelude.show(imgTypeShow)(img), chart);
    };
};
var getDataURL = function (img) {
    return function (chart) {
        return getDataURLImpl(Prelude.show(imgTypeShow)(img), chart);
    };
};
var encodeImg = new Data_Argonaut_Encode.EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString))(Prelude.show(imgTypeShow)));
module.exports = {
    JPEG: JPEG, 
    PNG: PNG, 
    encodeImg: encodeImg, 
    getDataURL: getDataURL, 
    getImage: getImage, 
    imgTypeShow: imgTypeShow
};

},{"Data.Argonaut.Encode":19,"Data.Function":35,"Prelude":122}],72:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Maybe = require("Data.Maybe");
function Value(value0) {
    this.value0 = value0;
};
Value.create = function (value0) {
    return new Value(value0);
};
function Dat(value0) {
    this.value0 = value0;
};
Dat.create = function (value0) {
    return new Dat(value0);
};
var itemDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_19) {
    if (_19 instanceof Value) {
        return Data_Argonaut_Encode.encodeJson(ECharts_Item_Value.itemValueEncodeJson)(_19.value0);
    };
    if (_19 instanceof Dat) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](ECharts_Item_Value.itemValueEncodeJson)("value")(_19.value0.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_19.value0.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_19.value0.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_19.value0.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("selected")(_19.value0.selected) ]));
    };
    throw new Error("Failed pattern match");
});
var dataDefault = function (value) {
    return {
        value: value, 
        name: Data_Maybe.Nothing.value, 
        tooltip: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        selected: Data_Maybe.Nothing.value
    };
};
module.exports = {
    Dat: Dat, 
    Value: Value, 
    dataDefault: dataDefault, 
    itemDataEncodeJson: itemDataEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Item.Value":73,"ECharts.Style.Item":90,"ECharts.Tooltip":99,"Prelude":122}],73:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
function None() {

};
None.value = new None();
function Simple(value0) {
    this.value0 = value0;
};
Simple.create = function (value0) {
    return new Simple(value0);
};
function XYR(value0) {
    this.value0 = value0;
};
XYR.create = function (value0) {
    return new XYR(value0);
};
function HLOC(value0) {
    this.value0 = value0;
};
HLOC.create = function (value0) {
    return new HLOC(value0);
};
var itemValueEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (val) {
    if (val instanceof None) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("-");
    };
    if (val instanceof Simple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0);
    };
    if (val instanceof XYR) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ val.value0.x, val.value0.y, val.value0.r ]);
    };
    if (val instanceof HLOC) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ val.value0.o, val.value0.c, val.value0.l, val.value0.h ]);
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    HLOC: HLOC, 
    None: None, 
    Simple: Simple, 
    XYR: XYR, 
    itemValueEncodeJson: itemValueEncodeJson
};

},{"Data.Argonaut.Encode":19,"Prelude":122}],74:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
function LegendString(value0) {
    this.value0 = value0;
};
LegendString.create = function (value0) {
    return new LegendString(value0);
};
function LegendItem(value0) {
    this.value0 = value0;
};
LegendItem.create = function (value0) {
    return new LegendItem(value0);
};
var Legend = {
    create: function (value) {
        return value;
    }
};
var legendItemEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_17) {
    if (_17 instanceof LegendString) {
        return Data_Argonaut_Core.fromString(_17.value0);
    };
    if (_17 instanceof LegendItem) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_17.value0.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("icon")(_17.value0.icon), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_17.value0.textStyle) ]));
    };
    throw new Error("Failed pattern match");
});
var legendItemDefault = {
    name: Data_Maybe.Nothing.value, 
    icon: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var legendEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_18) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_18.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_18.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_18.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_18.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_18.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_18.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_18.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_18.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_18.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_18.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_18.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_18.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_18.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_18.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean)))("selected")(_18.selected), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(legendItemEncodeJson)))("data")(_18.data) ]));
});
var legendDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    selected: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
module.exports = {
    Legend: Legend, 
    LegendItem: LegendItem, 
    LegendString: LegendString, 
    legendDefault: legendDefault, 
    legendEncodeJson: legendEncodeJson, 
    legendItemDefault: legendItemDefault, 
    legendItemEncodeJson: legendItemEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Formatter":69,"ECharts.Style.Text":94,"Prelude":122}],75:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Style_Text = require("ECharts.Style.Text");
function Spin() {

};
Spin.value = new Spin();
function Bar() {

};
Bar.value = new Bar();
function Ring() {

};
Ring.value = new Ring();
function Whirling() {

};
Whirling.value = new Whirling();
function DynamicLine() {

};
DynamicLine.value = new DynamicLine();
function Bubble() {

};
Bubble.value = new Bubble();
var LoadingOption = {
    create: function (value) {
        return value;
    }
};

function showLoadingImpl(json, chart) {
  return function() {
    return chart.showLoading(json);
  };
}
;

function hideLoading(chart) {
  return function() {
    return chart.hideLoading();
  };
}
;
var loadingOptionDefault = {
    text: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    effectOption: Data_Maybe.Nothing.value, 
    progress: Data_Maybe.Nothing.value
};
var loadingEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Spin) {
            return "spin";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Ring) {
            return "ring";
        };
        if (a instanceof Whirling) {
            return "whirling";
        };
        if (a instanceof DynamicLine) {
            return "dynamicLine";
        };
        if (a instanceof Bubble) {
            return "bubble";
        };
        throw new Error("Failed pattern match");
    })());
});
var showLoadingOptions = new Data_Argonaut_Encode.EncodeJson(function (_24) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_24.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_24.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_24.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_24.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(loadingEffectEncodeJson))("effect")(_24.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("effectOption")(_24.effectOption), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("progress")(_24.progress) ]));
});
var showLoading = function (opts) {
    return function (chart) {
        return showLoadingImpl(Data_Argonaut_Encode.encodeJson(showLoadingOptions)(opts), chart);
    };
};
module.exports = {
    Bar: Bar, 
    Bubble: Bubble, 
    DynamicLine: DynamicLine, 
    LoadingOption: LoadingOption, 
    Ring: Ring, 
    Spin: Spin, 
    Whirling: Whirling, 
    hideLoading: hideLoading, 
    loadingEffectEncodeJson: loadingEffectEncodeJson, 
    loadingOptionDefault: loadingOptionDefault, 
    showLoading: showLoading, 
    showLoadingOptions: showLoadingOptions
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Coords":65,"ECharts.Style.Text":94,"Prelude":122}],76:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var MarkPointData = {
    create: function (value) {
        return value;
    }
};
var mpDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_2.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("value")(_2.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxis")(_2.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxis")(_2.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("type")(_2.type) ]));
});
var markPointDataDefault = {
    name: Data_Maybe.Nothing.value, 
    value: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointData: MarkPointData, 
    markPointDataDefault: markPointDataDefault, 
    mpDataEncodeJson: mpDataEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],77:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var MarkPointEffect = {
    create: function (value) {
        return value;
    }
};
var mpEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_2.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_2.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("period")(_2.period), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scaleSize")(_2.scaleSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_2.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowBlur")(_2.shadowBlur) ]));
});
var markPointEffectDefault = {
    show: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    period: Data_Maybe.Nothing.value, 
    scaleSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    shadowBlur: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointEffect: MarkPointEffect, 
    markPointEffectDefault: markPointEffectDefault, 
    mpEffectEncodeJson: mpEffectEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],78:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Maybe = require("Data.Maybe");
var MarkLine = {
    create: function (value) {
        return value;
    }
};

function addMarkLineImpl(ml, chart) {
  return function() {
    return chart.addMarkLine(ml);
  };
}
;

function delMarkLineImpl(idx, name, chart) {
  return function() {
    return chart.delMarkLine(idx, name);
  };
}
;
var mlEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_33) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Symbol.encodeJsonSymbol)(ECharts_Symbol.encodeJsonSymbol)))("symbol")(_33.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.dblSymbolSizeEncodeJson))("symbolSize")(_33.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("symbolRotate")(_33.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_33.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))))("geoCoord")(_33.geoCoord), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Mark_Data.mpDataEncodeJson)(ECharts_Mark_Data.mpDataEncodeJson))))("data")(_33.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_33.itemStyle) ]));
});
var markLineDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var delMarkLine = function (idx) {
    return function (name) {
        return function (chart) {
            return delMarkLineImpl(idx, name, chart);
        };
    };
};
var addMarkLine = function (ml) {
    return function (chart) {
        return addMarkLineImpl(Data_Argonaut_Encode.encodeJson(mlEncodeJson)(ml), chart);
    };
};
module.exports = {
    MarkLine: MarkLine, 
    addMarkLine: addMarkLine, 
    delMarkLine: delMarkLine, 
    markLineDefault: markLineDefault, 
    mlEncodeJson: mlEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Mark.Data":76,"ECharts.Mark.Effect":77,"ECharts.Style.Item":90,"ECharts.Symbol":95,"Prelude":122}],79:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var Data_Maybe = require("Data.Maybe");
var MarkPoint = {
    create: function (value) {
        return value;
    }
};

function delMarkPointImpl(idx, name, chart) {
  return function() {
    return chart.delMarkPoint(idx, name);
  };
}
;

function addMarkPointImpl(mp, chart) {
  return function() {
    return chart.addMarkPoint(mp);
  };
}
;
var markPointEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_34) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_34.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_34.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(_34.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_34.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Mark_Data.mpDataEncodeJson)))("data")(_34.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))))("geoCoord")(_34.geoCoord) ]));
});
var markPointDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value
};
var delMarkPoint = function (idx) {
    return function (name) {
        return function (chart) {
            return delMarkPointImpl(idx, name, chart);
        };
    };
};
var addMarkPoint = function (mp) {
    return function (chart) {
        return addMarkPointImpl(Data_Argonaut_Encode.encodeJson(markPointEncodeJson)(mp), chart);
    };
};
module.exports = {
    MarkPoint: MarkPoint, 
    addMarkPoint: addMarkPoint, 
    delMarkPoint: delMarkPoint, 
    markPointDefault: markPointDefault, 
    markPointEncodeJson: markPointEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Mark.Data":76,"ECharts.Mark.Effect":77,"ECharts.Symbol":95,"Prelude":122}],80:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
function Merge(value0) {
    this.value0 = value0;
};
Merge.create = function (value0) {
    return new Merge(value0);
};

function mkUntypedContainer() {
  return [];
}
;

function pushToUntypedImpl(element, container) {
  return function() {
    container.push(element);
    return container;
  };
}
;

function fromTupleImpl(nothing, mergeFunc, createFunc, tuple) {
  var result = [];
  var untuplify = function(tuple) {
    
    var val0 = tuple.value0,
        val1 = tuple.value1;
    if (!val0 || !val0.constructor || val0.constructor != nothing.constructor) {
      result.push(val0);
    }
    if (!val1.constructor) {
      result.push(val1);
      return;
    }
    if(val1.constructor == nothing.constructor) {
      return;
    }
    if (val1.constructor.create == createFunc) {
      untuplify(val1);
      return;
    }
    if (val1.constructor.create == mergeFunc) {
      var val2 = val1.value0;
      for (var i = 0; i < val2.length; i++) {
        result.push(val2[i]);
      }
      return;
    }
    result.push(val1);
  };
  untuplify(tuple);
  return result;
}
;

function setOptionImpl(option, tupleCreate, fromTuple, merge, echart) {
  return function() {
    var clone = function(obj) {
          if(obj == null || typeof(obj) != 'object')
            return obj;

          var temp = new obj.constructor(); 

          for(var key in obj) {
            if(obj.hasOwnProperty(key)) {
              temp[key] = clone(obj[key]);
            }
          }
          return temp;
        },
        isTuple = function(a) {
          return a && a.constructor && a.constructor.create == tupleCreate;
        },
    

        untuple = function(obj) {
          if (!obj || typeof(obj) != 'object') {
            return obj;
          }

          if (isTuple(obj)) {
            return untuple(fromTuple(obj));
          } 
          for (var key in obj) {
            if(!obj.hasOwnProperty(key)) continue;
            obj[key] = untuple(obj[key]);
          }
          return obj;
        };
    echart.setOption(untuple(clone(option)), merge);
    return echart;
  };
}
;
var pushToUntyped = function (a) {
    return function (container) {
        return pushToUntypedImpl(a, container);
    };
};
var fromTuple = function (tuple) {
    return fromTupleImpl(Data_Maybe.Nothing.value, Merge.create, Data_Tuple.Tuple.create, tuple);
};
var setOptionUnsafe = function (opts) {
    return function (merge) {
        return function (chart) {
            return setOptionImpl(opts, Data_Tuple.Tuple.create, fromTuple, merge, chart);
        };
    };
};
module.exports = {
    Merge: Merge, 
    setOptionUnsafe: setOptionUnsafe
};

},{"Data.Function":35,"Data.Maybe":39,"Data.Tuple":56,"Prelude":122}],81:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Series = require("ECharts.Series");
var ECharts_Timeline = require("ECharts.Timeline");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_DataRange = require("ECharts.DataRange");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_RoamController = require("ECharts.RoamController");
var ECharts_Grid = require("ECharts.Grid");
var ECharts_Axis = require("ECharts.Axis");
var Data_Maybe = require("Data.Maybe");
var Option = {
    create: function (value) {
        return value;
    }
};

function setOptionImpl(option, notMerge, chart) {
  return function() {
    return chart.setOption(option, notMerge);
  };
}
;
var optionsEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_3) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_3.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_3.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("renderAsImage")(_3.renderAsImage), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_3.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("animation")(_3.animation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series.seriesEncodeJson)))("series")(_3.series), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Timeline.timelineEncodeJson))("timeline")(_3.timeline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_3.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Toolbox.toolboxEncodeJson))("toolbox")(_3.toolbox), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(_3.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Legend.legendEncodeJson))("legend")(_3.legend), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataRange.dataRangeEncodeJson))("dataRange")(_3.dataRange), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataZoom.dataZoomEncodeJson))("dataZoom")(_3.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_RoamController.roamControllerEncodeJson))("roamController")(_3.roamController), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Grid.gridEncodeJson))("grid")(_3.grid), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("xAxis")(_3.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("yAxis")(_3.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Axis.polarEncodeJson)))("polar")(_3.polar) ]));
});
var setOption = function (opts) {
    return function (notMerge) {
        return function (chart) {
            return setOptionImpl(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(optionsEncodeJson))(opts), notMerge, chart);
        };
    };
};
var optionDefault = {
    backgroundColor: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    renderAsImage: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    animation: Data_Maybe.Nothing.value, 
    series: Data_Maybe.Nothing.value, 
    timeline: Data_Maybe.Nothing.value, 
    tooltip: Data_Maybe.Nothing.value, 
    toolbox: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    legend: Data_Maybe.Nothing.value, 
    dataRange: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    roamController: Data_Maybe.Nothing.value, 
    grid: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    polar: Data_Maybe.Nothing.value
};
module.exports = {
    Option: Option, 
    optionDefault: optionDefault, 
    optionsEncodeJson: optionsEncodeJson, 
    setOption: setOption
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Axis":60,"ECharts.DataRange":66,"ECharts.DataZoom":67,"ECharts.Grid":70,"ECharts.Legend":74,"ECharts.RoamController":82,"ECharts.Series":86,"ECharts.Timeline":96,"ECharts.Title":97,"ECharts.Toolbox":98,"ECharts.Tooltip":99,"ECharts.Utils":101,"Prelude":122}],82:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var Data_Maybe = require("Data.Maybe");
var RoamController = {
    create: function (value) {
        return value;
    }
};
var roamControllerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_2.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_2.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_2.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_2.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_2.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_2.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_2.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_2.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_2.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("step")(_2.step), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean))("mapTypeControl")(_2.mapTypeControl) ]));
});
var roamControllerDefault = {
    show: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    step: Data_Maybe.Nothing.value, 
    mapTypeControl: Data_Maybe.Nothing.value
};
module.exports = {
    RoamController: RoamController, 
    roamControllerDefault: roamControllerDefault, 
    roamControllerEncodeJson: roamControllerEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Coords":65,"Prelude":122}],83:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Extension_Date = require("Data.Argonaut.Extension.Date");
var EvolutionDetail = {
    create: function (value) {
        return value;
    }
};
var Evolution = {
    create: function (value) {
        return value;
    }
};
var OneEvent = {
    create: function (value) {
        return value;
    }
};
var oneEventDefault = {
    name: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value, 
    evolution: Data_Maybe.Nothing.value
};
var evolutionDetailDefault = {
    link: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    img: Data_Maybe.Nothing.value
};
var evoDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_5) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_5.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_5.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("img")(_5.img) ]));
});
var evoEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_6) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Extension_Date.dateEncodeJson)("time")(_6.time), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_6.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(evoDetailEncodeJson))("detail")(_6.detail) ]));
});
var oneEventEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_7) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_7.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(_7.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(evoEncodeJson)))("evolution")(_7.evolution) ]));
});
module.exports = {
    Evolution: Evolution, 
    EvolutionDetail: EvolutionDetail, 
    OneEvent: OneEvent, 
    evoDetailEncodeJson: evoDetailEncodeJson, 
    evoEncodeJson: evoEncodeJson, 
    evolutionDetailDefault: evolutionDetailDefault, 
    oneEventDefault: oneEventDefault, 
    oneEventEncodeJson: oneEventEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Argonaut.Extension.Date":20,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],84:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Symbol = require("ECharts.Symbol");
function Name(value0) {
    this.value0 = value0;
};
Name.create = function (value0) {
    return new Name(value0);
};
function Index(value0) {
    this.value0 = value0;
};
Index.create = function (value0) {
    return new Index(value0);
};
var Link = {
    create: function (value) {
        return value;
    }
};
var ForceCategory = {
    create: function (value) {
        return value;
    }
};
var Node = {
    create: function (value) {
        return value;
    }
};
var nodeDefault = function (value) {
    return {
        name: Data_Maybe.Nothing.value, 
        label: Data_Maybe.Nothing.value, 
        value: value, 
        ignore: Data_Maybe.Nothing.value, 
        symbol: Data_Maybe.Nothing.value, 
        symbolSize: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        initial: Data_Maybe.Nothing.value, 
        fixX: Data_Maybe.Nothing.value, 
        fixY: Data_Maybe.Nothing.value, 
        draggable: Data_Maybe.Nothing.value, 
        category: Data_Maybe.Nothing.value
    };
};
var linkEndEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_4) {
    if (_4 instanceof Name) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_4.value0);
    };
    if (_4 instanceof Index) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_4.value0);
    };
    throw new Error("Failed pattern match");
});
var linkEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_5) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](linkEndEncodeJson)("source")(_5.source), Data_Argonaut_Combinators[":="](linkEndEncodeJson)("target")(_5.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("weight")(_5.weight), Data_Argonaut_Combinators[":="](ECharts_Style_Item.itemStyleEncodeJson)("itemStyle")(_5.itemStyle) ]));
});
var forceCategoryEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_2.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_2.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_2.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_2.itemStyle) ]));
});
var nodeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_3) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_3.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("label")(_3.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_3.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ignore")(_3.ignore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_3.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_3.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_3.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("initial")(_3.initial), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixX")(_3.fixX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixY")(_3.fixY), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("draggable")(_3.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(forceCategoryEncodeJson))("category")(_3.category) ]));
});
var forceCategoryDefault = {
    name: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value
};
module.exports = {
    ForceCategory: ForceCategory, 
    Index: Index, 
    Link: Link, 
    Name: Name, 
    Node: Node, 
    forceCategoryDefault: forceCategoryDefault, 
    forceCategoryEncodeJson: forceCategoryEncodeJson, 
    linkEncodeJson: linkEncodeJson, 
    linkEndEncodeJson: linkEndEncodeJson, 
    nodeDefault: nodeDefault, 
    nodeEncodeJson: nodeEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Style.Item":90,"ECharts.Symbol":95,"Prelude":122}],85:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var Data_Maybe = require("Data.Maybe");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var SplitLine = {
    create: function (value) {
        return value;
    }
};
var Pointer = {
    create: function (value) {
        return value;
    }
};
var GaugeDetail = {
    create: function (value) {
        return value;
    }
};
var splitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_3) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_3.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_3.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_3.lineStyle) ]));
});
var splitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var pointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_2.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_2.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_2.color) ]));
});
var pointerDefault = {
    length: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value
};
var gaugeDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_4) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_4.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_4.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_4.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_4.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_4.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_4.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("offsetCenter")(_4.offsetCenter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_4.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_4.textStyle) ]));
});
var gaugeDetailDefault = {
    show: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    offsetCenter: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
module.exports = {
    GaugeDetail: GaugeDetail, 
    Pointer: Pointer, 
    SplitLine: SplitLine, 
    gaugeDetailDefault: gaugeDetailDefault, 
    gaugeDetailEncodeJson: gaugeDetailEncodeJson, 
    pointerDefault: pointerDefault, 
    pointerEncodeJson: pointerEncodeJson, 
    splitLineDefault: splitLineDefault, 
    splitLineEncodeJson: splitLineEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Formatter":69,"ECharts.Style.Line":91,"ECharts.Style.Text":94,"Prelude":122}],86:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Type = require("ECharts.Type");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Common = require("ECharts.Common");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Title = require("ECharts.Title");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Series = {
    create: function (value) {
        return value;
    }
};

function setSeriesImpl(series, notMerge, chart) {
  return function() {
    return chart.setSeries(series, notMerge);
  };
}
;
var seriesEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](ECharts_Type.chartTypeEncodeJson)("type")(_2.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_2.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_2.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(_2.clickable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_2.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Mark_Point.markPointEncodeJson)))("markPoint")(_2.markPoint), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Mark_Line.mlEncodeJson)))("markLine")(_2.markLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(_2.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("stack")(_2.stack), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(_2.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(_2.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barGap")(_2.barGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barCategoryGap")(_2.barCategoryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinWidth")(_2.barMinWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinHeight")(_2.barMinHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barWidth")(_2.barWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barHeight")(_2.barHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_2.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_2.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(_2.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showAllSymbol")(_2.showAllSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("smooth")(_2.smooth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(_2.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("largeThreshold")(_2.largeThreshold), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(_2.legendHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("center")(_2.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.radiusEncodeJson))("radius")(_2.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(_2.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minAngle")(_2.minAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roseTypeEncodeJson))("roseType")(_2.roseType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("selectedOffset")(_2.selectedOffset), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_2.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("polarIndex")(_2.polarIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mapType")(_2.mapType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverable")(_2.hoverable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("dataRangeHoverLink")(_2.dataRangeHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.locationEncodeJson))("mapLocation")(_2.mapLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.mapValueCalculationEncodeJson))("mapValueCalculation")(_2.mapValueCalculation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("mapValuePrecision")(_2.mapValuePrecision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showLegendSymbol")(_2.showLegendSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roamEncodeJson))("roam")(_2.roam), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.minMaxEncodeJson))("scaleLimit")(_2.scaleLimit), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("nameMap")(_2.nameMap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("textFixed")(_2.textFixed), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("geoCoord")(_2.geoCoord), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.forceCategoryEncodeJson)))("categories")(_2.categories), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.nodeEncodeJson)))("nodes")(_2.nodes), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.linkEncodeJson)))("links")(_2.links), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))))("matrix")(_2.matrix), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("size")(_2.size), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minRadius")(_2.minRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("maxRadius")(_2.maxRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbol")(_2.linkSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbolSize")(_2.linkSymbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("scaling")(_2.scaling), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gravity")(_2.gravity), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("draggable")(_2.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("useWorker")(_2.useWorker), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("steps")(_2.steps), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ribbonType")(_2.ribbonType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScale")(_2.showScale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScaleText")(_2.showScaleText), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("padding")(_2.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sort")(_2.sort), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sortSub")(_2.sortSub), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clockWise")(_2.clockWise), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("endAngle")(_2.endAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_2.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_2.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(_2.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_2.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLineEncodeJson))("axisLine")(_2.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisTickEncodeJson))("axisTick")(_2.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("axisLabel")(_2.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.splitLineEncodeJson))("splitLine")(_2.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(_2.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.gaugeDetailEncodeJson))("detail")(_2.detail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_2.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_2.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_2.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_2.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("funnelAlign")(_2.funnelAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("minSize")(_2.minSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("maxSize")(_2.maxSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gap")(_2.gap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(_2.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_EventRiver.oneEventEncodeJson)))("eventList")(_2.eventList) ]));
});
var setSeries = function (series) {
    return function (merge) {
        return function (chart) {
            return setSeriesImpl(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(seriesEncodeJson)))(series), merge, chart);
        };
    };
};
var seriesDefault = function (chartType) {
    return {
        type: chartType, 
        name: Data_Maybe.Nothing.value, 
        tooltip: Data_Maybe.Nothing.value, 
        clickable: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        markPoint: Data_Maybe.Nothing.value, 
        markLine: Data_Maybe.Nothing.value, 
        data: Data_Maybe.Nothing.value, 
        stack: Data_Maybe.Nothing.value, 
        xAxisIndex: Data_Maybe.Nothing.value, 
        yAxisIndex: Data_Maybe.Nothing.value, 
        barGap: Data_Maybe.Nothing.value, 
        barCategoryGap: Data_Maybe.Nothing.value, 
        barMinWidth: Data_Maybe.Nothing.value, 
        barMinHeight: Data_Maybe.Nothing.value, 
        barWidth: Data_Maybe.Nothing.value, 
        barHeight: Data_Maybe.Nothing.value, 
        symbol: Data_Maybe.Nothing.value, 
        symbolSize: Data_Maybe.Nothing.value, 
        symbolRotate: Data_Maybe.Nothing.value, 
        showAllSymbol: Data_Maybe.Nothing.value, 
        smooth: Data_Maybe.Nothing.value, 
        large: Data_Maybe.Nothing.value, 
        largeThreshold: Data_Maybe.Nothing.value, 
        legendHoverLink: Data_Maybe.Nothing.value, 
        center: Data_Maybe.Nothing.value, 
        radius: Data_Maybe.Nothing.value, 
        startAngle: Data_Maybe.Nothing.value, 
        minAngle: Data_Maybe.Nothing.value, 
        roseType: Data_Maybe.Nothing.value, 
        selectedOffset: Data_Maybe.Nothing.value, 
        selectedMode: Data_Maybe.Nothing.value, 
        polarIndex: Data_Maybe.Nothing.value, 
        mapType: Data_Maybe.Nothing.value, 
        hoverable: Data_Maybe.Nothing.value, 
        dataRangeHoverLink: Data_Maybe.Nothing.value, 
        mapLocation: Data_Maybe.Nothing.value, 
        mapValueCalculation: Data_Maybe.Nothing.value, 
        mapValuePrecision: Data_Maybe.Nothing.value, 
        showLegendSymbol: Data_Maybe.Nothing.value, 
        roam: Data_Maybe.Nothing.value, 
        scaleLimit: Data_Maybe.Nothing.value, 
        nameMap: Data_Maybe.Nothing.value, 
        textFixed: Data_Maybe.Nothing.value, 
        geoCoord: Data_Maybe.Nothing.value, 
        categories: Data_Maybe.Nothing.value, 
        nodes: Data_Maybe.Nothing.value, 
        links: Data_Maybe.Nothing.value, 
        matrix: Data_Maybe.Nothing.value, 
        size: Data_Maybe.Nothing.value, 
        minRadius: Data_Maybe.Nothing.value, 
        maxRadius: Data_Maybe.Nothing.value, 
        linkSymbol: Data_Maybe.Nothing.value, 
        linkSymbolSize: Data_Maybe.Nothing.value, 
        scaling: Data_Maybe.Nothing.value, 
        gravity: Data_Maybe.Nothing.value, 
        draggable: Data_Maybe.Nothing.value, 
        useWorker: Data_Maybe.Nothing.value, 
        steps: Data_Maybe.Nothing.value, 
        ribbonType: Data_Maybe.Nothing.value, 
        showScale: Data_Maybe.Nothing.value, 
        showScaleText: Data_Maybe.Nothing.value, 
        padding: Data_Maybe.Nothing.value, 
        sort: Data_Maybe.Nothing.value, 
        sortSub: Data_Maybe.Nothing.value, 
        clockWise: Data_Maybe.Nothing.value, 
        endAngle: Data_Maybe.Nothing.value, 
        min: Data_Maybe.Nothing.value, 
        max: Data_Maybe.Nothing.value, 
        precision: Data_Maybe.Nothing.value, 
        splitNumber: Data_Maybe.Nothing.value, 
        axisLine: Data_Maybe.Nothing.value, 
        axisTick: Data_Maybe.Nothing.value, 
        axisLabel: Data_Maybe.Nothing.value, 
        splitLine: Data_Maybe.Nothing.value, 
        title: Data_Maybe.Nothing.value, 
        detail: Data_Maybe.Nothing.value, 
        x: Data_Maybe.Nothing.value, 
        x2: Data_Maybe.Nothing.value, 
        y: Data_Maybe.Nothing.value, 
        y2: Data_Maybe.Nothing.value, 
        width: Data_Maybe.Nothing.value, 
        height: Data_Maybe.Nothing.value, 
        funnelAlign: Data_Maybe.Nothing.value, 
        minSize: Data_Maybe.Nothing.value, 
        maxSize: Data_Maybe.Nothing.value, 
        gap: Data_Maybe.Nothing.value, 
        weight: Data_Maybe.Nothing.value, 
        eventList: Data_Maybe.Nothing.value
    };
};
module.exports = {
    Series: Series, 
    seriesDefault: seriesDefault, 
    seriesEncodeJson: seriesEncodeJson, 
    setSeries: setSeries
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Array":27,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Axis":60,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Item.Data":72,"ECharts.Mark.Line":78,"ECharts.Mark.Point":79,"ECharts.Series.EventRiver":83,"ECharts.Series.Force":84,"ECharts.Series.Gauge":85,"ECharts.Style.Item":90,"ECharts.Symbol":95,"ECharts.Title":97,"ECharts.Tooltip":99,"ECharts.Type":100,"ECharts.Utils":101,"Prelude":122}],87:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var AreaStyle = {
    create: function (value) {
        return value;
    }
};
var areaStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("color")(_15), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("fill") ]));
});
module.exports = {
    AreaStyle: AreaStyle, 
    areaStyleEncodeJson: areaStyleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.StrMap":50,"Prelude":122}],88:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Axis = require("ECharts.Axis");
var Data_Maybe = require("Data.Maybe");
var CheckpointStyle = {
    create: function (value) {
        return value;
    }
};
var checkpointStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_38) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_38.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_38.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_38.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_38.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_38.label) ]));
});
var checkpointStyleDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value
};
module.exports = {
    CheckpointStyle: CheckpointStyle, 
    checkpointStyleDefault: checkpointStyleDefault, 
    checkpointStyleEncodeJson: checkpointStyleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Axis":60,"ECharts.Symbol":95,"Prelude":122}],89:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var ChordStyle = {
    create: function (value) {
        return value;
    }
};
var chordStyleJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_15.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_15.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_15.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_15.borderColor) ]));
});
var chordStyleDefault = {
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
module.exports = {
    ChordStyle: ChordStyle, 
    chordStyleDefault: chordStyleDefault, 
    chordStyleJson: chordStyleJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],90:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Color = require("ECharts.Color");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Style_Chord = require("ECharts.Style.Chord");
var ECharts_Style_Node = require("ECharts.Style.Node");
var ECharts_Style_Link = require("ECharts.Style.Link");
var ItemLabelLine = {
    create: function (value) {
        return value;
    }
};
var ItemLabel = {
    create: function (value) {
        return value;
    }
};
var IStyle = {
    create: function (value) {
        return value;
    }
};
var ItemStyle = {
    create: function (value) {
        return value;
    }
};
var itemStyleDefault = {
    normal: Data_Maybe.Nothing.value, 
    emphasis: Data_Maybe.Nothing.value
};
var itemLabelLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_20) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_20.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_20.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_20.lineStyle) ]));
});
var itemLabelLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var itemLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_19) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_19.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.labelPositionEncodeJson))("position")(_19.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("distance")(_19.distance), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_19.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_19.textStyle) ]));
});
var itemLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    distance: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var istyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_21) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Color.calculableColorEncodeJson))("color")(_21.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_21.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_21.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("barBorderColor")(_21.barBorderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barBorderWidth")(_21.barBorderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("barBorderRadius")(_21.barBorderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelEncodeJson))("label")(_21.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelLineEncodeJson))("labelLine")(_21.labelLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_21.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_21.areaStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Chord.chordStyleJson))("chordStyle")(_21.chordStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Node.nodeStyleEncodeJson))("nodeStyle")(_21.nodeStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Link.linkStyleEncodeJson))("linkStyle")(_21.linkStyle) ]));
});
var itemStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_22) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("normal")(_22.normal), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("emphasis")(_22.emphasis) ]));
});
var istyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    barBorderColor: Data_Maybe.Nothing.value, 
    barBorderRadius: Data_Maybe.Nothing.value, 
    barBorderWidth: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    labelLine: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value, 
    chordStyle: Data_Maybe.Nothing.value, 
    nodeStyle: Data_Maybe.Nothing.value, 
    linkStyle: Data_Maybe.Nothing.value
};
module.exports = {
    IStyle: IStyle, 
    ItemLabel: ItemLabel, 
    ItemLabelLine: ItemLabelLine, 
    ItemStyle: ItemStyle, 
    istyleDefault: istyleDefault, 
    istyleEncodeJson: istyleEncodeJson, 
    itemLabelDefault: itemLabelDefault, 
    itemLabelEncodeJson: itemLabelEncodeJson, 
    itemLabelLineDefault: itemLabelLineDefault, 
    itemLabelLineEncodeJson: itemLabelLineEncodeJson, 
    itemStyleDefault: itemStyleDefault, 
    itemStyleEncodeJson: itemStyleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Color":62,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Formatter":69,"ECharts.Style.Area":87,"ECharts.Style.Chord":89,"ECharts.Style.Line":91,"ECharts.Style.Link":92,"ECharts.Style.Node":93,"ECharts.Style.Text":94,"Prelude":122}],91:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
function Solid() {

};
Solid.value = new Solid();
function Dotted() {

};
Dotted.value = new Dotted();
function Dashed() {

};
Dashed.value = new Dashed();
var LineStyle = {
    create: function (value) {
        return value;
    }
};
var linetypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Solid) {
            return "solid";
        };
        if (a instanceof Dotted) {
            return "dotted";
        };
        if (a instanceof Dashed) {
            return "dashed";
        };
        throw new Error("Failed pattern match");
    })());
});
var lineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_15.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linetypeEncodeJson))("type")(_15.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_15.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("shadowColor")(_15.shadowColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetX")(_15.shadowOffsetX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetY")(_15.shadowOffsetY) ]));
});
var lineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    shadowColor: Data_Maybe.Nothing.value, 
    shadowOffsetX: Data_Maybe.Nothing.value, 
    shadowOffsetY: Data_Maybe.Nothing.value
};
module.exports = {
    Dashed: Dashed, 
    Dotted: Dotted, 
    LineStyle: LineStyle, 
    Solid: Solid, 
    lineStyleDefault: lineStyleDefault, 
    lineStyleEncodeJson: lineStyleEncodeJson, 
    linetypeEncodeJson: linetypeEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],92:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
function LTCurve() {

};
LTCurve.value = new LTCurve();
function LTLine() {

};
LTLine.value = new LTLine();
var LinkStyle = {
    create: function (value) {
        return value;
    }
};
var linkTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof LTCurve) {
            return "curve";
        };
        if (a instanceof LTLine) {
            return "line";
        };
        throw new Error("Failed pattern match");
    })());
});
var linkStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTypeEncodeJson))("type")(_15.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_15.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_15.width) ]));
});
var linkStyleDefault = {
    type: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
module.exports = {
    LTCurve: LTCurve, 
    LTLine: LTLine, 
    LinkStyle: LinkStyle, 
    linkStyleDefault: linkStyleDefault, 
    linkStyleEncodeJson: linkStyleEncodeJson, 
    linkTypeEncodeJson: linkTypeEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],93:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var NodeStyle = {
    create: function (value) {
        return value;
    }
};
var nodeStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_15.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_15.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_15.borderWidth) ]));
});
var nodeStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value
};
module.exports = {
    NodeStyle: NodeStyle, 
    nodeStyleDefault: nodeStyleDefault, 
    nodeStyleEncodeJson: nodeStyleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"Prelude":122}],94:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
function TBLTop() {

};
TBLTop.value = new TBLTop();
function TBLBottom() {

};
TBLBottom.value = new TBLBottom();
function TBLMiddle() {

};
TBLMiddle.value = new TBLMiddle();
function FWNormal() {

};
FWNormal.value = new FWNormal();
function FWBold() {

};
FWBold.value = new FWBold();
function FWBolder() {

};
FWBolder.value = new FWBolder();
function FWLighter() {

};
FWLighter.value = new FWLighter();
function FW100() {

};
FW100.value = new FW100();
function FW200() {

};
FW200.value = new FW200();
function FW300() {

};
FW300.value = new FW300();
function FW400() {

};
FW400.value = new FW400();
function FW500() {

};
FW500.value = new FW500();
function FW600() {

};
FW600.value = new FW600();
function FW700() {

};
FW700.value = new FW700();
function FW800() {

};
FW800.value = new FW800();
function FW900() {

};
FW900.value = new FW900();
function FSNormal() {

};
FSNormal.value = new FSNormal();
function FSItalic() {

};
FSItalic.value = new FSItalic();
function FSOblique() {

};
FSOblique.value = new FSOblique();
var TextStyle = {
    create: function (value) {
        return value;
    }
};
var textStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    decoration: Data_Maybe.Nothing.value, 
    align: Data_Maybe.Nothing.value, 
    baseline: Data_Maybe.Nothing.value, 
    fontFamily: Data_Maybe.Nothing.value, 
    fontSize: Data_Maybe.Nothing.value, 
    fontStyle: Data_Maybe.Nothing.value, 
    fontWeight: Data_Maybe.Nothing.value
};
var textBaselineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof TBLTop) {
            return "top";
        };
        if (a instanceof TBLBottom) {
            return "bottom";
        };
        if (a instanceof TBLMiddle) {
            return "middle";
        };
        throw new Error("Failed pattern match");
    })());
});
var fontWeightEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FWNormal) {
            return "normal";
        };
        if (a instanceof FWBold) {
            return "bold";
        };
        if (a instanceof FWBolder) {
            return "bolder";
        };
        if (a instanceof FWLighter) {
            return "lighter";
        };
        if (a instanceof FW100) {
            return "100";
        };
        if (a instanceof FW200) {
            return "200";
        };
        if (a instanceof FW300) {
            return "300";
        };
        if (a instanceof FW400) {
            return "400";
        };
        if (a instanceof FW500) {
            return "500";
        };
        if (a instanceof FW600) {
            return "600";
        };
        if (a instanceof FW700) {
            return "700";
        };
        if (a instanceof FW800) {
            return "800";
        };
        if (a instanceof FW900) {
            return "900";
        };
        throw new Error("Failed pattern match");
    })());
});
var fontStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FSNormal) {
            return "normal";
        };
        if (a instanceof FSItalic) {
            return "italic";
        };
        if (a instanceof FSOblique) {
            return "oblique";
        };
        throw new Error("Failed pattern match");
    })());
});
var textStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_20) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_20.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("decoration")(_20.decoration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("align")(_20.align), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(textBaselineEncodeJson))("baseline")(_20.baseline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fontFamily")(_20.fontFamily), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("fontSize")(_20.fontSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontStyleEncodeJson))("fontStyle")(_20.fontStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontWeightEncodeJson))("fontWeight")(_20.fontWeight) ]));
});
module.exports = {
    FSItalic: FSItalic, 
    FSNormal: FSNormal, 
    FSOblique: FSOblique, 
    FW100: FW100, 
    FW200: FW200, 
    FW300: FW300, 
    FW400: FW400, 
    FW500: FW500, 
    FW600: FW600, 
    FW700: FW700, 
    FW800: FW800, 
    FW900: FW900, 
    FWBold: FWBold, 
    FWBolder: FWBolder, 
    FWLighter: FWLighter, 
    FWNormal: FWNormal, 
    TBLBottom: TBLBottom, 
    TBLMiddle: TBLMiddle, 
    TBLTop: TBLTop, 
    TextStyle: TextStyle, 
    fontStyleEncodeJson: fontStyleEncodeJson, 
    fontWeightEncodeJson: fontWeightEncodeJson, 
    textBaselineEncodeJson: textBaselineEncodeJson, 
    textStyleDefault: textStyleDefault, 
    textStyleEncodeJson: textStyleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Coords":65,"Prelude":122}],95:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
function Size(value0) {
    this.value0 = value0;
};
Size.create = function (value0) {
    return new Size(value0);
};
function Func(value0) {
    this.value0 = value0;
};
Func.create = function (value0) {
    return new Func(value0);
};
function Circle() {

};
Circle.value = new Circle();
function Rectangle() {

};
Rectangle.value = new Rectangle();
function Triangle() {

};
Triangle.value = new Triangle();
function Diamond() {

};
Diamond.value = new Diamond();
function EmptyCircle() {

};
EmptyCircle.value = new EmptyCircle();
function EmptyRectangle() {

};
EmptyRectangle.value = new EmptyRectangle();
function EmptyTriangle() {

};
EmptyTriangle.value = new EmptyTriangle();
function EmptyDiamond() {

};
EmptyDiamond.value = new EmptyDiamond();
function DblSize(value0) {
    this.value0 = value0;
};
DblSize.create = function (value0) {
    return new DblSize(value0);
};
function DblFunc(value0) {
    this.value0 = value0;
};
DblFunc.create = function (value0) {
    return new DblFunc(value0);
};
var symbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof Size) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(ss.value0);
    };
    if (ss instanceof Func) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match");
});
var encodeJsonSymbol = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Circle) {
            return "circle";
        };
        if (a instanceof Rectangle) {
            return "rectangle";
        };
        if (a instanceof Triangle) {
            return "triangle";
        };
        if (a instanceof Diamond) {
            return "diamond";
        };
        if (a instanceof EmptyCircle) {
            return "emptyCircle";
        };
        if (a instanceof EmptyRectangle) {
            return "emptyRectangle";
        };
        if (a instanceof EmptyTriangle) {
            return "emptyTriangle";
        };
        if (a instanceof EmptyDiamond) {
            return "emptyDiamond";
        };
        throw new Error("Failed pattern match");
    })());
});
var dblSymbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof DblSize) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))(ss.value0);
    };
    if (ss instanceof DblFunc) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    Circle: Circle, 
    DblFunc: DblFunc, 
    DblSize: DblSize, 
    Diamond: Diamond, 
    EmptyCircle: EmptyCircle, 
    EmptyDiamond: EmptyDiamond, 
    EmptyRectangle: EmptyRectangle, 
    EmptyTriangle: EmptyTriangle, 
    Func: Func, 
    Rectangle: Rectangle, 
    Size: Size, 
    Triangle: Triangle, 
    dblSymbolSizeEncodeJson: dblSymbolSizeEncodeJson, 
    encodeJsonSymbol: encodeJsonSymbol, 
    symbolSizeEncodeJson: symbolSizeEncodeJson
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"ECharts.Utils":101,"Prelude":122}],96:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Style_Checkpoint = require("ECharts.Style.Checkpoint");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Symbol = require("ECharts.Symbol");
function TimelineTime() {

};
TimelineTime.value = new TimelineTime();
function TimelineNumber() {

};
TimelineNumber.value = new TimelineNumber();
function TCPLeft() {

};
TCPLeft.value = new TCPLeft();
function TCPRight() {

};
TCPRight.value = new TCPRight();
function TCPNone() {

};
TCPNone.value = new TCPNone();
var Timeline = {
    create: function (value) {
        return value;
    }
};
var timelineTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TimelineTime) {
            return "time";
        };
        if (a instanceof TimelineNumber) {
            return "number";
        };
        throw new Error("Failed pattern match");
    })());
});
var timelineDefault = {
    show: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    notMerge: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    controlPosition: Data_Maybe.Nothing.value, 
    autoPlay: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    playInterval: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    checkpointStyle: Data_Maybe.Nothing.value, 
    controlStyle: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    currentIndex: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var timelineControlPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TCPNone) {
            return "none";
        };
        if (a instanceof TCPRight) {
            return "right";
        };
        if (a instanceof TCPLeft) {
            return "left";
        };
        throw new Error("Failed pattern match");
    })());
});
var timelineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_39) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_39.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineTypeEncodeJson))("type")(_39.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("notMerge")(_39.notMerge), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_39.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_39.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_39.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_39.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_39.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_39.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_39.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_39.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_39.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_39.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_39.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineControlPositionEncodeJson))("controlPosition")(_39.controlPosition), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("autoPlay")(_39.autoPlay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_39.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("playInterval")(_39.playInterval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_39.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_39.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Checkpoint.checkpointStyleEncodeJson))("checkpointStyle")(_39.checkpointStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("controlStyle")(_39.controlStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_39.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_39.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("currentIndex")(_39.currentIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("data")(_39.data) ]));
});
module.exports = {
    TCPLeft: TCPLeft, 
    TCPNone: TCPNone, 
    TCPRight: TCPRight, 
    Timeline: Timeline, 
    TimelineNumber: TimelineNumber, 
    TimelineTime: TimelineTime, 
    timelineControlPositionEncodeJson: timelineControlPositionEncodeJson, 
    timelineDefault: timelineDefault, 
    timelineEncodeJson: timelineEncodeJson, 
    timelineTypeEncodeJson: timelineTypeEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Axis":60,"ECharts.Common":63,"ECharts.Style.Checkpoint":88,"ECharts.Style.Item":90,"ECharts.Style.Line":91,"ECharts.Symbol":95,"Prelude":122}],97:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
function Self() {

};
Self.value = new Self();
function Blank() {

};
Blank.value = new Blank();
var Title = {
    create: function (value) {
        return value;
    }
};
var titleDefault = {
    text: Data_Maybe.Nothing.value, 
    link: Data_Maybe.Nothing.value, 
    subtext: Data_Maybe.Nothing.value, 
    sublink: Data_Maybe.Nothing.value, 
    subtarget: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textAlign: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    subtextStyle: Data_Maybe.Nothing.value
};
var linkTargetEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Self) {
            return "self";
        };
        if (a instanceof Blank) {
            return "blank";
        };
        throw new Error("Failed pattern match");
    })());
});
var titleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_2.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_2.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("target")(_2.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("subtext")(_2.subtext), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("sublink")(_2.sublink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("subtarget")(_2.subtarget), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("textAlign")(_2.textAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_2.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_2.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_2.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_2.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_2.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_2.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("subtextStyle")(_2.subtextStyle) ]));
});
module.exports = {
    Blank: Blank, 
    Self: Self, 
    Title: Title, 
    linkTargetEncodeJson: linkTargetEncodeJson, 
    titleDefault: titleDefault, 
    titleEncodeJson: titleEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Style.Text":94,"Prelude":122}],98:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Image = require("ECharts.Image");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
var SaveAsImageFeature = {
    create: function (value) {
        return value;
    }
};
var RestoreFeature = {
    create: function (value) {
        return value;
    }
};
var MarkFeatureTitle = {
    create: function (value) {
        return value;
    }
};
var MarkFeature = {
    create: function (value) {
        return value;
    }
};
function MagicLine() {

};
MagicLine.value = new MagicLine();
function MagicBar() {

};
MagicBar.value = new MagicBar();
function MagicStack() {

};
MagicStack.value = new MagicStack();
function MagicTiled() {

};
MagicTiled.value = new MagicTiled();
function MagicForce() {

};
MagicForce.value = new MagicForce();
function MagicChord() {

};
MagicChord.value = new MagicChord();
function MagicPie() {

};
MagicPie.value = new MagicPie();
function MagicFunnel() {

};
MagicFunnel.value = new MagicFunnel();
var MagicTypeFeature = {
    create: function (value) {
        return value;
    }
};
var DataZoomFeatureTitle = {
    create: function (value) {
        return value;
    }
};
var DataZoomFeature = {
    create: function (value) {
        return value;
    }
};
var DataViewFeature = {
    create: function (value) {
        return value;
    }
};
var Feature = {
    create: function (value) {
        return value;
    }
};
var Toolbox = {
    create: function (value) {
        return value;
    }
};
var toolboxDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    disableColor: Data_Maybe.Nothing.value, 
    effectiveColor: Data_Maybe.Nothing.value, 
    showTitle: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    feature: Data_Maybe.Nothing.value
};
var saveAsImageFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
var saveAsImageEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_4) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_4.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_4.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Image.encodeImg))("type")(_4.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_4.lang) ]));
});
var restoreFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_5) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_5.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_5.title) ]));
});
var restoreFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var mftitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_9) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mark")(_9.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markUndo")(_9.markUndo), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markClear")(_9.markUndo) ]));
});
var markFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_10) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_10.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(mftitleEncodeJson))("title")(_10.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_10.lineStyle) ]));
});
var markFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var magicTypeFeature = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    option: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
var magicTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof MagicLine) {
            return "line";
        };
        if (a instanceof MagicBar) {
            return "bar";
        };
        if (a instanceof MagicStack) {
            return "stack";
        };
        if (a instanceof MagicTiled) {
            return "tiled";
        };
        if (a instanceof MagicForce) {
            return "force";
        };
        if (a instanceof MagicChord) {
            return "chord";
        };
        if (a instanceof MagicPie) {
            return "pie";
        };
        if (a instanceof MagicFunnel) {
            return "funnel";
        };
        throw new Error("Failed pattern match");
    })());
});
var magicTypeFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_11) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_11.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("title")(_11.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("option")(_11.option), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(magicTypeEncodeJson)))("type")(_11.type) ]));
});
var featureDefault = {
    mark: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    dataView: Data_Maybe.Nothing.value, 
    magicType: Data_Maybe.Nothing.value, 
    restore: Data_Maybe.Nothing.value, 
    saveAsImage: Data_Maybe.Nothing.value
};
var datazoomTitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_6) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoom")(_6.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoomReset")(_6.dataZoomReset) ]));
});
var dataviewFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_7) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_7.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(datazoomTitleEncodeJson))("title")(_7.title) ]));
});
var dataZoomFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var dataViewFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_8) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_8.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_8.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("readOnly")(_8.readOnly), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_8.lang) ]));
});
var featureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_3) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(markFeatureEncodeJson))("mark")(_3.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataviewFeatureEncodeJson))("dataZoom")(_3.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataViewFeatureEncodeJson))("dataView")(_3.dataView), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(magicTypeFeatureEncodeJson))("magicType")(_3.magicType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(restoreFeatureEncodeJson))("restore")(_3.restore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(saveAsImageEncodeJson))("saveAsImage")(_3.saveAsImage) ]));
});
var toolboxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_2) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_2.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_2.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_2.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_2.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_2.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_2.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_2.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_2.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_2.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemSize")(_2.itemSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_2.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("disableColor")(_2.disableColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("effectiveColor")(_2.effectiveColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showTitle")(_2.showTitle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_2.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(featureEncodeJson))("feature")(_2.feature) ]));
});
var dataViewFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    readOnly: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
module.exports = {
    DataViewFeature: DataViewFeature, 
    DataZoomFeature: DataZoomFeature, 
    DataZoomFeatureTitle: DataZoomFeatureTitle, 
    Feature: Feature, 
    MagicBar: MagicBar, 
    MagicChord: MagicChord, 
    MagicForce: MagicForce, 
    MagicFunnel: MagicFunnel, 
    MagicLine: MagicLine, 
    MagicPie: MagicPie, 
    MagicStack: MagicStack, 
    MagicTiled: MagicTiled, 
    MagicTypeFeature: MagicTypeFeature, 
    MarkFeature: MarkFeature, 
    MarkFeatureTitle: MarkFeatureTitle, 
    RestoreFeature: RestoreFeature, 
    SaveAsImageFeature: SaveAsImageFeature, 
    Toolbox: Toolbox, 
    dataViewFeatureDefault: dataViewFeatureDefault, 
    dataViewFeatureEncodeJson: dataViewFeatureEncodeJson, 
    dataZoomFeatureDefault: dataZoomFeatureDefault, 
    dataviewFeatureEncodeJson: dataviewFeatureEncodeJson, 
    datazoomTitleEncodeJson: datazoomTitleEncodeJson, 
    featureDefault: featureDefault, 
    featureEncodeJson: featureEncodeJson, 
    magicTypeEncodeJson: magicTypeEncodeJson, 
    magicTypeFeature: magicTypeFeature, 
    magicTypeFeatureEncodeJson: magicTypeFeatureEncodeJson, 
    markFeatureDefault: markFeatureDefault, 
    markFeatureEncodeJson: markFeatureEncodeJson, 
    mftitleEncodeJson: mftitleEncodeJson, 
    restoreFeatureDefault: restoreFeatureDefault, 
    restoreFeatureEncodeJson: restoreFeatureEncodeJson, 
    saveAsImageEncodeJson: saveAsImageEncodeJson, 
    saveAsImageFeatureDefault: saveAsImageFeatureDefault, 
    toolboxDefault: toolboxDefault, 
    toolboxEncodeJson: toolboxEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Image":71,"ECharts.Style.Line":91,"ECharts.Style.Text":94,"Prelude":122}],99:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
function TriggerItem() {

};
TriggerItem.value = new TriggerItem();
function TriggerAxis() {

};
TriggerAxis.value = new TriggerAxis();
function Fixed(value0) {
    this.value0 = value0;
};
Fixed.create = function (value0) {
    return new Fixed(value0);
};
function FuncPos(value0) {
    this.value0 = value0;
};
FuncPos.create = function (value0) {
    return new FuncPos(value0);
};
function LinePointer() {

};
LinePointer.value = new LinePointer();
function CrossPointer() {

};
CrossPointer.value = new CrossPointer();
function ShadowPointer() {

};
ShadowPointer.value = new ShadowPointer();
function NonePointer() {

};
NonePointer.value = new NonePointer();
var TooltipAxisPointer = {
    create: function (value) {
        return value;
    }
};
var Tooltip = {
    create: function (value) {
        return value;
    }
};
var tooltipTriggerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_15) {
    if (_15 instanceof TriggerItem) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("item");
    };
    if (_15 instanceof TriggerAxis) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("axis");
    };
    throw new Error("Failed pattern match");
});
var tooltipPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_16) {
    if (_16 instanceof Fixed) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))(_16.value0);
    };
    if (_16 instanceof FuncPos) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(_16.value0));
    };
    throw new Error("Failed pattern match");
});
var tooltipDefault = {
    show: Data_Maybe.Nothing.value, 
    showContent: Data_Maybe.Nothing.value, 
    trigger: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    islandFormatter: Data_Maybe.Nothing.value, 
    showDelay: Data_Maybe.Nothing.value, 
    hideDelay: Data_Maybe.Nothing.value, 
    transitionDuration: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderRadius: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    axisPointer: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var tooltipAxisPointerTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LinePointer) {
            return "line";
        };
        if (a instanceof CrossPointer) {
            return "cross";
        };
        if (a instanceof ShadowPointer) {
            return "shadow";
        };
        if (a instanceof NonePointer) {
            return "none";
        };
        throw new Error("Failed pattern match");
    })());
});
var tooltipAxisPointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_17) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerTypeEncodeJson))("type")(_17.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_17.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("crossStyle")(_17.crossStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("shadowStyle")(_17.shadowStyle) ]));
});
var tooltipEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_18) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_18.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showContent")(_18.showContent), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipTriggerEncodeJson))("trigger")(_18.trigger), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipPositionEncodeJson))("position")(_18.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_18.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("islandFormatter")(_18.islandFormatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("showDelay")(_18.showDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("hideDelay")(_18.hideDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("transitionDuration")(_18.transitionDuration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_18.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_18.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderRadius")(_18.borderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_18.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_18.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerEncodeJson))("axisPointer")(_18.axisPointer), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_18.textStyle) ]));
});
var tooltipAxisPointerDefault = {
    type: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    crossStyle: Data_Maybe.Nothing.value, 
    shadowStyle: Data_Maybe.Nothing.value
};
module.exports = {
    CrossPointer: CrossPointer, 
    Fixed: Fixed, 
    FuncPos: FuncPos, 
    LinePointer: LinePointer, 
    NonePointer: NonePointer, 
    ShadowPointer: ShadowPointer, 
    Tooltip: Tooltip, 
    TooltipAxisPointer: TooltipAxisPointer, 
    TriggerAxis: TriggerAxis, 
    TriggerItem: TriggerItem, 
    tooltipAxisPointerDefault: tooltipAxisPointerDefault, 
    tooltipAxisPointerEncodeJson: tooltipAxisPointerEncodeJson, 
    tooltipAxisPointerTypeEncodeJson: tooltipAxisPointerTypeEncodeJson, 
    tooltipDefault: tooltipDefault, 
    tooltipEncodeJson: tooltipEncodeJson, 
    tooltipPositionEncodeJson: tooltipPositionEncodeJson, 
    tooltipTriggerEncodeJson: tooltipTriggerEncodeJson
};

},{"Data.Argonaut.Combinators":16,"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Data.Function":35,"Data.Maybe":39,"Data.StrMap":50,"ECharts.Common":63,"ECharts.Formatter":69,"ECharts.Style.Area":87,"ECharts.Style.Line":91,"ECharts.Style.Text":94,"ECharts.Utils":101,"Prelude":122}],100:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
function Line() {

};
Line.value = new Line();
function Bar() {

};
Bar.value = new Bar();
function Scatter() {

};
Scatter.value = new Scatter();
function Candlestick() {

};
Candlestick.value = new Candlestick();
function Pie() {

};
Pie.value = new Pie();
function Radar() {

};
Radar.value = new Radar();
function Chord() {

};
Chord.value = new Chord();
function Force() {

};
Force.value = new Force();
function Map() {

};
Map.value = new Map();
function Gauge() {

};
Gauge.value = new Gauge();
function Funnel() {

};
Funnel.value = new Funnel();
function EventRiver() {

};
EventRiver.value = new EventRiver();
var chartTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Line) {
            return "line";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Scatter) {
            return "scatter";
        };
        if (a instanceof Candlestick) {
            return "candlestick";
        };
        if (a instanceof Pie) {
            return "pie";
        };
        if (a instanceof Radar) {
            return "radar";
        };
        if (a instanceof Chord) {
            return "chord";
        };
        if (a instanceof Force) {
            return "force";
        };
        if (a instanceof Map) {
            return "map";
        };
        if (a instanceof Gauge) {
            return "gauge";
        };
        if (a instanceof Funnel) {
            return "funnel";
        };
        if (a instanceof EventRiver) {
            return "eventRiver";
        };
        throw new Error("Failed pattern match");
    })());
});
module.exports = {
    Bar: Bar, 
    Candlestick: Candlestick, 
    Chord: Chord, 
    EventRiver: EventRiver, 
    Force: Force, 
    Funnel: Funnel, 
    Gauge: Gauge, 
    Line: Line, 
    Map: Map, 
    Pie: Pie, 
    Radar: Radar, 
    Scatter: Scatter, 
    chartTypeEncodeJson: chartTypeEncodeJson
};

},{"Data.Argonaut.Core":17,"Data.Argonaut.Encode":19,"Prelude":122}],101:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

function unnull(obj) {
  if (obj == null || typeof(obj) != 'object') {
    return obj;
  }
  var temp = new obj.constructor();
  for (var i in obj) {
    if (obj.hasOwnProperty(i) && obj[i] !== null && obj[i] !== undefined) {
      temp[i] = unnull(obj[i]);
    }
  }
  return temp;
}
;

function func2json(fn) {
  return fn;
}
;
module.exports = {
    func2json: func2json, 
    unnull: unnull
};

},{"Prelude":122}],102:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options = {
    title: {
        text: "Event River", 
        subtext: "\u7eaf\u5c5e\u865a\u6784"
    }, 
    tooltip: {
        trigger: "item", 
        enterable: true
    }, 
    legend: {
        data: [ "\u8d22\u7ecf\u4e8b\u4ef6", "\u653f\u6cbb\u4e8b\u4ef6" ]
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    xAxis: [ {
        type: "time", 
        boundaryGap: [ 5.0e-2, 0.1 ]
    } ], 
    series: [ {
        name: "\u8d22\u7ecf\u4e8b\u4ef6", 
        type: "eventRiver", 
        weight: 123, 
        eventList: [ {
            name: "\u963f\u91cc\u5df4\u5df4\u4e0a\u5e02", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-01", 
                value: 14, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-02", 
                value: 34, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-03", 
                value: 60, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-04", 
                value: 40, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-05", 
                value: 10, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        }, {
            name: "\u963f\u91cc\u5df4\u5df4\u4e0a\u5e022", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-02", 
                value: 10, 
                detail: {
                    link: "www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-03", 
                value: 34, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-04", 
                value: 40, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-05", 
                value: 10, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        }, {
            name: "\u4e09\u661f\u4e1a\u7ee9\u66b4\u8dcc", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-03", 
                value: 24, 
                detail: {
                    link: "www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-04", 
                value: 34, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-05", 
                value: 50, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-06", 
                value: 30, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-07", 
                value: 20, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        } ]
    }, {
        name: "\u653f\u6cbb\u4e8b\u4ef6", 
        type: "eventRiver", 
        weight: 123, 
        eventList: [ {
            name: "Apec\u5cf0\u4f1a", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-06", 
                value: 14, 
                detail: {
                    link: "www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-07", 
                value: 34, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-08", 
                value: 60, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-09", 
                value: 40, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-10", 
                value: 20, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        }, {
            name: "\u8fd0\u57ce\u5b98\u5e2e\u900f\u89c6", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-08", 
                value: 4, 
                detail: {
                    link: "www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-09", 
                value: 14, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-10", 
                value: 30, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-11", 
                value: 20, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-12", 
                value: 10, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        }, {
            name: "\u5e95\u5c42\u516c\u52a1\u5458\u6536\u5165\u8d85\u8fc7\u526f\u90e8\u957f", 
            weight: 123, 
            evolution: [ {
                time: "2014-05-11", 
                value: 4, 
                detail: {
                    link: "www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-12", 
                value: 24, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-13", 
                value: 40, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-14", 
                value: 20, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-15", 
                value: 15, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            }, {
                time: "2014-05-16", 
                value: 10, 
                detail: {
                    link: "http://www.baidu.com", 
                    text: "\u767e\u5ea6\u6307\u6570", 
                    img: "../asset/ico/favicon.png"
                }
            } ]
        } ]
    } ]
};
var eventRiver = function (id) {
    return function __do() {
        var _13 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    eventRiver: eventRiver, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Maybe":39,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],103:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var Math = require("Math");
var ECharts_Events = require("ECharts.Events");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var subscribe = function (chart) {
    var sub = function (et) {
        return function (hndl) {
            return ECharts_Events.listen(et)(hndl)(chart);
        };
    };
    return function __do() {
        sub(ECharts_Events.Click.value)(Utils.log)();
        sub(ECharts_Events.DoubleClick.value)(Utils.log)();
        sub(ECharts_Events.DataZoom.value)(Utils.log)();
        sub(ECharts_Events.LegendSelected.value)(Utils.log)();
        sub(ECharts_Events.MagicTypeChanged.value)(Utils.log)();
        return sub(ECharts_Events.DataViewChanged.value)(Utils.log)();
    };
};
var options_ = function (line) {
    return function (bar) {
        return {
            tooltip: {
                trigger: "axis"
            }, 
            legend: {
                data: [ "\u6700\u9ad8", "\u6700\u4f4e" ]
            }, 
            toolbox: {
                show: true, 
                feature: {
                    mark: {
                        show: true
                    }, 
                    dataView: {
                        readOnly: false
                    }, 
                    magicType: {
                        show: true, 
                        type: [ "line", "bar", "stack", "tiled" ]
                    }, 
                    restore: {
                        show: true
                    }, 
                    saveAsImage: {
                        show: true
                    }
                }
            }, 
            calculable: true, 
            dataZoom: {
                show: true, 
                realtime: true, 
                start: 40, 
                end: 60
            }, 
            xAxis: [ {
                type: "category", 
                boundaryGap: true, 
                data: Prelude["<$>"](Data_Array.functorArray)(function (i) {
                    return "2013-03-" + Prelude.show(Prelude.showNumber)(i);
                })(Data_Array[".."](1)(30))
            } ], 
            yAxis: [ {
                type: "value"
            } ], 
            series: [ {
                name: "\u6700\u9ad8", 
                type: "line", 
                data: line
            }, {
                name: "\u6700\u4f4e", 
                type: "bar", 
                data: bar
            } ]
        };
    };
};
var lineData = function __do() {
    var _14 = Utils.randomLst(30)();
    return Prelude["<$>"](Data_Array.functorArray)(function (x) {
        return Math.round(x * 30 + 30);
    })(_14);
};
var barData = function __do() {
    var _15 = Utils.randomLst(30)();
    return Prelude["<$>"](Data_Array.functorArray)(function (x) {
        return Math.round(x * 10);
    })(_15);
};
var options = function __do() {
    var _17 = lineData();
    var _16 = barData();
    return options_(_17)(_16);
};
var events = function (id) {
    return function __do() {
        var _19 = options();
        var _18 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(_19)(true))();
        subscribe(_18)();
        return Prelude.unit;
    };
};
module.exports = {
    barData: barData, 
    events: events, 
    lineData: lineData, 
    options: options, 
    options_: options_, 
    subscribe: subscribe
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"ECharts.Chart":61,"ECharts.Events":68,"ECharts.Options.Unsafe":80,"Math":114,"Prelude":122,"Utils":127}],104:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Array = require("Data.Array");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Data_Maybe = require("Data.Maybe");
function MockData(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
MockData.create = function (value0) {
    return function (value1) {
        return new MockData(value0, value1);
    };
};

function clientWidth(id) {
  return function() {
    return document.getElementById(id).clientWidth;
  };
}
;

function clientHeight(id) {
  return function() {
    return document.getElementById(id).clientHeight;
  };
}
;
var randomInRange = function (min) {
    return function (max) {
        return Prelude["<$>"](Control_Monad_Eff.functorEff)(function (x) {
            return (max - min) * x + min;
        })(Control_Monad_Eff_Random.random);
    };
};
var nodes = Prelude["return"](Control_Monad_Eff.monadEff)([  ]);
var links = Prelude["return"](Control_Monad_Eff.monadEff)([  ]);
var constMinRadius = 2;
var constMinChildren = 2;
var constMaxRadius = 10;
var mkOptions = function (nodes_1) {
    return function (links_1) {
        return {
            title: {
                text: "Force", 
                subtext: "Force-directed tree", 
                x: "right", 
                y: "bottom"
            }, 
            tooltip: {
                trigger: "item", 
                formatter: "{a} : {b}"
            }, 
            toolbox: {
                show: true, 
                feature: {
                    restore: {
                        show: true
                    }, 
                    magicType: {
                        show: true, 
                        type: [ "force", "chord" ]
                    }, 
                    saveAsImage: {
                        show: true
                    }
                }
            }, 
            legend: {
                x: "left", 
                data: [ "\u53f6\u5b50\u8282\u70b9", "\u975e\u53f6\u5b50\u8282\u70b9", "\u6839\u8282\u70b9" ]
            }, 
            series: [ {
                type: "force", 
                name: "Force tree", 
                ribbonType: false, 
                categories: Data_Tuple_Nested["/\\"]({
                    name: "\u53f6\u5b50\u8282\u70b9", 
                    itemStyle: {
                        normal: {
                            color: "#ff7f50"
                        }
                    }
                })(Data_Tuple_Nested["/\\"]({
                    name: "\u975e\u53f6\u5b50\u8282\u70b9", 
                    itemStyle: {
                        normal: {
                            color: "#6f57bc"
                        }
                    }
                })({
                    name: "\u6839\u8282\u70b9", 
                    itemStyle: {
                        normal: {
                            color: "af0000"
                        }
                    }
                })), 
                itemStyle: {
                    normal: {
                        label: {
                            show: false
                        }, 
                        nodeStyle: {
                            brushType: "both", 
                            strokeColor: "rgba(255, 215, 0, 0.6)", 
                            lineWidth: 1
                        }
                    }
                }, 
                minRadius: constMinRadius, 
                maxRadius: constMaxRadius, 
                nodes: nodes_1, 
                links: links_1
            } ]
        };
    };
};
var constMaxDepth = 4;
var createRootNode = function (depth) {
    return function __do() {
        var _23 = clientWidth("force4")();
        var _22 = clientHeight("force4")();
        var _21 = Control_Monad_Eff_Random.random();
        var _20 = randomInRange(constMinRadius)(constMaxRadius)();
        return (function () {
            var x = _23 / 2 + (0.5 - _21) * 200;
            var y = (_22 - 20) * depth / (constMaxDepth + 1) + 20;
            return Prelude["return"](Control_Monad_Eff.monadEff)({
                name: "ROOT_NODE", 
                value: _20, 
                id: "root", 
                depth: depth, 
                initial: Data_Tuple_Nested["/\\"](x)(y), 
                fixX: false, 
                fixY: true, 
                category: 2
            });
        })()();
    };
};
var createNodeWithIndex = function (idx) {
    return function (depth) {
        return function __do() {
            var _24 = createRootNode(depth)();
            var _155 = {};
            for (var _156 in _24) {
                if (_24.hasOwnProperty(_156)) {
                    _155[_156] = _24[_156];
                };
            };
            _155.id = idx;
            _155.name = "NODE_" + idx;
            _155.category = depth === constMaxDepth ? 0 : 1;
            return _155;
        };
    };
};
var mkChild = function (node) {
    return function (idx) {
        return function __do() {
            var _25 = createNodeWithIndex(idx)(node.depth + 1)();
            return (function () {
                var link = {
                    source: node.name, 
                    target: _25.name, 
                    weight: 1
                };
                return Prelude["return"](Control_Monad_Eff.monadEff)(new Data_Tuple.Tuple(_25, link));
            })()();
        };
    };
};
var constMaxChildren = 3;
var mkChildren = function (node) {
    return function __do() {
        var _26 = randomInRange(constMinChildren)(constMaxChildren)();
        return (function () {
            var ids = Prelude["<$>"](Data_Array.functorArray)(function (x) {
                return node.id + (":" + Prelude.show(Prelude.showNumber)(x));
            })(Data_Array[".."](1)(_26));
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mkChild(node))(ids));
        })()();
    };
};
var forceMockThreeDataI = function (_92) {
    return function (_93) {
        return function (_94) {
            if (_94 === 0) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(_93);
            };
            var nextAccum = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (_91) {
                return function (_90) {
                    return new MockData(Prelude[":"](_90.value0)(_91.value0), Prelude[":"](_90.value1)(_91.value1));
                };
            })(_93)(_92);
            return function __do() {
                var _27 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(mkChildren)(Data_Tuple.fst))(_92))();
                return forceMockThreeDataI(Data_Array.concat(_27))(nextAccum)(_94 - 1)();
            };
        };
    };
};
var forceMockThreeData = function __do() {
    var _29 = createRootNode(0)();
    var _28 = mkChildren(_29)();
    return forceMockThreeDataI(_28)(new MockData([ _29 ], [  ]))(constMaxDepth)();
};
var options = function __do() {
    var _30 = forceMockThreeData();
    Utils.log(_30.value1)();
    return mkOptions(_30.value0)(_30.value1);
};
var force4 = function (id) {
    return function __do() {
        var _32 = options();
        var _31 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(_32)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    MockData: MockData, 
    clientHeight: clientHeight, 
    clientWidth: clientWidth, 
    constMaxChildren: constMaxChildren, 
    constMaxDepth: constMaxDepth, 
    constMaxRadius: constMaxRadius, 
    constMinChildren: constMinChildren, 
    constMinRadius: constMinRadius, 
    createNodeWithIndex: createNodeWithIndex, 
    createRootNode: createRootNode, 
    force4: force4, 
    forceMockThreeData: forceMockThreeData, 
    forceMockThreeDataI: forceMockThreeDataI, 
    links: links, 
    mkChild: mkChild, 
    mkChildren: mkChildren, 
    mkOptions: mkOptions, 
    nodes: nodes, 
    options: options, 
    randomInRange: randomInRange
};

},{"Control.Monad.Eff":12,"Control.Monad.Eff.Random":11,"Data.Array":27,"Data.Foldable":34,"Data.Maybe":39,"Data.Traversable":54,"Data.Tuple":56,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],105:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options = {
    color: [ "rgba(255, 69, 0, 0.5)", "rgba(255, 150, 0, 0.5)", "rgba(255, 200, 0, 0.5)", "rgba(155, 200, 50, 0.5)", "rgba(55, 200, 100, 0.5)" ], 
    title: {
        text: "\u6f0f\u6597\u56fe", 
        subtext: "\u7eaf\u5c5e\u865a\u6784"
    }, 
    tooltip: {
        trigger: "item", 
        formatter: "{a} <br/>{b} : {c}%"
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    legend: {
        data: [ "\u5c55\u73b0", "\u70b9\u51fb", "\u8bbf\u95ee", "\u54a8\u8be2", "\u8ba2\u5355" ]
    }, 
    calculable: true, 
    series: Data_Tuple_Nested["/\\"]({
        name: "\u9884\u671f", 
        type: "funnel", 
        x: "10%", 
        width: "80%", 
        itemStyle: {
            normal: {
                label: {
                    formatter: "{b}\u9884\u671f"
                }, 
                labelLine: {
                    show: false
                }
            }, 
            emphasis: {
                label: {
                    position: "inside", 
                    formatter: "{b}\u9884\u671f : {c}%"
                }
            }
        }, 
        data: [ {
            value: 60, 
            name: "\u8bbf\u95ee"
        }, {
            value: 40, 
            name: "\u54a8\u8be2"
        }, {
            value: 20, 
            name: "\u8ba2\u5355"
        }, {
            value: 80, 
            name: "\u70b9\u51fb"
        }, {
            value: 100, 
            name: "\u5c55\u73b0"
        } ]
    })({
        name: "\u5b9e\u9645", 
        type: "funnel", 
        x: "10%", 
        width: "80%", 
        maxSize: "80%", 
        itemStyle: {
            normal: {
                borderColor: "#fff", 
                borderWidth: 2, 
                label: {
                    position: "inside", 
                    formatter: "{c}%", 
                    textStyle: {
                        color: "#fff"
                    }
                }
            }, 
            emphasis: {
                label: {
                    position: "inside", 
                    formatter: "{b}\u5b9e\u9645 : {c}%"
                }
            }
        }, 
        data: [ {
            value: 30, 
            name: "\u8bbf\u95ee"
        }, {
            value: 10, 
            name: "\u54a8\u8be2"
        }, {
            value: 5, 
            name: "\u8ba2\u5355"
        }, {
            value: 50, 
            name: "\u70b9\u51fb"
        }, {
            value: 80, 
            name: "\u5c55\u73b0"
        } ]
    })
};
var funnel2 = function (id) {
    return function __do() {
        var _33 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    funnel2: funnel2, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],106:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Signal_Time = require("Signal.Time");
var Prelude = require("Prelude");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Signal = require("Signal");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options_ = function (gaugeValue) {
    return {
        tooltip: {
            formatter: "{a} <br/>{c} {b}"
        }, 
        toolbox: {
            show: true, 
            feature: {
                mark: {
                    show: true
                }, 
                restore: {
                    show: true
                }, 
                saveAsImage: {
                    show: true
                }
            }
        }, 
        series: Data_Tuple_Nested["/\\"]({
            name: "\u901f\u5ea6", 
            type: "gauge", 
            min: 0, 
            max: 220, 
            splitNumber: 11, 
            axisLine: {
                lineStyle: {
                    width: 10
                }
            }, 
            axisTick: {
                length: 15, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            splitLine: {
                length: 20, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            title: {
                textStyle: {
                    fontWeight: "bolder", 
                    fontSize: 20, 
                    fontStyle: "italic"
                }
            }, 
            detail: {
                textStyle: {
                    fontWeight: "bolder"
                }
            }, 
            data: [ {
                value: gaugeValue.first, 
                name: "km/h"
            } ]
        })(Data_Tuple_Nested["/\\"]({
            name: "\u8f6c\u901f", 
            type: "gauge", 
            center: [ "25%", "55%" ], 
            radius: "50%", 
            min: 0, 
            max: 7, 
            endAngle: 45, 
            splitNumber: 7, 
            axisLine: {
                lineStyle: {
                    width: 8
                }
            }, 
            axisTick: {
                length: 12, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            splitLine: {
                length: 20, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            pointer: {
                width: 5
            }, 
            title: {
                offsetCenter: Data_Tuple_Nested["/\\"](0)("-30%")
            }, 
            detail: {
                textStyle: {
                    fontWeight: "bolder"
                }
            }, 
            data: [ {
                value: gaugeValue.second, 
                name: "x1000 r/min"
            } ]
        })(Data_Tuple_Nested["/\\"]({
            name: "\u6cb9\u8868", 
            type: "gauge", 
            center: [ "75%", "50%" ], 
            radius: "50%", 
            min: 0, 
            max: 2, 
            startAngle: 135, 
            endAngle: 45, 
            splitNumber: 2, 
            axisLine: {
                lineStyle: {
                    color: [ Data_Tuple_Nested["/\\"](0.2)("#ff4500"), Data_Tuple_Nested["/\\"](0.8)("#48b"), Data_Tuple_Nested["/\\"](1)("#228b22") ], 
                    width: 8
                }
            }, 
            axisTick: {
                splitNumber: 5, 
                length: 10, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            axisLabel: {
                formatter: function (v) {
                    if (v === 0) {
                        return "E";
                    };
                    if (v === 1) {
                        return "Gas";
                    };
                    if (v === 2) {
                        return "F";
                    };
                    return "";
                }
            }, 
            splitLine: {
                length: 15, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            pointer: {
                width: 2
            }, 
            title: {
                show: false
            }, 
            detail: {
                show: false
            }, 
            data: [ {
                value: gaugeValue.third, 
                name: "gas"
            } ]
        })({
            name: "\u6c34\u8868", 
            type: "gauge", 
            center: [ "75%", "50%" ], 
            radius: "50%", 
            min: 0, 
            max: 2, 
            startAngle: 315, 
            endAngle: 225, 
            splitNumber: 2, 
            axisLine: {
                lineStyle: {
                    color: [ Data_Tuple_Nested["/\\"](0.2)("#ff4500"), Data_Tuple_Nested["/\\"](0.8)("#48b"), Data_Tuple_Nested["/\\"](1)("#228b22") ], 
                    width: 8
                }
            }, 
            axisTick: {
                show: false
            }, 
            axisLabel: {
                formatter: function (v) {
                    if (v === 0) {
                        return "H";
                    };
                    if (v === 1) {
                        return "Water";
                    };
                    if (v === 2) {
                        return "C";
                    };
                    return "";
                }
            }, 
            splitLine: {
                length: 15, 
                lineStyle: {
                    color: "auto"
                }
            }, 
            pointer: {
                width: 2
            }, 
            title: {
                show: false
            }, 
            detail: {
                show: false
            }, 
            data: [ {
                value: gaugeValue.fourth, 
                name: "gas"
            } ]
        })))
    };
};
var gaugeValueSignal = Signal["~>"](Signal.functorSignal)(Signal_Time.every(2000))(Prelude["const"](function __do() {
    var _37 = Control_Monad_Eff_Random.random();
    var _36 = Control_Monad_Eff_Random.random();
    var _35 = Control_Monad_Eff_Random.random();
    var _34 = Control_Monad_Eff_Random.random();
    return {
        first: Utils.precise(2)(_37 * 100), 
        second: Utils.precise(2)(_36 * 7), 
        third: Utils.precise(2)(_35 * 2), 
        fourth: Utils.precise(2)(_34 * 2)
    };
}));
var options = Signal["~>"](Signal.functorSignal)(gaugeValueSignal)(function (g) {
    return function __do() {
        var _38 = g();
        return options_(_38);
    };
});
var gauge4 = function (id) {
    return function __do() {
        var _40 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(options)(function (opts) {
            return function __do() {
                var _39 = opts();
                ECharts_Options_Unsafe.setOptionUnsafe(_39)(true)(_40)();
                return Prelude.unit;
            };
        }))();
    };
};
module.exports = {
    gauge4: gauge4, 
    gaugeValueSignal: gaugeValueSignal, 
    options: options, 
    options_: options_
};

},{"Control.Monad.Eff":12,"Control.Monad.Eff.Random":11,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Signal":126,"Signal.Time":125,"Utils":127}],107:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var nan = NaN;;
var infinity = Infinity;;
function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
var readFloat = parseFloat;;
module.exports = {
    infinity: infinity, 
    isFinite: isFinite, 
    isNaN: isNaN, 
    nan: nan, 
    readFloat: readFloat, 
    readInt: readInt
};

},{"Prelude":122}],108:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Array = require("Data.Array");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = {
    tooltip: {
        trigger: "axis", 
        formatter: function (params) {
            var _187 = Data_Array["!!"](params)(0);
            if (_187 instanceof Data_Maybe.Nothing) {
                return "";
            };
            if (_187 instanceof Data_Maybe.Just) {
                var value3 = Data_Maybe.fromMaybe("")(Data_Array["!!"](_187.value0.value)(3));
                var value2 = Data_Maybe.fromMaybe("")(Data_Array["!!"](_187.value0.value)(2));
                var value1 = Data_Maybe.fromMaybe("")(Data_Array["!!"](_187.value0.value)(1));
                var value0 = Data_Maybe.fromMaybe("")(Data_Array["!!"](_187.value0.value)(0));
                return _187.value0.seriesName + (" " + (_187.value0.name + ("<br/> chinese1: " + (value0 + (" chinese2 : " + (value3 + ("<br/> chinese3: " + (value1 + (" chinese4 : " + value2)))))))));
            };
            throw new Error("Failed pattern match");
        }
    }, 
    legend: {
        data: [ "chinese word" ]
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            dataZoom: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    dataZoom: {
        show: true, 
        realtime: true, 
        start: 0, 
        end: 50
    }, 
    xAxis: [ {
        type: "category", 
        boundaryGap: true, 
        axisTick: {
            onGap: false
        }, 
        splitLine: {
            show: false
        }, 
        data: [ "2013/1/24", "2013/1/25", "2013/1/28", "2013/1/29", "2013/1/30", "2013/1/31", "2013/2/1", "2013/2/4", "2013/2/5", "2013/2/6", "2013/2/7", "2013/2/8", "2013/2/18", "2013/2/19", "2013/2/20", "2013/2/21", "2013/2/22", "2013/2/25", "2013/2/26", "2013/2/27", "2013/2/28", "2013/3/1", "2013/3/4", "2013/3/5", "2013/3/6", "2013/3/7", "2013/3/8", "2013/3/11", "2013/3/12", "2013/3/13", "2013/3/14", "2013/3/15", "2013/3/18", "2013/3/19", "2013/3/20", "2013/3/21", "2013/3/22", "2013/3/25", "2013/3/26", "2013/3/27", "2013/3/28", "2013/3/29", "2013/4/1", "2013/4/2", "2013/4/3", "2013/4/8", "2013/4/9", "2013/4/10", "2013/4/11", "2013/4/12", "2013/4/15", "2013/4/16", "2013/4/17", "2013/4/18", "2013/4/19", "2013/4/22", "2013/4/23", "2013/4/24", "2013/4/25", "2013/4/26", "2013/5/2", "2013/5/3", "2013/5/6", "2013/5/7", "2013/5/8", "2013/5/9", "2013/5/10", "2013/5/13", "2013/5/14", "2013/5/15", "2013/5/16", "2013/5/17", "2013/5/20", "2013/5/21", "2013/5/22", "2013/5/23", "2013/5/24", "2013/5/27", "2013/5/28", "2013/5/29", "2013/5/30", "2013/5/31", "2013/6/3", "2013/6/4", "2013/6/5", "2013/6/6", "2013/6/7", "2013/6/13" ]
    } ], 
    yAxis: [ {
        type: "value", 
        scale: true, 
        boundaryGap: [ 1.0e-2, 1.0e-2 ]
    } ], 
    series: [ {
        name: "chinese word", 
        type: "k", 
        barMaxWidth: 20, 
        itemStyle: {
            normal: {
                color: "red", 
                color0: "lightgreen", 
                lineStyle: {
                    width: 2, 
                    color: "orange", 
                    color0: "green"
                }
            }, 
            emphasis: {
                color: "black", 
                color0: "black0"
            }
        }, 
        data: Data_Tuple_Nested["/\\"]({
            value: [ 2320.26, 2302.6, 2287.3, 2362.94 ], 
            itemStyle: {
                normal: {
                    color0: "blue", 
                    lineStyle: {
                        width: 3, 
                        color0: "blue"
                    }
                }, 
                emphasis: {
                    color0: "blue"
                }
            }
        })(Data_Tuple_Nested["/\\"]([ 2300, 2291.3, 2288.26, 2308.38 ])(Data_Tuple_Nested["/\\"]([ 2295.35, 2346.5, 2295.35, 2346.92 ])(Data_Tuple_Nested["/\\"]([ 2347.22, 2358.98, 2337.35, 2363.8 ])(Data_Tuple_Nested["/\\"]([ 2360.75, 2382.48, 2347.89, 2383.76 ])(Data_Tuple_Nested["/\\"]([ 2383.43, 2385.42, 2371.23, 2391.82 ])(Data_Tuple_Nested["/\\"]([ 2377.41, 2419.02, 2369.57, 2421.15 ])(Data_Tuple_Nested["/\\"]([ 2425.92, 2428.15, 2417.58, 2440.38 ])(Data_Tuple_Nested["/\\"]([ 2411, 2433.13, 2403.3, 2437.42 ])(Data_Tuple_Nested["/\\"]([ 2432.68, 2434.48, 2427.7, 2441.73 ])(Data_Tuple_Nested["/\\"]([ 2430.69, 2418.53, 2394.22, 2433.89 ])(Data_Tuple_Nested["/\\"]([ 2416.62, 2432.4, 2414.4, 2443.03 ])(Data_Tuple_Nested["/\\"]([ 2441.91, 2421.56, 2415.43, 2444.8 ])(Data_Tuple_Nested["/\\"]([ 2420.26, 2382.91, 2373.53, 2427.07 ])(Data_Tuple_Nested["/\\"]([ 2383.49, 2397.18, 2370.61, 2397.94 ])(Data_Tuple_Nested["/\\"]([ 2378.82, 2325.95, 2309.17, 2378.82 ])(Data_Tuple_Nested["/\\"]([ 2322.94, 2314.16, 2308.76, 2330.88 ])(Data_Tuple_Nested["/\\"]([ 2320.62, 2325.82, 2315.01, 2338.78 ])(Data_Tuple_Nested["/\\"]([ 2313.74, 2293.34, 2289.89, 2340.71 ])(Data_Tuple_Nested["/\\"]([ 2297.77, 2313.22, 2292.03, 2324.63 ])(Data_Tuple_Nested["/\\"]([ 2322.32, 2365.59, 2308.92, 2366.16 ])(Data_Tuple_Nested["/\\"]([ 2364.54, 2359.51, 2330.86, 2369.65 ])(Data_Tuple_Nested["/\\"]([ 2332.08, 2273.4, 2259.25, 2333.54 ])(Data_Tuple_Nested["/\\"]([ 2274.81, 2326.31, 2270.1, 2328.14 ])(Data_Tuple_Nested["/\\"]([ 2333.61, 2347.18, 2321.6, 2351.44 ])(Data_Tuple_Nested["/\\"]([ 2340.44, 2324.29, 2304.27, 2352.02 ])(Data_Tuple_Nested["/\\"]([ 2326.42, 2318.61, 2314.59, 2333.67 ])(Data_Tuple_Nested["/\\"]([ 2314.68, 2310.59, 2296.58, 2320.96 ])(Data_Tuple_Nested["/\\"]([ 2309.16, 2286.6, 2264.83, 2333.29 ])(Data_Tuple_Nested["/\\"]([ 2282.17, 2263.97, 2253.25, 2286.33 ])(Data_Tuple_Nested["/\\"]([ 2255.77, 2270.28, 2253.31, 2276.22 ])(Data_Tuple_Nested["/\\"]([ 2269.31, 2278.4, 2250, 2312.08 ])(Data_Tuple_Nested["/\\"]([ 2267.29, 2240.02, 2239.21, 2276.05 ])(Data_Tuple_Nested["/\\"]([ 2244.26, 2257.43, 2232.02, 2261.31 ])(Data_Tuple_Nested["/\\"]([ 2257.74, 2317.37, 2257.42, 2317.86 ])(Data_Tuple_Nested["/\\"]([ 2318.21, 2324.24, 2311.6, 2330.81 ])(Data_Tuple_Nested["/\\"]([ 2321.4, 2328.28, 2314.97, 2332 ])(Data_Tuple_Nested["/\\"]([ 2334.74, 2326.72, 2319.91, 2344.89 ])(Data_Tuple_Nested["/\\"]([ 2318.58, 2297.67, 2281.12, 2319.99 ])(Data_Tuple_Nested["/\\"]([ 2299.38, 2301.26, 2289, 2323.48 ])(Data_Tuple_Nested["/\\"]([ 2273.55, 2236.3, 2232.91, 2273.55 ])(Data_Tuple_Nested["/\\"]([ 2238.49, 2236.62, 2228.81, 2246.87 ])(Data_Tuple_Nested["/\\"]([ 2229.46, 2234.4, 2227.31, 2243.95 ])(Data_Tuple_Nested["/\\"]([ 2234.9, 2227.74, 2220.44, 2253.42 ])(Data_Tuple_Nested["/\\"]([ 2232.69, 2225.29, 2217.25, 2241.34 ])(Data_Tuple_Nested["/\\"]([ 2196.24, 2211.59, 2180.67, 2212.59 ])(Data_Tuple_Nested["/\\"]([ 2215.47, 2225.77, 2215.47, 2234.73 ])(Data_Tuple_Nested["/\\"]([ 2224.93, 2226.13, 2212.56, 2233.04 ])(Data_Tuple_Nested["/\\"]([ 2236.98, 2219.55, 2217.26, 2242.48 ])(Data_Tuple_Nested["/\\"]([ 2218.09, 2206.78, 2204.44, 2226.26 ])(Data_Tuple_Nested["/\\"]([ 2199.91, 2181.94, 2177.39, 2204.99 ])(Data_Tuple_Nested["/\\"]([ 2169.63, 2194.85, 2165.78, 2196.43 ])(Data_Tuple_Nested["/\\"]([ 2195.03, 2193.8, 2178.47, 2197.51 ])(Data_Tuple_Nested["/\\"]([ 2181.82, 2197.6, 2175.44, 2206.03 ])(Data_Tuple_Nested["/\\"]([ 2201.12, 2244.64, 2200.58, 2250.11 ])(Data_Tuple_Nested["/\\"]([ 2236.4, 2242.17, 2232.26, 2245.12 ])(Data_Tuple_Nested["/\\"]([ 2242.62, 2184.54, 2182.81, 2242.62 ])(Data_Tuple_Nested["/\\"]([ 2187.35, 2218.32, 2184.11, 2226.12 ])(Data_Tuple_Nested["/\\"]([ 2213.19, 2199.31, 2191.85, 2224.63 ])(Data_Tuple_Nested["/\\"]([ 2203.89, 2177.91, 2173.86, 2210.58 ])(Data_Tuple_Nested["/\\"]([ 2170.78, 2174.12, 2161.14, 2179.65 ])(Data_Tuple_Nested["/\\"]([ 2179.05, 2205.5, 2179.05, 2222.81 ])(Data_Tuple_Nested["/\\"]([ 2212.5, 2231.17, 2212.5, 2236.07 ])(Data_Tuple_Nested["/\\"]([ 2227.86, 2235.57, 2219.44, 2240.26 ])(Data_Tuple_Nested["/\\"]([ 2242.39, 2246.3, 2235.42, 2255.21 ])(Data_Tuple_Nested["/\\"]([ 2246.96, 2232.97, 2221.38, 2247.86 ])(Data_Tuple_Nested["/\\"]([ 2228.82, 2246.83, 2225.81, 2247.67 ])(Data_Tuple_Nested["/\\"]([ 2247.68, 2241.92, 2231.36, 2250.85 ])(Data_Tuple_Nested["/\\"]([ 2238.9, 2217.01, 2205.87, 2239.93 ])(Data_Tuple_Nested["/\\"]([ 2217.09, 2224.8, 2213.58, 2225.19 ])(Data_Tuple_Nested["/\\"]([ 2221.34, 2251.81, 2210.77, 2252.87 ])(Data_Tuple_Nested["/\\"]([ 2249.81, 2282.87, 2248.41, 2288.09 ])(Data_Tuple_Nested["/\\"]([ 2286.33, 2299.99, 2281.9, 2309.39 ])(Data_Tuple_Nested["/\\"]([ 2297.11, 2305.11, 2290.12, 2305.3 ])(Data_Tuple_Nested["/\\"]([ 2303.75, 2302.4, 2292.43, 2314.18 ])(Data_Tuple_Nested["/\\"]([ 2293.81, 2275.67, 2274.1, 2304.95 ])(Data_Tuple_Nested["/\\"]([ 2281.45, 2288.53, 2270.25, 2292.59 ])(Data_Tuple_Nested["/\\"]([ 2286.66, 2293.08, 2283.94, 2301.7 ])(Data_Tuple_Nested["/\\"]([ 2293.4, 2321.32, 2281.47, 2322.1 ])(Data_Tuple_Nested["/\\"]([ 2323.54, 2324.02, 2321.17, 2334.33 ])(Data_Tuple_Nested["/\\"]([ 2316.25, 2317.75, 2310.49, 2325.72 ])(Data_Tuple_Nested["/\\"]([ 2320.74, 2300.59, 2299.37, 2325.53 ])(Data_Tuple_Nested["/\\"]([ 2300.21, 2299.25, 2294.11, 2313.43 ])(Data_Tuple_Nested["/\\"]([ 2297.1, 2272.42, 2264.76, 2297.1 ])(Data_Tuple_Nested["/\\"]([ 2270.71, 2270.93, 2260.87, 2276.86 ])(Data_Tuple_Nested["/\\"]([ 2264.43, 2242.11, 2240.07, 2266.69 ])(Data_Tuple_Nested["/\\"]([ 2242.26, 2210.9, 2205.07, 2250.63 ])([ 2190.1, 2148.35, 2126.22, 2190.1 ]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), 
        markPoint: {
            symbol: "star", 
            symbolSize: 20, 
            itemStyle: {
                normal: {
                    label: {
                        position: "top"
                    }
                }
            }, 
            data: [ {
                name: "chinese word", 
                value: 2444.8, 
                xAxis: "2013/2/18", 
                yAxis: 2466
            } ]
        }
    } ]
};
var k = function (id) {
    return function __do() {
        var _41 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    k: k, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],109:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Array_Unsafe = require("Data.Array.Unsafe");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Array = require("Data.Array");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var series = (function () {
    var numbers = Data_Array[".."](0)(29);
    var mapfn = function (i) {
        return {
            name: "chinese word", 
            type: "pie", 
            itemStyle: {
                normal: {
                    label: {
                        show: i > 28
                    }, 
                    labelLine: {
                        show: i > 28, 
                        length: 20
                    }
                }
            }, 
            radius: [ i * 4 + 40, i * 4 + 43 ], 
            data: [ {
                value: i * 128 + 80, 
                name: "Chrome"
            }, {
                value: i * 64 + 160, 
                name: "Firefox"
            }, {
                value: i * 32 + 320, 
                name: "Safari"
            }, {
                value: i * 16 + 640, 
                name: "IE9+"
            }, {
                value: i * 8 + 1280, 
                name: "IE8-"
            } ]
        };
    };
    var series_1 = Prelude["<$>"](Data_Array.functorArray)(mapfn)(numbers);
    var mp = {
        name: "chinese word", 
        type: "pie", 
        data: [  ], 
        markPoint: {
            symbol: "emptyCircle", 
            symbolSize: Data_Array_Unsafe.head((Data_Array_Unsafe.head(series_1)).radius), 
            effect: {
                show: true, 
                scaleSize: 12, 
                color: "rgba(250, 250, 50, 0.8)", 
                shadowBlur: 10, 
                period: 30
            }, 
            data: [ {
                x: "50%", 
                y: "50%"
            } ]
        }
    };
    return Data_Tuple_Nested["/\\"](mp)(new ECharts_Options_Unsafe.Merge(series_1));
})();
var options = {
    title: {
        text: "Title", 
        subtext: "Subtitle", 
        x: "right", 
        y: "bottom"
    }, 
    tooltip: {
        trigger: "item", 
        formatter: "{a} <br />{b} : {c} ({d}%)"
    }, 
    legend: {
        orient: "vertical", 
        x: "left", 
        data: [ "Chrome", "Firefox", "Safari", "IE9+", "IE8-" ]
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    calculable: false, 
    series: series
};
var lasagna = function (id) {
    return function __do() {
        var _42 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    lasagna: lasagna, 
    options: options, 
    series: series
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Array.Unsafe":26,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],110:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options = {
    tooltip: {
        trigger: "axis"
    }, 
    legend: {
        x: "left", 
        data: [ "\u90ae\u4ef6\u8425\u9500", "\u8054\u76df\u5e7f\u544a", "\u89c6\u9891\u5e7f\u544a", "\u76f4\u63a5\u8bbf\u95ee", "\u641c\u7d22\u5f15\u64ce" ]
    }, 
    toolbox: {
        show: true, 
        x: "right", 
        feature: {
            mark: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            magicType: {
                show: true, 
                type: [ "line", "bar", "stack", "tiled" ]
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    calculable: true, 
    xAxis: [ {
        type: "category", 
        boundaryGap: false, 
        data: [ "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d", "\u5468\u65e5" ]
    } ], 
    yAxis: [ {
        type: "value"
    } ], 
    series: Data_Tuple_Nested["/\\"]({
        name: "\u90ae\u4ef6\u8425\u9500", 
        type: "line", 
        stack: "\u603b\u91cf", 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ 120, 132, 101, 134, 90, 230, 210 ]
    })(Data_Tuple_Nested["/\\"]({
        name: "\u8054\u76df\u5e7f\u544a", 
        type: "line", 
        stack: "\u603b\u91cf", 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ 220, 182, 191, 234, 290, 330, 310 ]
    })(Data_Tuple_Nested["/\\"]({
        name: "\u89c6\u9891\u5e7f\u544a", 
        type: "line", 
        stack: "\u603b\u91cf", 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ 150, 232, 201, 154, 190, 330, 410 ]
    })(Data_Tuple_Nested["/\\"]({
        name: "\u76f4\u63a5\u8bbf\u95ee", 
        type: "line", 
        stack: "\u603b\u91cf", 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ 320, 332, 301, 334, 390, 330, 320 ]
    })({
        name: "\u641c\u7d22\u5f15\u64ce", 
        type: "line", 
        stack: "\u603b\u91cf", 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ 820, 932, 901, 934, 1290, 1330, 1320 ]
    }))))
};
var line4 = function (id) {
    return function __do() {
        var _0 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    line4: line4, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],111:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Loading = require("ECharts.Loading");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Signal = require("Signal");
var Prelude = require("Prelude");
var Utils = require("Utils");
var Signal_Time = require("Signal.Time");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
function StartLoading(value0) {
    this.value0 = value0;
};
StartLoading.create = function (value0) {
    return new StartLoading(value0);
};
function StopLoading(value0) {
    this.value0 = value0;
};
StopLoading.create = function (value0) {
    return new StopLoading(value0);
};
var options = function (i) {
    var serieType = i % 2 === 0 ? "bar" : "line";
    return {
        tooltip: {
            trigger: "axis"
        }, 
        toolbox: {
            show: true, 
            feature: {
                mark: {
                    show: true
                }, 
                dataView: {
                    show: true, 
                    readOnly: false
                }, 
                magicType: {
                    show: true, 
                    type: [ "line", "bar" ]
                }, 
                restore: {
                    show: true
                }, 
                saveAsImage: {
                    show: true
                }
            }
        }, 
        legend: {
            data: [ "\u84b8\u53d1\u91cf", "\u964d\u6c34\u91cf" ]
        }, 
        xAxis: [ {
            type: "category", 
            data: [ "1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708" ]
        } ], 
        yAxis: [ {
            type: "value"
        } ], 
        series: [ {
            name: "\u84b8\u53d1\u91cf", 
            type: serieType, 
            data: [ 2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3 ]
        }, {
            name: "\u964d\u6c34\u91cf", 
            type: serieType, 
            data: [ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3 ]
        } ]
    };
};
var effect = function (eff) {
    return ECharts_Loading.LoadingOption.create((function () {
        var _177 = {};
        for (var _178 in ECharts_Loading.loadingOptionDefault) {
            if (ECharts_Loading.loadingOptionDefault.hasOwnProperty(_178)) {
                _177[_178] = ECharts_Loading.loadingOptionDefault[_178];
            };
        };
        _177.text = Data_Maybe.Just.create("effect");
        _177.effect = new Data_Maybe.Just(eff);
        _177.textStyle = Data_Maybe.Just.create(ECharts_Style_Text.TextStyle.create((function () {
            var _175 = {};
            for (var _176 in ECharts_Style_Text.textStyleDefault) {
                if (ECharts_Style_Text.textStyleDefault.hasOwnProperty(_176)) {
                    _175[_176] = ECharts_Style_Text.textStyleDefault[_176];
                };
            };
            _175.fontSize = new Data_Maybe.Just(20);
            return _175;
        })()));
        return _177;
    })());
};
var allEffects = [ ECharts_Loading.Spin.value, ECharts_Loading.Bar.value, ECharts_Loading.Ring.value, ECharts_Loading.Whirling.value, ECharts_Loading.DynamicLine.value, ECharts_Loading.Bubble.value ];
var dataStream = Signal.foldp(function (_) {
    return function (curstateE) {
        return function __do() {
            var _16 = curstateE();
            return (function () {
                if (_16 instanceof StartLoading) {
                    return function __do() {
                        var _14 = Utils.randomInList(allEffects)();
                        return StopLoading.create(options(_14.value1));
                    };
                };
                if (_16 instanceof StopLoading) {
                    return function __do() {
                        var _15 = Utils.randomInList(allEffects)();
                        return new StartLoading(effect(_15.value0));
                    };
                };
                throw new Error("Failed pattern match");
            })()();
        };
    };
})(Prelude["return"](Control_Monad_Eff.monadEff)(new StartLoading(effect(ECharts_Loading.Spin.value))))(Signal_Time.every(2000));
var loading = function (id) {
    return function __do() {
        var _18 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(dataStream)(function (effContent) {
            return function __do() {
                var _17 = effContent();
                return (function () {
                    if (_17 instanceof StartLoading) {
                        return function __do() {
                            var _ = ECharts_Loading.showLoading(_17.value0)(_18)();
                            return Prelude.unit;
                        };
                    };
                    if (_17 instanceof StopLoading) {
                        return function __do() {
                            var _ = Prelude[">>="](Control_Monad_Eff.bindEff)(ECharts_Options_Unsafe.setOptionUnsafe(_17.value0)(true)(_18))(ECharts_Loading.hideLoading)();
                            return Prelude.unit;
                        };
                    };
                    throw new Error("Failed pattern match");
                })()();
            };
        }))();
    };
};
module.exports = {
    StartLoading: StartLoading, 
    StopLoading: StopLoading, 
    allEffects: allEffects, 
    dataStream: dataStream, 
    effect: effect, 
    loading: loading, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Maybe":39,"Data.Tuple":56,"ECharts.Chart":61,"ECharts.Loading":75,"ECharts.Options.Unsafe":80,"ECharts.Style.Text":94,"Prelude":122,"Signal":126,"Signal.Time":125,"Utils":127}],112:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Utils = require("Utils");
var Prelude = require("Prelude");
var Line4 = require("Line4");
var Bar13 = require("Bar13");
var Scatter3 = require("Scatter3");
var K = require("K");
var Lasagna = require("Lasagna");
var Radar3 = require("Radar3");
var Chord2 = require("Chord2");
var Force4 = require("Force4");
var Map11 = require("Map11");
var Gauge4 = require("Gauge4");
var Funnel2 = require("Funnel2");
var EventRiver1 = require("EventRiver1");
var DynamicLineBar = require("DynamicLineBar");
var Loading = require("Loading");
var Events = require("Events");
var Connect = require("Connect");
var Mix2Safe = require("Mix2Safe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var main = Utils.onLoad(function __do() {
    Line4.line4("line4")();
    Bar13.bar13("bar13")();
    Scatter3.scatter3("scatter3")();
    K.k("k")();
    Lasagna.lasagna("lasagna")();
    Radar3.radar3("radar3")();
    Chord2.chord2("chord2")();
    Force4.force4("force4")();
    Map11.map11("map11")();
    Gauge4.gauge4("gauge4")();
    Funnel2.funnel2("funnel2")();
    EventRiver1.eventRiver("event-river")();
    DynamicLineBar.dynamicLineBar("dynamic-line-bar")();
    Loading.loading("loading")();
    Events.events("events")();
    Connect.connectM("connect1")("connect2")();
    return Mix2Safe.mix2safe("mix2safe")();
});
module.exports = {
    main: main
};

},{"Bar13":2,"Chord2":3,"Connect":4,"Control.Monad.Eff":12,"DynamicLineBar":58,"EventRiver1":102,"Events":103,"Force4":104,"Funnel2":105,"Gauge4":106,"K":108,"Lasagna":109,"Line4":110,"Loading":111,"Map11":113,"Mix2Safe":115,"Prelude":122,"Radar3":123,"Scatter3":124,"Utils":127}],113:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var map11 = function (_95) {
    return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
};
module.exports = {
    map11: map11
};

},{"Control.Monad.Eff":12,"Prelude":122}],114:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var abs = Math.abs;;
var acos = Math.acos;;
var asin = Math.asin;;
var atan = Math.atan;;
function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
var ceil = Math.ceil;;
var cos = Math.cos;;
var exp = Math.exp;;
var floor = Math.floor;;
var log = Math.log;;
function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
function pow(n){  return function(p) {    return Math.pow(n, p);  }};
var round = Math.round;;
var sin = Math.sin;;
var sqrt = Math.sqrt;;
var tan = Math.tan;;
var e       = Math.E;;
var ln2     = Math.LN2;;
var ln10    = Math.LN10;;
var log2e   = Math.LOG2E;;
var log10e  = Math.LOG10E;;
var pi      = Math.PI;;
var sqrt1_2 = Math.SQRT1_2;;
var sqrt2   = Math.SQRT2;;
module.exports = {
    abs: abs, 
    acos: acos, 
    asin: asin, 
    atan: atan, 
    atan2: atan2, 
    ceil: ceil, 
    cos: cos, 
    e: e, 
    exp: exp, 
    floor: floor, 
    ln10: ln10, 
    ln2: ln2, 
    log: log, 
    log10e: log10e, 
    log2e: log2e, 
    max: max, 
    min: min, 
    pi: pi, 
    pow: pow, 
    round: round, 
    sin: sin, 
    sqrt: sqrt, 
    sqrt1_2: sqrt1_2, 
    sqrt2: sqrt2, 
    tan: tan
};

},{"Prelude":122}],115:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Item_Data = require("ECharts.Item.Data");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Data_Maybe = require("Data.Maybe");
var ECharts_Coords = require("ECharts.Coords");
var Data_Array = require("Data.Array");
var ECharts_Type = require("ECharts.Type");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Tuple = require("Data.Tuple");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = ECharts_Options.Option.create((function () {
    var _49 = {};
    for (var _50 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_50)) {
            _49[_50] = ECharts_Options.optionDefault[_50];
        };
    };
    _49.tooltip = Data_Maybe.Just.create((function () {
        var _7 = {};
        for (var _8 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_8)) {
                _7[_8] = ECharts_Tooltip.tooltipDefault[_8];
            };
        };
        _7.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
        return _7;
    })());
    _49.toolbox = Data_Maybe.Just.create((function () {
        var _9 = {};
        for (var _10 in ECharts_Toolbox.toolboxDefault) {
            if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_10)) {
                _9[_10] = ECharts_Toolbox.toolboxDefault[_10];
            };
        };
        _9.show = new Data_Maybe.Just(true);
        _9.y = new Data_Maybe.Just(ECharts_Coords.YBottom.value);
        _9.feature = Data_Maybe.Just.create({
            mark: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                lineStyle: Data_Maybe.Nothing.value
            }), 
            dataView: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                readOnly: new Data_Maybe.Just(true), 
                lang: Data_Maybe.Nothing.value
            }), 
            magicType: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                option: Data_Maybe.Nothing.value, 
                type: Data_Maybe.Just.create([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value, ECharts_Toolbox.MagicStack.value, ECharts_Toolbox.MagicTiled.value ])
            }), 
            restore: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value
            }), 
            saveAsImage: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                type: Data_Maybe.Nothing.value, 
                lang: Data_Maybe.Nothing.value
            }), 
            dataZoom: Data_Maybe.Nothing.value
        });
        return _9;
    })());
    _49.calculable = new Data_Maybe.Just(true);
    _49.legend = Data_Maybe.Just.create(ECharts_Legend.Legend.create((function () {
        var _11 = {};
        for (var _12 in ECharts_Legend.legendDefault) {
            if (ECharts_Legend.legendDefault.hasOwnProperty(_12)) {
                _11[_12] = ECharts_Legend.legendDefault[_12];
            };
        };
        _11.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.LegendString.create)([ "\u76f4\u63a5\u8bbf\u95ee", "\u90ae\u4ef6\u8425\u9500", "\u8054\u76df\u5e7f\u544a", "\u89c6\u9891\u5e7f\u544a", "\u641c\u7d22\u5f15\u64ce", "\u767e\u5ea6", "\u8c37\u6b4c", "\u5fc5\u5e94", "\u5176\u4ed6" ]));
        return _11;
    })()));
    _49.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _15 = {};
        for (var _16 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_16)) {
                _15[_16] = ECharts_Axis.axisDefault[_16];
            };
        };
        _15.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
        _15.splitLine = Data_Maybe.Just.create(ECharts_Axis.AxisSplitLine.create((function () {
            var _13 = {};
            for (var _14 in ECharts_Axis.axisSplitLineDefault) {
                if (ECharts_Axis.axisSplitLineDefault.hasOwnProperty(_14)) {
                    _13[_14] = ECharts_Axis.axisSplitLineDefault[_14];
                };
            };
            _13.show = new Data_Maybe.Just(false);
            return _13;
        })()));
        _15.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d", "\u5468\u65e5" ]));
        return _15;
    })())));
    _49.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _17 = {};
        for (var _18 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_18)) {
                _17[_18] = ECharts_Axis.axisDefault[_18];
            };
        };
        _17.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
        _17.position = new Data_Maybe.Just(ECharts_Axis.RightAxis.value);
        return _17;
    })())));
    _49.series = Data_Maybe.Just.create([ ECharts_Series.Series.create((function () {
        var _19 = {};
        for (var _20 in ECharts_Series.seriesDefault(ECharts_Type.Bar.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Bar.value)).hasOwnProperty(_20)) {
                _19[_20] = (ECharts_Series.seriesDefault(ECharts_Type.Bar.value))[_20];
            };
        };
        _19.name = new Data_Maybe.Just("\u76f4\u63a5\u8bbf\u95ee");
        _19.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create))([ 320, 332, 301, 334, 390, 330, 320 ]));
        return _19;
    })()), ECharts_Series.Series.create((function () {
        var _23 = {};
        for (var _24 in ECharts_Series.seriesDefault(ECharts_Type.Bar.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Bar.value)).hasOwnProperty(_24)) {
                _23[_24] = (ECharts_Series.seriesDefault(ECharts_Type.Bar.value))[_24];
            };
        };
        _23.name = new Data_Maybe.Just("\u90ae\u4ef6\u8425\u9500");
        _23.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _21 = {};
            for (var _22 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_22)) {
                    _21[_22] = ECharts_Tooltip.tooltipDefault[_22];
                };
            };
            _21.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _21;
        })()));
        _23.stack = new Data_Maybe.Just("\u5e7f\u544a");
        _23.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create))([ 120, 132, 101, 134, 90, 230, 210 ]));
        return _23;
    })()), ECharts_Series.Series.create((function () {
        var _27 = {};
        for (var _28 in ECharts_Series.seriesDefault(ECharts_Type.Bar.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Bar.value)).hasOwnProperty(_28)) {
                _27[_28] = (ECharts_Series.seriesDefault(ECharts_Type.Bar.value))[_28];
            };
        };
        _27.name = new Data_Maybe.Just("\u8054\u76df\u5e7f\u544a");
        _27.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _25 = {};
            for (var _26 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_26)) {
                    _25[_26] = ECharts_Tooltip.tooltipDefault[_26];
                };
            };
            _25.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _25;
        })()));
        _27.stack = new Data_Maybe.Just("\u5e7f\u544a");
        _27.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create))([ 220, 182, 191, 234, 290, 330, 310 ]));
        return _27;
    })()), ECharts_Series.Series.create((function () {
        var _31 = {};
        for (var _32 in ECharts_Series.seriesDefault(ECharts_Type.Bar.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Bar.value)).hasOwnProperty(_32)) {
                _31[_32] = (ECharts_Series.seriesDefault(ECharts_Type.Bar.value))[_32];
            };
        };
        _31.name = new Data_Maybe.Just("\u89c6\u9891\u5e7f\u544a");
        _31.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _29 = {};
            for (var _30 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_30)) {
                    _29[_30] = ECharts_Tooltip.tooltipDefault[_30];
                };
            };
            _29.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _29;
        })()));
        _31.stack = new Data_Maybe.Just("\u5e7f\u544a");
        _31.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create))([ 150, 232, 201, 154, 190, 330, 410 ]));
        return _31;
    })()), ECharts_Series.Series.create((function () {
        var _33 = {};
        for (var _34 in ECharts_Series.seriesDefault(ECharts_Type.Line.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Line.value)).hasOwnProperty(_34)) {
                _33[_34] = (ECharts_Series.seriesDefault(ECharts_Type.Line.value))[_34];
            };
        };
        _33.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create))([ 862, 1018, 964, 1026, 1679, 1600, 1570 ]));
        return _33;
    })()), ECharts_Series.Series.create((function () {
        var _47 = {};
        for (var _48 in ECharts_Series.seriesDefault(ECharts_Type.Pie.value)) {
            if ((ECharts_Series.seriesDefault(ECharts_Type.Pie.value)).hasOwnProperty(_48)) {
                _47[_48] = (ECharts_Series.seriesDefault(ECharts_Type.Pie.value))[_48];
            };
        };
        _47.name = new Data_Maybe.Just("\u641c\u7d22\u5f15\u64ce\u7ec6\u5206");
        _47.center = new Data_Maybe.Just(new Data_Tuple.Tuple(160, 130));
        _47.radius = Data_Maybe.Just.create(new ECharts_Common.Rs({
            inner: 0, 
            outer: 50
        }));
        _47.itemStyle = Data_Maybe.Just.create({
            emphasis: Data_Maybe.Nothing.value, 
            normal: Data_Maybe.Just.create(ECharts_Style_Item.IStyle.create((function () {
                var _35 = {};
                for (var _36 in ECharts_Style_Item.istyleDefault) {
                    if (ECharts_Style_Item.istyleDefault.hasOwnProperty(_36)) {
                        _35[_36] = ECharts_Style_Item.istyleDefault[_36];
                    };
                };
                _35.labelLine = Data_Maybe.Just.create({
                    show: new Data_Maybe.Just(true), 
                    length: new Data_Maybe.Just(20), 
                    lineStyle: Data_Maybe.Nothing.value
                });
                return _35;
            })()))
        });
        _47.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _37 = {};
            for (var _38 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_38)) {
                    _37[_38] = ECharts_Tooltip.tooltipDefault[_38];
                };
            };
            _37.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            _37.formatter = Data_Maybe.Just.create(new ECharts_Formatter.Template("{a} <br/>{b} : {c} ({d}%)"));
            return _37;
        })()));
        _47.data = Data_Maybe.Just.create([ ECharts_Item_Data.Dat.create((function () {
            var _39 = {};
            for (var _40 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047))).hasOwnProperty(_40)) {
                    _39[_40] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047)))[_40];
                };
            };
            _39.name = new Data_Maybe.Just("\u767e\u5ea6");
            return _39;
        })()), ECharts_Item_Data.Dat.create((function () {
            var _41 = {};
            for (var _42 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264))).hasOwnProperty(_42)) {
                    _41[_42] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264)))[_42];
                };
            };
            _41.name = new Data_Maybe.Just("\u8c37\u6b4c");
            return _41;
        })()), ECharts_Item_Data.Dat.create((function () {
            var _43 = {};
            for (var _44 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145))).hasOwnProperty(_44)) {
                    _43[_44] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145)))[_44];
                };
            };
            _43.name = new Data_Maybe.Just("\u5fc5\u5e94");
            return _43;
        })()), ECharts_Item_Data.Dat.create((function () {
            var _45 = {};
            for (var _46 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102))).hasOwnProperty(_46)) {
                    _45[_46] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102)))[_46];
                };
            };
            _45.name = new Data_Maybe.Just("\u5176\u4ed6");
            return _45;
        })()) ]);
        return _47;
    })()) ]);
    return _49;
})());
var mix2safe = function (id) {
    return function __do() {
        var _1 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        ECharts_Options.setOption(options)(true)(_1)();
        return Prelude.unit;
    };
};
module.exports = {
    mix2safe: mix2safe, 
    options: options
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"Data.Tuple":56,"ECharts.Axis":60,"ECharts.Chart":61,"ECharts.Common":63,"ECharts.Coords":65,"ECharts.Formatter":69,"ECharts.Item.Data":72,"ECharts.Item.Value":73,"ECharts.Legend":74,"ECharts.Options":81,"ECharts.Series":86,"ECharts.Style.Item":90,"ECharts.Toolbox":98,"ECharts.Tooltip":99,"ECharts.Type":100,"Prelude":122,"Utils":127}],116:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Profunctor = require("Data.Profunctor");
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_Const = require("Data.Const");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Any = require("Data.Monoid.Any");
var Data_Monoid_All = require("Data.Monoid.All");
var Data_Monoid_First = require("Data.Monoid.First");
var Data_Maybe = require("Data.Maybe");
var foldOf = function (asa) {
    return function (s) {
        return Data_Const.getConst(asa(Data_Const.Const.create)(s));
    };
};
var foldMapOf = function (__dict_Profunctor_0) {
    return function (prsa) {
        return function (par) {
            return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(prsa(Data_Profunctor.rmap(__dict_Profunctor_0)(Data_Const.Const.create)(par)));
        };
    };
};
var foldlOf = function (pErsa) {
    return function (par2r) {
        return function (r) {
            return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.lmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.runDual)(Prelude.flip(Data_Monoid_Endo.runEndo)(r)))(foldMapOf(Data_Profunctor.profunctorArr)(pErsa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.Dual.create)(Data_Monoid_Endo.Endo.create))(Prelude.flip(par2r))));
        };
    };
};
var foldrOf = function (__dict_Profunctor_1) {
    return function (pErsa) {
        return function (par2r) {
            return function (r) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Prelude.flip(Data_Monoid_Endo.runEndo)(r))(foldMapOf(__dict_Profunctor_1)(pErsa)(Data_Profunctor.rmap(__dict_Profunctor_1)(Data_Monoid_Endo.Endo.create)(par2r)));
            };
        };
    };
};
var toListOf = function (easa) {
    return foldrOf(Data_Profunctor.profunctorArr)(easa)(Prelude[":"])([  ]);
};
var $up$dot$dot = Prelude.flip(toListOf);
var has = function (asa) {
    return function (s) {
        return Data_Monoid_Any.runAny(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](true))(s));
    };
};
var hasn$primet = function (asa) {
    return function (s) {
        return Data_Monoid_All.runAll(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](false))(s));
    };
};
var $up$qmark = function (s) {
    return function (fasa) {
        return Data_Monoid_First.runFirst(foldMapOf(Data_Profunctor.profunctorArr)(fasa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_First.First.create)(Data_Maybe.Just.create))(s));
    };
};
var filtered = function (__dict_Applicative_2) {
    return function (__dict_Choice_3) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(__dict_Choice_3["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                return p(x) ? new Data_Either.Right(x) : new Data_Either.Left(x);
            })(Data_Either.either(Prelude.pure(__dict_Applicative_2))(Prelude.id(Prelude.categoryArr))))(Data_Profunctor_Choice.right(__dict_Choice_3));
        };
    };
};
module.exports = {
    "^..": $up$dot$dot, 
    "^?": $up$qmark, 
    filtered: filtered, 
    foldMapOf: foldMapOf, 
    foldOf: foldOf, 
    foldlOf: foldlOf, 
    foldrOf: foldrOf, 
    has: has, 
    "hasn't": hasn$primet, 
    toListOf: toListOf
};

},{"Data.Const":29,"Data.Either":32,"Data.Maybe":39,"Data.Monoid.All":40,"Data.Monoid.Any":41,"Data.Monoid.Dual":42,"Data.Monoid.Endo":43,"Data.Monoid.First":44,"Data.Profunctor":47,"Data.Profunctor.Choice":46,"Prelude":122}],117:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function IndexKey() {

};
function IndexValue() {

};
var indexValueStrMap = new IndexValue();
var indexValueSet = new IndexValue();
var indexValueMaybe = new IndexValue();
var indexValueMap = new IndexValue();
var indexValueIdentity = new IndexValue();
var indexValueArray = new IndexValue();
var indexValueArr = new IndexValue();
var indexKeyStrMap = new IndexKey();
var indexKeySet = new IndexKey();
var indexKeyMaybe = new IndexKey();
var indexKeyMap = new IndexKey();
var indexKeyIdentity = new IndexKey();
var indexKeyArray = new IndexKey();
var indexKeyArr = new IndexKey();
module.exports = {
    IndexKey: IndexKey, 
    IndexValue: IndexValue, 
    indexKeyArr: indexKeyArr, 
    indexKeyArray: indexKeyArray, 
    indexKeyIdentity: indexKeyIdentity, 
    indexKeyMap: indexKeyMap, 
    indexKeyMaybe: indexKeyMaybe, 
    indexKeySet: indexKeySet, 
    indexKeyStrMap: indexKeyStrMap, 
    indexValueArr: indexValueArr, 
    indexValueArray: indexValueArray, 
    indexValueIdentity: indexValueIdentity, 
    indexValueMap: indexValueMap, 
    indexValueMaybe: indexValueMaybe, 
    indexValueSet: indexValueSet, 
    indexValueStrMap: indexValueStrMap
};

},{"Prelude":122}],118:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Set = require("Data.Set");
var Data_Map = require("Data.Map");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap = require("Data.StrMap");
var Optic_Index_Class = require("Optic.Index.Class");
var Data_Identity = require("Data.Identity");
function Index(__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
    this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
    this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
    this.ix = ix;
};
var ix = function (dict) {
    return dict.ix;
};
var indexStrMap = new Index(function () {
    return Optic_Index_Class.indexKeyStrMap;
}, function () {
    return Optic_Index_Class.indexValueStrMap;
}, function (str) {
    return function (__dict_Applicative_0) {
        return function (v2fv) {
            return function (sm) {
                return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_0)(sm))(function (v) {
                    return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                        return Data_StrMap.insert(str)(v$prime)(sm);
                    })(v2fv(v));
                })(Data_StrMap.lookup(str)(sm));
            };
        };
    };
});
var indexSet = function (__dict_Ord_1) {
    return new Index(function () {
        return Optic_Index_Class.indexKeySet;
    }, function () {
        return Optic_Index_Class.indexValueSet;
    }, function (a) {
        return function (__dict_Applicative_2) {
            return function (u2fu) {
                return function (s) {
                    return Data_Set.member(__dict_Ord_1)(a)(s) ? Prelude.pure(__dict_Applicative_2)(Data_Set.insert(__dict_Ord_1)(a)(s)) : Prelude.pure(__dict_Applicative_2)(s);
                };
            };
        };
    });
};
var indexMaybe = new Index(function () {
    return Optic_Index_Class.indexKeyMaybe;
}, function () {
    return Optic_Index_Class.indexValueMaybe;
}, function (_728) {
    return function (__dict_Applicative_3) {
        return function (_729) {
            return function (_730) {
                if (_730 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
                };
                if (_730 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_729(_730.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
});
var indexMap = function (__dict_Ord_4) {
    return new Index(function () {
        return Optic_Index_Class.indexKeyMap;
    }, function () {
        return Optic_Index_Class.indexValueMap;
    }, function (k) {
        return function (__dict_Applicative_5) {
            return function (v2fv) {
                return function (m) {
                    return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_5)(m))(function (v) {
                        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                            return Data_Map.insert(__dict_Ord_4)(k)(v$prime)(m);
                        })(v2fv(v));
                    })(Data_Map.lookup(__dict_Ord_4)(k)(m));
                };
            };
        };
    });
};
var indexIdentity = new Index(function () {
    return Optic_Index_Class.indexKeyIdentity;
}, function () {
    return Optic_Index_Class.indexValueIdentity;
}, function (_731) {
    return function (__dict_Applicative_6) {
        return function (_732) {
            return function (_733) {
                return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Identity.Identity.create)(_732(_733));
            };
        };
    };
});
var indexArray = new Index(function () {
    return Optic_Index_Class.indexKeyArray;
}, function () {
    return Optic_Index_Class.indexValueArray;
}, function (_734) {
    return function (__dict_Applicative_7) {
        return function (_735) {
            return function (_736) {
                if (_734 < 0) {
                    return Prelude.pure(__dict_Applicative_7)(_736);
                };
                if (_736.length === 0) {
                    return Prelude.pure(__dict_Applicative_7)([  ]);
                };
                if (_734 === 0 && _736.length >= 1) {
                    var _2519 = _736.slice(1);
                    return Prelude["<#>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(_735(_736[0]))(function (a$prime) {
                        return Prelude[":"](a$prime)(_2519);
                    });
                };
                if (_736.length >= 1) {
                    var _2521 = _736.slice(1);
                    return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_736[0]))(ix(indexArray)(_734 - 1)(__dict_Applicative_7)(_735)(_2521));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
});
var indexArr = function (__dict_Eq_8) {
    return new Index(function () {
        return Optic_Index_Class.indexKeyArr;
    }, function () {
        return Optic_Index_Class.indexValueArr;
    }, function (e) {
        return function (__dict_Applicative_9) {
            return function (a2fa) {
                return function (e2a) {
                    return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                        return function (e$prime) {
                            return Prelude["=="](__dict_Eq_8)(e)(e$prime) ? a : e2a(e$prime);
                        };
                    })(a2fa(e2a(e)));
                };
            };
        };
    });
};
module.exports = {
    Index: Index, 
    indexArr: indexArr, 
    indexArray: indexArray, 
    indexIdentity: indexIdentity, 
    indexMap: indexMap, 
    indexMaybe: indexMaybe, 
    indexSet: indexSet, 
    indexStrMap: indexStrMap, 
    ix: ix
};

},{"Data.Identity":36,"Data.Map":37,"Data.Maybe":39,"Data.Set":48,"Data.StrMap":50,"Optic.Index.Class":117,"Prelude":122}],119:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor = require("Data.Profunctor");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
function Market(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
Market.create = function (value0) {
    return function (value1) {
        return new Market(value0, value1);
    };
};
var profunctorMarket = new Data_Profunctor.Profunctor(function (_171) {
    return function (_172) {
        return function (_173) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_173.value0)(_172), Prelude[">>>"](Prelude.semigroupoidArr)(_171)(Prelude[">>>"](Prelude.semigroupoidArr)(_173.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_172)(Data_Either.Left.create))(Data_Either.Right.create))));
        };
    };
});
var functorMarket = new Prelude.Functor(function (_169) {
    return function (_170) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_170.value0)(_169), Prelude[">>>"](Prelude.semigroupoidArr)(_170.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_169)(Data_Either.Left.create))(Data_Either.Right.create)));
    };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
    return profunctorMarket;
}, function (_174) {
    return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_174.value0)(Data_Either.Left.create), function (thing) {
        if (thing instanceof Data_Either.Left) {
            return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create)(_174.value1(thing.value0));
        };
        if (thing instanceof Data_Either.Right) {
            return Data_Either.Left.create(new Data_Either.Right(thing.value0));
        };
        throw new Error("Failed pattern match");
    });
}, function (_175) {
    return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_175.value0)(Data_Either.Right.create), function (thing) {
        if (thing instanceof Data_Either.Left) {
            return Data_Either.Left.create(new Data_Either.Left(thing.value0));
        };
        if (thing instanceof Data_Either.Right) {
            return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Right.create)(_175.value1(thing.value0));
        };
        throw new Error("Failed pattern match");
    });
});
module.exports = {
    Market: Market, 
    choiceMarket: choiceMarket, 
    functorMarket: functorMarket, 
    profunctorMarket: profunctorMarket
};

},{"Data.Either":32,"Data.Profunctor":47,"Data.Profunctor.Choice":46,"Prelude":122}],120:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor = require("Data.Profunctor");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_Maybe = require("Data.Maybe");
var Data_Identity = require("Data.Identity");
var Optic_Internal_Prism = require("Optic.Internal.Prism");
var withPrism = function (stab) {
    return function (f) {
        var _2535 = stab(new Optic_Internal_Prism.Market(Data_Identity.Identity.create, Data_Either.Right.create));
        return f(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_2535.value0))(Prelude[">>>"](Prelude.semigroupoidArr)(_2535.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Data_Either.Left.create))(Data_Either.Right.create)));
    };
};
var prism = function (__dict_Applicative_0) {
    return function (__dict_Choice_1) {
        return function (b2t) {
            return function (s2Eta) {
                return function (pafb) {
                    return Data_Profunctor.dimap(__dict_Choice_1["__superclass_Data.Profunctor.Profunctor_0"]())(s2Eta)(Data_Either.either(Prelude.pure(__dict_Applicative_0))(Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(b2t)))(Data_Profunctor_Choice.right(__dict_Choice_1)(pafb));
                };
            };
        };
    };
};
var prism$prime = function (b2s) {
    return function (s2Ma) {
        return function (__dict_Applicative_2) {
            return function (__dict_Choice_3) {
                return prism(__dict_Applicative_2)(__dict_Choice_3)(b2s)(function (s) {
                    return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(s2Ma(s));
                });
            };
        };
    };
};
var nearly = function (x) {
    return function (p) {
        return function (__dict_Applicative_4) {
            return function (__dict_Choice_5) {
                var guard = function (_744) {
                    if (_744) {
                        return new Data_Maybe.Just(Prelude.unit);
                    };
                    if (!_744) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return prism$prime(Prelude["const"](x))(Prelude["<<<"](Prelude.semigroupoidArr)(guard)(p))(__dict_Applicative_4)(__dict_Choice_5);
            };
        };
    };
};
var only = function (__dict_Eq_6) {
    return function (x) {
        return function (__dict_Applicative_7) {
            return function (__dict_Choice_8) {
                return nearly(x)(Prelude["=="](__dict_Eq_6)(x))(__dict_Applicative_7)(__dict_Choice_8);
            };
        };
    };
};
var matching = function (stab) {
    return withPrism(stab)(function (_) {
        return function (s) {
            return s;
        };
    });
};
var is = function (stab) {
    return function (s) {
        return Data_Either.either(Prelude["const"](false))(Prelude["const"](true))(matching(stab)(s));
    };
};
var isn$primet = function (stab) {
    return function (s) {
        return !is(stab)(s);
    };
};
var clonePrism = function (__dict_Applicative_9) {
    return function (__dict_Choice_10) {
        return function (stab) {
            return withPrism(stab)(prism(__dict_Applicative_9)(__dict_Choice_10));
        };
    };
};
module.exports = {
    clonePrism: clonePrism, 
    is: is, 
    "isn't": isn$primet, 
    matching: matching, 
    nearly: nearly, 
    only: only, 
    prism: prism, 
    "prism'": prism$prime, 
    withPrism: withPrism
};

},{"Data.Either":32,"Data.Identity":36,"Data.Maybe":39,"Data.Profunctor":47,"Data.Profunctor.Choice":46,"Optic.Internal.Prism":119,"Prelude":122}],121:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
module.exports = {
    unsafeIndex: unsafeIndex
};

},{"Prelude":122}],122:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Unit = {
    create: function (value) {
        return value;
    }
};
function LT() {

};
LT.value = new LT();
function GT() {

};
GT.value = new GT();
function EQ() {

};
EQ.value = new EQ();
function Semigroupoid($less$less$less) {
    this["<<<"] = $less$less$less;
};
function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
function Show(show) {
    this.show = show;
};
function Functor($less$dollar$greater) {
    this["<$>"] = $less$dollar$greater;
};
function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
    this["<*>"] = $less$times$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
function Applicative(__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
    this[">>="] = $greater$greater$eq;
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
};
function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
function Num($percent, $times, $plus, $minus, $div, negate) {
    this["%"] = $percent;
    this["*"] = $times;
    this["+"] = $plus;
    this["-"] = $minus;
    this["/"] = $div;
    this.negate = negate;
};
function Eq($div$eq, $eq$eq) {
    this["/="] = $div$eq;
    this["=="] = $eq$eq;
};
function Ord(__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
    this[".&."] = $dot$amp$dot;
    this[".^."] = $dot$up$dot;
    this[".|."] = $dot$bar$dot;
    this.complement = complement;
    this.shl = shl;
    this.shr = shr;
    this.zshr = zshr;
};
function BoolLike($amp$amp, not, $bar$bar) {
    this["&&"] = $amp$amp;
    this.not = not;
    this["||"] = $bar$bar;
};
function Semigroup($less$greater) {
    this["<>"] = $less$greater;
};
function cons(e) {  return function(l) {    return [e].concat(l);  };};
function showStringImpl(s) {  return JSON.stringify(s);};
function showNumberImpl(n) {  return n.toString();};
function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
function numNegate(n) {  return -n;};
function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
function numComplement(n) {  return ~n;};
function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
function boolNot(b) {  return !b;};
function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
var $bar$bar = function (dict) {
    return dict["||"];
};
var $greater$greater$eq = function (dict) {
    return dict[">>="];
};
var $eq$eq = function (dict) {
    return dict["=="];
};
var $less$greater = function (dict) {
    return dict["<>"];
};
var $less$less$less = function (dict) {
    return dict["<<<"];
};
var $greater$greater$greater = function (__dict_Semigroupoid_0) {
    return function (f) {
        return function (g) {
            return $less$less$less(__dict_Semigroupoid_0)(g)(f);
        };
    };
};
var $less$times$greater = function (dict) {
    return dict["<*>"];
};
var $less$dollar$greater = function (dict) {
    return dict["<$>"];
};
var $less$hash$greater = function (__dict_Functor_1) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_1)(f)(fa);
        };
    };
};
var $colon = cons;
var $div$eq = function (dict) {
    return dict["/="];
};
var $div = function (dict) {
    return dict["/"];
};
var $dot$bar$dot = function (dict) {
    return dict[".|."];
};
var $dot$up$dot = function (dict) {
    return dict[".^."];
};
var $dot$amp$dot = function (dict) {
    return dict[".&."];
};
var $minus = function (dict) {
    return dict["-"];
};
var $plus$plus = function (__dict_Semigroup_2) {
    return $less$greater(__dict_Semigroup_2);
};
var $plus = function (dict) {
    return dict["+"];
};
var $times = function (dict) {
    return dict["*"];
};
var $amp$amp = function (dict) {
    return dict["&&"];
};
var $percent = function (dict) {
    return dict["%"];
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zshr = function (dict) {
    return dict.zshr;
};
var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var shr = function (dict) {
    return dict.shr;
};
var showUnit = new Show(function (_107) {
    return "Unit {}";
});
var showString = new Show(showStringImpl);
var showOrdering = new Show(function (_115) {
    if (_115 instanceof LT) {
        return "LT";
    };
    if (_115 instanceof GT) {
        return "GT";
    };
    if (_115 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match");
});
var showNumber = new Show(showNumberImpl);
var showBoolean = new Show(function (_108) {
    if (_108) {
        return "true";
    };
    if (!_108) {
        return "false";
    };
    throw new Error("Failed pattern match");
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_3) {
    return new Show(showArrayImpl(show(__dict_Show_3)));
};
var shl = function (dict) {
    return dict.shl;
};
var semigroupoidArr = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_122) {
    return function (_123) {
        return {};
    };
});
var semigroupString = new Semigroup(concatString);
var semigroupArr = function (__dict_Semigroup_4) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
            };
        };
    });
};
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Monad_5) {
    return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
};
var otherwise = true;
var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
var not = function (dict) {
    return dict.not;
};
var negate = function (dict) {
    return dict.negate;
};
var liftM1 = function (__dict_Monad_6) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_6)(f(_0));
            });
        };
    };
};
var liftA1 = function (__dict_Applicative_7) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArr = new Functor($less$less$less(semigroupoidArr));
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_111) {
    return function (_112) {
        return false;
    };
}, function (_109) {
    return function (_110) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_116) {
    return function (_117) {
        return EQ.value;
    };
});
var eqString = new Eq(refIneq, refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqNumber = new Eq(refIneq, refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqBoolean = new Eq(refIneq, refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, function (_118) {
    return function (_119) {
        if (!_118 && !_119) {
            return EQ.value;
        };
        if (!_118 && _119) {
            return LT.value;
        };
        if (_118 && _119) {
            return EQ.value;
        };
        if (_118 && !_119) {
            return GT.value;
        };
        throw new Error("Failed pattern match");
    };
});
var $$const = function (_103) {
    return function (_104) {
        return _103;
    };
};
var $$void = function (__dict_Functor_9) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
    };
};
var complement = function (dict) {
    return dict.complement;
};
var compare = function (dict) {
    return dict.compare;
};
var $less = function (__dict_Ord_11) {
    return function (a1) {
        return function (a2) {
            var _873 = compare(__dict_Ord_11)(a1)(a2);
            if (_873 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_12) {
    return function (a1) {
        return function (a2) {
            var _874 = compare(__dict_Ord_12)(a1)(a2);
            if (_874 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_13) {
    return function (a1) {
        return function (a2) {
            var _875 = compare(__dict_Ord_13)(a1)(a2);
            if (_875 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_14) {
    return function (a1) {
        return function (a2) {
            var _876 = compare(__dict_Ord_14)(a1)(a2);
            if (_876 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryArr = new Category(function () {
    return semigroupoidArr;
}, function (x) {
    return x;
});
var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
var eqArray = function (__dict_Eq_8) {
    return new Eq(function (xs) {
        return function (ys) {
            return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
        };
    }, function (xs) {
        return function (ys) {
            return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
        };
    });
};
var ordArray = function (__dict_Ord_10) {
    return new Ord(function () {
        return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
    }, function (_120) {
        return function (_121) {
            if (_120.length === 0 && _121.length === 0) {
                return EQ.value;
            };
            if (_120.length === 0) {
                return LT.value;
            };
            if (_121.length === 0) {
                return GT.value;
            };
            if (_120.length >= 1) {
                var _883 = _120.slice(1);
                if (_121.length >= 1) {
                    var _881 = _121.slice(1);
                    var _879 = compare(__dict_Ord_10)(_120[0])(_121[0]);
                    if (_879 instanceof EQ) {
                        return compare(ordArray(__dict_Ord_10))(_883)(_881);
                    };
                    return _879;
                };
            };
            throw new Error("Failed pattern match");
        };
    });
};
var eqOrdering = new Eq(function (x) {
    return function (y) {
        return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
    };
}, function (_113) {
    return function (_114) {
        if (_113 instanceof LT && _114 instanceof LT) {
            return true;
        };
        if (_113 instanceof GT && _114 instanceof GT) {
            return true;
        };
        if (_113 instanceof EQ && _114 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
var asTypeOf = function (_105) {
    return function (_106) {
        return _105;
    };
};
var applyArr = new Apply(function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
}, function () {
    return functorArr;
});
var bindArr = new Bind(function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
}, function () {
    return applyArr;
});
var applicativeArr = new Applicative(function () {
    return applyArr;
}, $$const);
var monadArr = new Monad(function () {
    return applicativeArr;
}, function () {
    return bindArr;
});
var ap = function (__dict_Monad_15) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_15)(_2(_1));
                });
            });
        };
    };
};
module.exports = {
    "#": $hash, 
    "$": $dollar, 
    "%": $percent, 
    "&&": $amp$amp, 
    "*": $times, 
    "+": $plus, 
    "++": $plus$plus, 
    "-": $minus, 
    ".&.": $dot$amp$dot, 
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    "/": $div, 
    "/=": $div$eq, 
    ":": $colon, 
    "<": $less, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    "<*>": $less$times$greater, 
    "<<<": $less$less$less, 
    "<=": $less$eq, 
    "<>": $less$greater, 
    "==": $eq$eq, 
    ">": $greater, 
    ">=": $greater$eq, 
    ">>=": $greater$greater$eq, 
    ">>>": $greater$greater$greater, 
    Applicative: Applicative, 
    Apply: Apply, 
    Bind: Bind, 
    Bits: Bits, 
    BoolLike: BoolLike, 
    Category: Category, 
    EQ: EQ, 
    Eq: Eq, 
    Functor: Functor, 
    GT: GT, 
    LT: LT, 
    Monad: Monad, 
    Num: Num, 
    Ord: Ord, 
    Semigroup: Semigroup, 
    Semigroupoid: Semigroupoid, 
    Show: Show, 
    Unit: Unit, 
    ap: ap, 
    applicativeArr: applicativeArr, 
    applyArr: applyArr, 
    asTypeOf: asTypeOf, 
    bindArr: bindArr, 
    bitsNumber: bitsNumber, 
    boolLikeBoolean: boolLikeBoolean, 
    categoryArr: categoryArr, 
    compare: compare, 
    complement: complement, 
    cons: cons, 
    "const": $$const, 
    eqArray: eqArray, 
    eqBoolean: eqBoolean, 
    eqNumber: eqNumber, 
    eqOrdering: eqOrdering, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    flip: flip, 
    functorArr: functorArr, 
    id: id, 
    liftA1: liftA1, 
    liftM1: liftM1, 
    monadArr: monadArr, 
    negate: negate, 
    not: not, 
    numNumber: numNumber, 
    ordArray: ordArray, 
    ordBoolean: ordBoolean, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordUnit: ordUnit, 
    otherwise: otherwise, 
    pure: pure, 
    refEq: refEq, 
    refIneq: refIneq, 
    "return": $$return, 
    semigroupArr: semigroupArr, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupoidArr: semigroupoidArr, 
    shl: shl, 
    show: show, 
    showArray: showArray, 
    showBoolean: showBoolean, 
    showNumber: showNumber, 
    showOrdering: showOrdering, 
    showString: showString, 
    showUnit: showUnit, 
    shr: shr, 
    unit: unit, 
    "void": $$void, 
    zshr: zshr, 
    "||": $bar$bar
};

},{}],123:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var options = {
    title: {
        text: "title", 
        subtext: "subtitle"
    }, 
    tooltip: {
        trigger: "axis"
    }, 
    legend: {
        x: "center", 
        data: [ "\u67d0\u8f6f\u4ef6", "\u67d0\u4e3b\u98df\u624b\u673a", "\u67d0\u6c34\u679c\u624b\u673a", "\u964d\u6c34\u91cf", "\u84b8\u53d1\u91cf" ]
    }, 
    toolbox: {
        show: true, 
        feature: {
            mark: {
                show: true
            }, 
            dataView: {
                show: true, 
                readOnly: false
            }, 
            restore: {
                show: true
            }, 
            saveAsImage: {
                show: true
            }
        }
    }, 
    calculable: true, 
    polar: Data_Tuple_Nested["/\\"]({
        indicator: [ {
            text: "\u54c1\u724c", 
            max: 100
        }, {
            text: "\u5185\u5bb9", 
            max: 100
        }, {
            text: "\u53ef\u7528\u6027", 
            max: 100
        }, {
            text: "\u529f\u80fd", 
            max: 100
        } ], 
        center: Data_Tuple_Nested["/\\"]("25%")(200), 
        radius: 80
    })(Data_Tuple_Nested["/\\"]({
        indicator: [ {
            text: "\u5916\u89c2", 
            max: 100
        }, {
            text: "\u62cd\u7167", 
            max: 100
        }, {
            text: "\u7cfb\u7edf", 
            max: 100
        }, {
            text: "\u6027\u80fd", 
            max: 100
        }, {
            text: "\u5c4f\u5e55", 
            max: 100
        } ], 
        radius: 80
    })({
        indicator: Prelude["<$>"](Data_Array.functorArray)(function (i) {
            return {
                text: Prelude.show(Prelude.showNumber)(i) + "\u6708", 
                max: 100
            };
        })(Data_Array[".."](1)(12)), 
        center: Data_Tuple_Nested["/\\"]("75%")(200), 
        radius: 80
    })), 
    series: Data_Tuple_Nested["/\\"]({
        type: "radar", 
        tooltip: {
            trigger: "item"
        }, 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "default"
                }
            }
        }, 
        data: [ {
            value: [ 60, 73, 85, 40 ], 
            name: "\u67d0\u8f6f\u4ef6"
        } ]
    })(Data_Tuple_Nested["/\\"]({
        type: "radar", 
        polarIndex: 1, 
        data: [ {
            value: [ 85, 90, 90, 95, 95 ], 
            name: "\u67d0\u4e3b\u98df\u624b\u673a"
        }, {
            value: [ 95, 80, 95, 90, 93 ], 
            name: "\u67d0\u6c34\u679c\u624b\u673a"
        } ]
    })({
        type: "radar", 
        polarIndex: 2, 
        itemStyle: {
            normal: {
                areaStyle: {
                    type: "deault"
                }
            }
        }, 
        data: [ {
            name: "\u964d\u6c34\u91cf", 
            value: [ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 75.6, 82.2, 48.7, 18.8, 6.0, 2.3 ]
        }, {
            name: "\u84b8\u53d1\u91cf", 
            value: [ 2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 35.6, 62.2, 32.6, 20.0, 6.4, 3.3 ]
        } ]
    }))
};
var radar3 = function (id) {
    return function __do() {
        var _50 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    options: options, 
    radar3: radar3
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Prelude":122,"Utils":127}],124:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var Data_Array = require("Data.Array");
var Math = require("Math");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options_Unsafe = require("ECharts.Options.Unsafe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Data_Maybe = require("Data.Maybe");
var sinData = function __do() {
    var _52 = Utils.randomLst(10000)();
    var _51 = Utils.randomLst(10000)();
    return (function () {
        var randoms = Data_Array.zipWith(function (i) {
            return function (x) {
                return new Data_Tuple.Tuple(Utils.precise(3)(i * 10), x);
            };
        })(_52)(_51);
        var mapfn = function (_96) {
            return new Data_Tuple.Tuple(_96.value0, Utils.precise(3)(Math.sin(_96.value0) - _96.value0 * ((_96.value0 % 2) > 0 ? 0.1 : -0.1) * _96.value1));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(randoms));
    })()();
};
var showIt = {
    show: true
};
var cosData = function __do() {
    var _54 = Utils.randomLst(10000)();
    var _53 = Utils.randomLst(10000)();
    return (function () {
        var randoms = Data_Array.zipWith(function (i) {
            return function (x) {
                return new Data_Tuple.Tuple(Utils.precise(3)(i * 10), x);
            };
        })(_54)(_53);
        var mapfn = function (_97) {
            return new Data_Tuple.Tuple(_97.value0, Utils.precise(3)(Math.cos(_97.value0) - _97.value0 * ((_97.value0 % 2) > 0 ? 0.1 : -0.1) * _97.value1));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(randoms));
    })()();
};
var options = function __do() {
    var _56 = sinData();
    var _55 = cosData();
    return {
        tooltip: {
            trigger: "axis", 
            showDelay: 0, 
            axisPointer: {
                type: "cross", 
                lineStyle: {
                    type: "dashed", 
                    width: 1
                }
            }
        }, 
        legend: {
            data: [ "sin", "cos" ]
        }, 
        toolbox: {
            show: true, 
            feature: {
                mark: showIt, 
                dataZoom: showIt, 
                dataView: {
                    show: true, 
                    readOnly: true
                }, 
                restore: showIt, 
                saveAsImage: showIt
            }
        }, 
        xAxis: [ {
            type: "value", 
            scale: true
        } ], 
        yAxis: [ {
            type: "value", 
            scale: true
        } ], 
        series: Data_Tuple_Nested["/\\"]({
            name: "sin", 
            type: "scatter", 
            large: true, 
            data: _56
        })({
            name: "cos", 
            type: "scatter", 
            large: true, 
            data: _55
        })
    };
};
var scatter3 = function (id) {
    return function __do() {
        var _58 = options();
        var _57 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options_Unsafe.setOptionUnsafe(_58)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    cosData: cosData, 
    options: options, 
    scatter3: scatter3, 
    showIt: showIt, 
    sinData: sinData
};

},{"Control.Monad.Eff":12,"Data.Array":27,"Data.Maybe":39,"Data.Tuple":56,"Data.Tuple.Nested":55,"ECharts.Chart":61,"ECharts.Options.Unsafe":80,"Math":114,"Prelude":122,"Utils":127}],125:[function(require,module,exports){
(function (process){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Signal = require("Signal");
var Prelude = require("Prelude");

  function everyP(constant, now, t) {
    var out = constant(now());
    setInterval(function() {
      out.set(now());
    }, t);
    return out;
  };

  function now() {
    var perf = typeof performance !== 'undefined' ? performance : null;
    return (
      perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
      (process && process.hrtime && function() {
        var t = process.hrtime();
        return (t[0] * 1e9 + t[1]) / 1e6;
      }) ||
      Date.now
    ).call(perf);
  };
var second = 1000;
var millisecond = 1;
var every = Data_Function.runFn3(everyP)(Signal.constant)(now);
module.exports = {
    every: every, 
    millisecond: millisecond, 
    now: now, 
    second: second
};

}).call(this,require("1YiZ5S"))
},{"1YiZ5S":128,"Data.Function":35,"Prelude":122,"Signal":126}],126:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");

  function constant(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  function liftP(constant, fun, sig) {
    var out = constant(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };

  function applySigP(constant, fun, sig) {
    var out = constant(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };

  function mergeP(constant, sig1, sig2) {
    var out = constant(sig1.get());
    sig1.subscribe(out.set);
    sig2.subscribe(out.set);
    return out;
  };

  function foldpP(constant, fun, seed, sig) {
    var acc = seed;
    var out = constant(acc);
    sig.subscribe(function(val) {
      acc = fun(val)(acc);
      out.set(acc);
    });
    return out;
  };

  function sampleOnP(constant, sig1, sig2) {
    var out = constant(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };

  function distinctP(eq) {
  return function(constant) {
  return function(sig) {
    var val = sig.get();
    var out = constant(val);
    sig.subscribe(function(newval) {
      if (eq['/='](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };};};

  function distinctRefP(constant, sig) {
    var val = sig.get();
    var out = constant(val);
    sig.subscribe(function(newval) {
      if (val !== newval) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };

  function zipP(constant, f, sig1, sig2) {
    var val1 = sig1.get(), val2 = sig2.get();
    var out = constant(f(val1)(val2));
    sig1.subscribe(function(v) {
      val1 = v;
      out.set(f(val1)(val2));
    });
    sig2.subscribe(function(v) {
      val2 = v;
      out.set(f(val1)(val2));
    });
    return out;
  };

  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

  function unwrapP(constant, sig) {
    return function() {
      var out = constant(sig.get()());
      sig.subscribe(function(val) { out.set(val()); });
      return out;
    };
  };
var $tilde$greater = function (__dict_Functor_0) {
    return Prelude.flip(Prelude["<$>"](__dict_Functor_0));
};
var $tilde = function (__dict_Apply_1) {
    return Prelude["<*>"](__dict_Apply_1);
};
var $less$tilde = function (__dict_Functor_2) {
    return Prelude["<$>"](__dict_Functor_2);
};
var zip = function (f) {
    return function (a) {
        return function (b) {
            return zipP(constant, f, a, b);
        };
    };
};
var unwrap = Data_Function.runFn2(unwrapP)(constant);
var sampleOn = Data_Function.runFn3(sampleOnP)(constant);
var merge = Data_Function.runFn3(mergeP)(constant);
var semigroupSignal = new Prelude.Semigroup(merge);
var lift = Data_Function.runFn3(liftP)(constant);
var functorSignal = new Prelude.Functor(lift);
var foldp = Data_Function.runFn4(foldpP)(constant);
var distinct$prime = Data_Function.runFn2(distinctRefP)(constant);
var distinct = function (__dict_Eq_3) {
    return distinctP(__dict_Eq_3)(constant);
};
var applySig = Data_Function.runFn3(applySigP)(constant);
var applySignal = new Prelude.Apply(applySig, function () {
    return functorSignal;
});
var lift2 = function (f) {
    return function (a) {
        return function (b) {
            return $tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b);
        };
    };
};
var lift3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return $tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var lift4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var lift5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Prelude.Applicative(function () {
    return applySignal;
}, constant);
module.exports = {
    "<~": $less$tilde, 
    applicativeSignal: applicativeSignal, 
    applySig: applySig, 
    applySignal: applySignal, 
    constant: constant, 
    distinct: distinct, 
    "distinct'": distinct$prime, 
    foldp: foldp, 
    functorSignal: functorSignal, 
    lift: lift, 
    merge: merge, 
    runSignal: runSignal, 
    sampleOn: sampleOn, 
    semigroupSignal: semigroupSignal, 
    unwrap: unwrap, 
    zip: zip, 
    "~": $tilde, 
    "~>": $tilde$greater
};

},{"Data.Function":35,"Prelude":122}],127:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Array = require("Data.Array");
var Prelude = require("Prelude");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Math = require("Math");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");

function undefine(a) {
  return undefined;
}
;

function log(a) {
  return function() {
    console.log(a);
  };
}

;

function getElementById(id) {
  return function() {
    console.log(id);
    return document.getElementById(id);
  };
}
;

function onLoad(action) {
  return function() {
    window.onload = action;
  };
}
;

function windowize(key) {
  return function(a) {
    return function() {
      window[key] = a;
    };
  };
}
;

function precise(pre) {
  return function(num) {
    var Math = window['Math'];
    var result = Math.round(Math.pow(10, pre) * num) / Math.pow(10, pre);
    return result;
  };
}
;

function randomLst(count) {
  return function() {
    var Math = window['Math'];
    var result = [];
    for (var i = 0; i < count; i++) {
      result.push(Math.random());
    }
    return result;
  };
}
;
var randomInList = function (lst) {
    var l = Data_Array.length(lst);
    return function __do() {
        var _0 = Control_Monad_Eff_Random.random();
        return (function () {
            var i = Math.floor(_0 * l);
            return Prelude["return"](Control_Monad_Eff.monadEff)((function () {
                var _76 = Data_Array["!!"](lst)(i);
                if (_76 instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(_76.value0, i);
                };
                throw new Error("Failed pattern match");
            })());
        })()();
    };
};
module.exports = {
    getElementById: getElementById, 
    log: log, 
    onLoad: onLoad, 
    precise: precise, 
    randomInList: randomInList, 
    randomLst: randomLst, 
    undefine: undefine, 
    windowize: windowize
};

},{"Control.Monad.Eff":12,"Control.Monad.Eff.Random":11,"Data.Array":27,"Data.Maybe":39,"Data.Tuple":56,"Math":114,"Prelude":122}],128:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}]},{},[1])