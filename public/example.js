(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require('Main').main()
},{"Main":103}],2:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Series = require("ECharts.Series");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Common = require("ECharts.Common");
var ECharts_Item_Data = require("ECharts.Item.Data");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = ECharts_Options.Option.create((function () {
    var _837 = {};
    for (var _838 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_838)) {
            _837[_838] = ECharts_Options.optionDefault[_838];
        };
    };
    _837.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.ChordSeries({
        common: (function () {
            var _833 = {};
            for (var _834 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_834)) {
                    _833[_834] = ECharts_Series.universalSeriesDefault[_834];
                };
            };
            _833.name = new Data_Maybe.Just("chord");
            return _833;
        })(), 
        special: (function () {
            var _835 = {};
            for (var _836 in ECharts_Series.chordSeriesDefault) {
                if (ECharts_Series.chordSeriesDefault.hasOwnProperty(_836)) {
                    _835[_836] = ECharts_Series.chordSeriesDefault[_836];
                };
            };
            _835.sort = new Data_Maybe.Just(ECharts_Common.Asc.value);
            _835.sortSub = new Data_Maybe.Just(ECharts_Common.Desc.value);
            _835.showScale = new Data_Maybe.Just(true);
            _835.showScaleText = new Data_Maybe.Just(true);
            _835.data = new Data_Maybe.Just([ new ECharts_Item_Data.Label("group1"), new ECharts_Item_Data.Label("group2"), new ECharts_Item_Data.Label("group3"), new ECharts_Item_Data.Label("group4") ]);
            _835.matrix = Data_Maybe.Just.create([ [ 11975, 5871, 8916, 2868 ], [ 1951, 10048, 2060, 6171 ], [ 8010, 16145, 8090, 8045 ], [ 1013, 990, 940, 6907 ] ]);
            return _835;
        })()
    }) ]));
    return _837;
})());
var chord2 = function (id) {
    return function __do() {
        var _59 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    chord2: chord2, 
    options: options
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Chart":54,"ECharts.Common":56,"ECharts.Item.Data":65,"ECharts.Options":73,"ECharts.Series":78,"Prelude":113,"Utils":118}],3:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Series = require("ECharts.Series");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Grid = require("ECharts.Grid");
var Prelude = require("Prelude");
var ECharts_Connect = require("ECharts.Connect");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Coords = require("ECharts.Coords");
var Data_Tuple = require("Data.Tuple");
var Control_Monad_Eff = require("Control.Monad.Eff");
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var options2 = ECharts_Options.Option.create((function () {
    var _807 = {};
    for (var _808 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_808)) {
            _807[_808] = ECharts_Options.optionDefault[_808];
        };
    };
    _807.tooltip = Data_Maybe.Just.create((function () {
        var _763 = {};
        for (var _764 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_764)) {
                _763[_764] = ECharts_Tooltip.tooltipDefault[_764];
            };
        };
        _763.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
        _763.axisPointer = Data_Maybe.Just.create((function () {
            var _761 = {};
            for (var _762 in ECharts_Tooltip.tooltipAxisPointerDefault) {
                if (ECharts_Tooltip.tooltipAxisPointerDefault.hasOwnProperty(_762)) {
                    _761[_762] = ECharts_Tooltip.tooltipAxisPointerDefault[_762];
                };
            };
            _761.type = new Data_Maybe.Just(ECharts_Tooltip.ShadowPointer.value);
            return _761;
        })());
        return _763;
    })());
    _807.legend = Data_Maybe.Just.create(ECharts_Legend.Legend.create((function () {
        var _765 = {};
        for (var _766 in ECharts_Legend.legendDefault) {
            if (ECharts_Legend.legendDefault.hasOwnProperty(_766)) {
                _765[_766] = ECharts_Legend.legendDefault[_766];
            };
        };
        _765.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "direct access", "email marketing", "affiliate advertising", "video ads", "search engine" ]));
        return _765;
    })()));
    _807.toolbox = Data_Maybe.Just.create(ECharts_Toolbox.Toolbox.create((function () {
        var _777 = {};
        for (var _778 in ECharts_Toolbox.toolboxDefault) {
            if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_778)) {
                _777[_778] = ECharts_Toolbox.toolboxDefault[_778];
            };
        };
        _777.feature = Data_Maybe.Just.create(ECharts_Toolbox.Feature.create((function () {
            var _775 = {};
            for (var _776 in ECharts_Toolbox.featureDefault) {
                if (ECharts_Toolbox.featureDefault.hasOwnProperty(_776)) {
                    _775[_776] = ECharts_Toolbox.featureDefault[_776];
                };
            };
            _775.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                var _767 = {};
                for (var _768 in ECharts_Toolbox.markFeatureDefault) {
                    if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_768)) {
                        _767[_768] = ECharts_Toolbox.markFeatureDefault[_768];
                    };
                };
                _767.show = new Data_Maybe.Just(true);
                return _767;
            })()));
            _775.magicType = Data_Maybe.Just.create(ECharts_Toolbox.MagicTypeFeature.create((function () {
                var _769 = {};
                for (var _770 in ECharts_Toolbox.magicTypeFeatureDefault) {
                    if (ECharts_Toolbox.magicTypeFeatureDefault.hasOwnProperty(_770)) {
                        _769[_770] = ECharts_Toolbox.magicTypeFeatureDefault[_770];
                    };
                };
                _769.show = new Data_Maybe.Just(true);
                _769.type = new Data_Maybe.Just([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value, ECharts_Toolbox.MagicStack.value, ECharts_Toolbox.MagicTiled.value ]);
                return _769;
            })()));
            _775.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                var _771 = {};
                for (var _772 in ECharts_Toolbox.restoreFeatureDefault) {
                    if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_772)) {
                        _771[_772] = ECharts_Toolbox.restoreFeatureDefault[_772];
                    };
                };
                _771.show = new Data_Maybe.Just(true);
                return _771;
            })()));
            _775.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                var _773 = {};
                for (var _774 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                    if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_774)) {
                        _773[_774] = ECharts_Toolbox.saveAsImageFeatureDefault[_774];
                    };
                };
                _773.show = new Data_Maybe.Just(true);
                return _773;
            })()));
            return _775;
        })()));
        _777.show = new Data_Maybe.Just(true);
        return _777;
    })()));
    _807.calculable = new Data_Maybe.Just(true);
    _807.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
        var _779 = {};
        for (var _780 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_780)) {
                _779[_780] = ECharts_Axis.axisDefault[_780];
            };
        };
        _779.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
        _779.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ]));
        return _779;
    })()));
    _807.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
        var _783 = {};
        for (var _784 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_784)) {
                _783[_784] = ECharts_Axis.axisDefault[_784];
            };
        };
        _783.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
        _783.splitArea = Data_Maybe.Just.create((function () {
            var _781 = {};
            for (var _782 in ECharts_Axis.axisSplitAreaDefault) {
                if (ECharts_Axis.axisSplitAreaDefault.hasOwnProperty(_782)) {
                    _781[_782] = ECharts_Axis.axisSplitAreaDefault[_782];
                };
            };
            _781.show = new Data_Maybe.Just(true);
            return _781;
        })());
        return _783;
    })()));
    _807.grid = Data_Maybe.Just.create((function () {
        var _785 = {};
        for (var _786 in ECharts_Grid.gridDefault) {
            if (ECharts_Grid.gridDefault.hasOwnProperty(_786)) {
                _785[_786] = ECharts_Grid.gridDefault[_786];
            };
        };
        _785.x2 = Data_Maybe.Just.create(new ECharts_Common.Pixel(40));
        return _785;
    })());
    _807.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.BarSeries({
        common: (function () {
            var _787 = {};
            for (var _788 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_788)) {
                    _787[_788] = ECharts_Series.universalSeriesDefault[_788];
                };
            };
            _787.name = new Data_Maybe.Just("direct access");
            return _787;
        })(), 
        special: (function () {
            var _789 = {};
            for (var _790 in ECharts_Series.barSeriesDefault) {
                if (ECharts_Series.barSeriesDefault.hasOwnProperty(_790)) {
                    _789[_790] = ECharts_Series.barSeriesDefault[_790];
                };
            };
            _789.stack = new Data_Maybe.Just("total");
            _789.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 320, 332, 301, 334, 390, 330, 320 ]));
            return _789;
        })()
    }), new ECharts_Series.BarSeries({
        common: (function () {
            var _791 = {};
            for (var _792 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_792)) {
                    _791[_792] = ECharts_Series.universalSeriesDefault[_792];
                };
            };
            _791.name = new Data_Maybe.Just("email marketing");
            return _791;
        })(), 
        special: (function () {
            var _793 = {};
            for (var _794 in ECharts_Series.barSeriesDefault) {
                if (ECharts_Series.barSeriesDefault.hasOwnProperty(_794)) {
                    _793[_794] = ECharts_Series.barSeriesDefault[_794];
                };
            };
            _793.stack = new Data_Maybe.Just("email marketing");
            _793.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 120, 132, 101, 134, 90, 230, 210 ]));
            return _793;
        })()
    }), new ECharts_Series.BarSeries({
        common: (function () {
            var _795 = {};
            for (var _796 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_796)) {
                    _795[_796] = ECharts_Series.universalSeriesDefault[_796];
                };
            };
            _795.name = new Data_Maybe.Just("affiliate advertising");
            return _795;
        })(), 
        special: (function () {
            var _797 = {};
            for (var _798 in ECharts_Series.barSeriesDefault) {
                if (ECharts_Series.barSeriesDefault.hasOwnProperty(_798)) {
                    _797[_798] = ECharts_Series.barSeriesDefault[_798];
                };
            };
            _797.stack = new Data_Maybe.Just("total");
            _797.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 220, 182, 191, 234, 290, 330, 310 ]));
            return _797;
        })()
    }), new ECharts_Series.BarSeries({
        common: (function () {
            var _799 = {};
            for (var _800 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_800)) {
                    _799[_800] = ECharts_Series.universalSeriesDefault[_800];
                };
            };
            _799.name = new Data_Maybe.Just("video Ads");
            return _799;
        })(), 
        special: (function () {
            var _801 = {};
            for (var _802 in ECharts_Series.barSeriesDefault) {
                if (ECharts_Series.barSeriesDefault.hasOwnProperty(_802)) {
                    _801[_802] = ECharts_Series.barSeriesDefault[_802];
                };
            };
            _801.stack = new Data_Maybe.Just("total");
            _801.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 150, 232, 201, 154, 190, 330, 410 ]));
            return _801;
        })()
    }), new ECharts_Series.BarSeries({
        common: (function () {
            var _803 = {};
            for (var _804 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_804)) {
                    _803[_804] = ECharts_Series.universalSeriesDefault[_804];
                };
            };
            _803.name = new Data_Maybe.Just("search engine");
            return _803;
        })(), 
        special: (function () {
            var _805 = {};
            for (var _806 in ECharts_Series.barSeriesDefault) {
                if (ECharts_Series.barSeriesDefault.hasOwnProperty(_806)) {
                    _805[_806] = ECharts_Series.barSeriesDefault[_806];
                };
            };
            _805.stack = new Data_Maybe.Just("total");
            _805.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 820, 932, 901, 934, 1290, 1330, 1320 ]));
            return _805;
        })()
    }) ]));
    return _807;
})());
var options1 = ECharts_Options.Option.create((function () {
    var _829 = {};
    for (var _830 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_830)) {
            _829[_830] = ECharts_Options.optionDefault[_830];
        };
    };
    _829.tooltip = Data_Maybe.Just.create((function () {
        var _809 = {};
        for (var _810 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_810)) {
                _809[_810] = ECharts_Tooltip.tooltipDefault[_810];
            };
        };
        _809.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
        _809.formatter = Data_Maybe.Just.create(new ECharts_Formatter.Template("{a} <br/> {b}: {c} ({d}%)"));
        return _809;
    })());
    _829.title = Data_Maybe.Just.create((function () {
        var _811 = {};
        for (var _812 in ECharts_Title.titleDefault) {
            if (ECharts_Title.titleDefault.hasOwnProperty(_812)) {
                _811[_812] = ECharts_Title.titleDefault[_812];
            };
        };
        _811.text = new Data_Maybe.Just("a site user to access source");
        _811.subtext = new Data_Maybe.Just("fictitious");
        _811.x = new Data_Maybe.Just(ECharts_Coords.XLeft.value);
        return _811;
    })());
    _829.legend = Data_Maybe.Just.create((function () {
        var _813 = {};
        for (var _814 in ECharts_Legend.legendDefault) {
            if (ECharts_Legend.legendDefault.hasOwnProperty(_814)) {
                _813[_814] = ECharts_Legend.legendDefault[_814];
            };
        };
        _813.orient = new Data_Maybe.Just(ECharts_Coords.Vertical.value);
        _813.x = new Data_Maybe.Just(ECharts_Coords.XLeft.value);
        _813.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "direct access", "email marketing", "affiliate advertising", "video ads", "search engine" ]));
        return _813;
    })());
    _829.calculable = new Data_Maybe.Just(true);
    _829.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.PieSeries({
        common: (function () {
            var _815 = {};
            for (var _816 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_816)) {
                    _815[_816] = ECharts_Series.universalSeriesDefault[_816];
                };
            };
            _815.name = new Data_Maybe.Just("access to the source.");
            return _815;
        })(), 
        special: (function () {
            var _827 = {};
            for (var _828 in ECharts_Series.pieSeriesDefault) {
                if (ECharts_Series.pieSeriesDefault.hasOwnProperty(_828)) {
                    _827[_828] = ECharts_Series.pieSeriesDefault[_828];
                };
            };
            _827.radius = Data_Maybe.Just.create(new ECharts_Common.R(new ECharts_Common.Percent(55)));
            _827.center = Data_Maybe.Just.create(new Data_Tuple.Tuple(new ECharts_Common.Percent(50), new ECharts_Common.Pixel(225)));
            _827.data = Data_Maybe.Just.create([ ECharts_Item_Data.Dat.create((function () {
                var _817 = {};
                for (var _818 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(335))) {
                    if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(335))).hasOwnProperty(_818)) {
                        _817[_818] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(335)))[_818];
                    };
                };
                _817.name = new Data_Maybe.Just("direct access");
                return _817;
            })()), ECharts_Item_Data.Dat.create((function () {
                var _819 = {};
                for (var _820 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(310))) {
                    if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(310))).hasOwnProperty(_820)) {
                        _819[_820] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(310)))[_820];
                    };
                };
                _819.name = new Data_Maybe.Just("email marketing");
                return _819;
            })()), ECharts_Item_Data.Dat.create((function () {
                var _821 = {};
                for (var _822 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(234))) {
                    if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(234))).hasOwnProperty(_822)) {
                        _821[_822] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(234)))[_822];
                    };
                };
                _821.name = new Data_Maybe.Just("affiliate advertising");
                return _821;
            })()), ECharts_Item_Data.Dat.create((function () {
                var _823 = {};
                for (var _824 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(135))) {
                    if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(135))).hasOwnProperty(_824)) {
                        _823[_824] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(135)))[_824];
                    };
                };
                _823.name = new Data_Maybe.Just("video ads");
                return _823;
            })()), ECharts_Item_Data.Dat.create((function () {
                var _825 = {};
                for (var _826 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(158))) {
                    if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(158))).hasOwnProperty(_826)) {
                        _825[_826] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(158)))[_826];
                    };
                };
                _825.name = new Data_Maybe.Just("search engine");
                return _825;
            })()) ]);
            return _827;
        })()
    }) ]));
    return _829;
})());
var bind = function (first) {
    return function (second) {
        return function __do() {
            ECharts_Connect.connect(first)(second)();
            return ECharts_Connect.connect(second)(first)();
        };
    };
};
var connectM = function (firstId) {
    return function (secondId) {
        return function __do() {
            var _58 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(firstId))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options1)(true))();
            var _57 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(secondId))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options2)(true))();
            return bind(_58)(_57)();
        };
    };
};
module.exports = {
    bind: bind, 
    connectM: connectM, 
    options1: options1, 
    options2: options2, 
    simpleData: simpleData
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"Data.Tuple":49,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Common":56,"ECharts.Connect":57,"ECharts.Coords":58,"ECharts.Formatter":62,"ECharts.Grid":63,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Title":89,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Prelude":113,"Utils":118}],4:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
    this["<|>"] = $less$bar$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$bar$greater = function (dict) {
    return dict["<|>"];
};
module.exports = {
    "<|>": $less$bar$greater, 
    Alt: Alt
};

},{"Prelude":113}],5:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var some = function (__dict_Alternative_0) {
    return function (__dict_Lazy1_1) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_0["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_0["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_1)(function (_) {
                return many(__dict_Alternative_0)(__dict_Lazy1_1)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_2) {
    return function (__dict_Lazy1_3) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_2["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_2)(__dict_Lazy1_3)(v))(Prelude.pure(__dict_Alternative_2["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
module.exports = {
    Alternative: Alternative, 
    many: many, 
    some: some
};

},{"Control.Alt":4,"Control.Lazy":9,"Prelude":113}],6:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
var forever = function (__dict_Apply_6) {
    return function (a) {
        return $times$greater(__dict_Apply_6)(a)(forever(__dict_Apply_6)(a));
    };
};
module.exports = {
    "*>": $times$greater, 
    "<*": $less$times, 
    forever: forever, 
    lift2: lift2, 
    lift3: lift3, 
    lift4: lift4, 
    lift5: lift5
};

},{"Prelude":113}],7:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Prelude":113}],8:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
    this["<<="] = $less$less$eq;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$less$eq = function (dict) {
    return dict["<<="];
};
var $eq$less$eq = function (__dict_Extend_0) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_0)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_1) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_1)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_2) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_2)(f)(w);
        };
    };
};
var extendArr = function (__dict_Semigroup_3) {
    return new Extend(function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_3)(w)(w$prime));
                });
            };
        };
    }, function () {
        return Prelude.functorArr;
    });
};
var duplicate = function (__dict_Extend_4) {
    return function (w) {
        return $less$less$eq(__dict_Extend_4)(Prelude.id(Prelude.categoryArr))(w);
    };
};
module.exports = {
    "<<=": $less$less$eq, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    Extend: Extend, 
    duplicate: duplicate, 
    extendArr: extendArr
};

},{"Prelude":113}],9:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Lazy(defer) {
    this.defer = defer;
};
function Lazy1(defer1) {
    this.defer1 = defer1;
};
function Lazy2(defer2) {
    this.defer2 = defer2;
};
var defer2 = function (dict) {
    return dict.defer2;
};
var fix2 = function (__dict_Lazy2_0) {
    return function (f) {
        return defer2(__dict_Lazy2_0)(function (_) {
            return f(fix2(__dict_Lazy2_0)(f));
        });
    };
};
var defer1 = function (dict) {
    return dict.defer1;
};
var fix1 = function (__dict_Lazy1_1) {
    return function (f) {
        return defer1(__dict_Lazy1_1)(function (_) {
            return f(fix1(__dict_Lazy1_1)(f));
        });
    };
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_2) {
    return function (f) {
        return defer(__dict_Lazy_2)(function (_) {
            return f(fix(__dict_Lazy_2)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    Lazy1: Lazy1, 
    Lazy2: Lazy2, 
    defer: defer, 
    defer1: defer1, 
    defer2: defer2, 
    fix: fix, 
    fix1: fix1, 
    fix2: fix2
};

},{"Prelude":113}],10:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function random() {  return Math.random();};
module.exports = {
    random: random
};

},{"Prelude":113}],11:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function returnE(a) {  return function() {    return a;  };};
function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
function runPure(f) {  return f();};
function untilE(f) {  return function() {    while (!f());    return {};  };};
function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(bindE, function () {
    return applyEff;
});
var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
    return functorEff;
});
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    applicativeEff: applicativeEff, 
    applyEff: applyEff, 
    bindE: bindE, 
    bindEff: bindEff, 
    forE: forE, 
    foreachE: foreachE, 
    functorEff: functorEff, 
    monadEff: monadEff, 
    returnE: returnE, 
    runPure: runPure, 
    untilE: untilE, 
    whileE: whileE
};

},{"Prelude":113}],12:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
function newSTRef(val) {  return function() {    return { value: val };  };};
function readSTRef(ref) {  return function() {    return ref.value;  };};
function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
function runST(f) {  return f;};
var pureST = function (st) {
    return Control_Monad_Eff.runPure(runST(st));
};
module.exports = {
    modifySTRef: modifySTRef, 
    newSTRef: newSTRef, 
    pureST: pureST, 
    readSTRef: readSTRef, 
    runST: runST, 
    writeSTRef: writeSTRef
};

},{"Control.Monad.Eff":11,"Prelude":113}],13:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var guard = function (__dict_MonadPlus_0) {
    return function (_150) {
        if (_150) {
            return Prelude["return"](__dict_MonadPlus_0["__superclass_Prelude.Monad_0"]())(Prelude.unit);
        };
        if (!_150) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match");
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard
};

},{"Control.Plus":14,"Prelude":113}],14:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty
};

},{"Prelude":113}],15:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var $tilde$greater = function (__dict_EncodeJson_0) {
    return function (_750) {
        return function (_751) {
            return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_750.value0)(_750.value1))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.insert(_750.value0)(_750.value1))(Data_Argonaut_Core.fromObject))(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(_751));
        };
    };
};
var $qmark$greater$greater$eq = function (_752) {
    return function (_753) {
        if (_752 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_752.value0);
        };
        return Data_Either.Left.create("Couldn't decode " + _753);
    };
};
var $colon$eq = function (__dict_EncodeJson_1) {
    return function (k) {
        return function (v) {
            return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_1)(v));
        };
    };
};
var $dot$qmark = function (__dict_DecodeJson_2) {
    return function (o) {
        return function (s) {
            return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_2))(Data_StrMap.lookup(s)(o));
        };
    };
};
module.exports = {
    ".?": $dot$qmark, 
    ":=": $colon$eq, 
    "?>>=": $qmark$greater$greater$eq, 
    "~>": $tilde$greater
};

},{"Data.Argonaut.Core":16,"Data.Argonaut.Decode":17,"Data.Argonaut.Encode":18,"Data.Either":25,"Data.Maybe":32,"Data.StrMap":43,"Data.Tuple":49,"Prelude":113}],16:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_StrMap = require("Data.StrMap");
var Optic_Prism = require("Optic.Prism");
var Optic_Fold = require("Optic.Fold");
var Data_Maybe = require("Data.Maybe");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
function fromNull(_){return null;};
function fromBoolean(b){return b;};
function fromNumber(n){return n;};
function fromString(s){return s;};
function fromArray(a){return a;};
function fromObject(o){return o;};
var jsonNull = null;;
function _stringify(j){ return JSON.stringify(j); };
function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };

    function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
        return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
        var a = [];
        for (var k in o) {
          a.push(k);
        }
        return a;
      }

      if (a == null) {
        if (b == null) return EQ;
        else return LT;
      } else if (typeof a === 'boolean') {
        if (typeof b === 'boolean') {
          // boolean / boolean
          if (a === b) return EQ;
          else if (a == false) return LT;
          else return GT;
        } else if (b == null) return GT;
        else return LT;
      } else if (typeof a === 'number') {
        if (typeof b === 'number') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else return LT;
      } else if (typeof a === 'string') {
        if (typeof b === 'string') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else return LT;
      } else if (isArray(a)) {
        if (isArray(b)) {
          for (var i = 0; i < Math.min(a.length, b.length); i++) {
            var c = _compare(EQ, GT, LT, a[i], b[i]);

            if (c !== EQ) return c;
          }
          if (a.length === b.length) return EQ;
          else if (a.length < b.length) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else return LT;
      }
      else {
        if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else if (isArray(b)) return GT;
        else {
          var akeys = keys(a);
          var bkeys = keys(b);

          var keys = akeys.concat(bkeys).sort();

          for (var i = 0; i < keys.length; i++) {
            var k = keys[i];

            if (a[k] === undefined) return LT;
            else if (b[k] === undefined) return GT;

            var c = _compare(EQ, GT, LT, a[k], b[k]);

            if (c !== EQ) return c;
          }

          if (akeys.length === bkeys.length) return EQ;
          else if (akeys.length < bkeys.length) return LT;
          else return GT;
        }
      }
    }
    ;
var verbJsonType = function (def) {
    return function (f) {
        return function (fold) {
            return fold(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
var showJson = new Prelude.Show(_stringify);
var jsonZero = fromNumber(0);
var jsonTrue = fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return fromObject(Data_StrMap.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return fromArray([ j ]);
};
var jsonFalse = fromBoolean(false);
var jsonEmptyString = fromString("");
var jsonEmptyObject = fromObject(Data_StrMap.empty);
var jsonEmptyArray = fromArray([  ]);
var isJsonType = verbJsonType(false)(Prelude["const"](true));
var foldJsonString = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isString = isJsonType(foldJsonString);
var jsonStringL = function (__dict_Applicative_0) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_0)(Data_Profunctor_Choice.choiceArr)(isString));
};
var toString = toJsonType(foldJsonString);
var stringL = function (__dict_Applicative_1) {
    return function (__dict_Choice_2) {
        return Optic_Prism["prism'"](fromString)(toString)(__dict_Applicative_1)(__dict_Choice_2);
    };
};
var foldJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(foldJsonObject);
var jsonObjectL = function (__dict_Applicative_3) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_3)(Data_Profunctor_Choice.choiceArr)(isObject));
};
var toObject = toJsonType(foldJsonObject);
var objectL = function (__dict_Applicative_4) {
    return function (__dict_Choice_5) {
        return Optic_Prism["prism'"](fromObject)(toObject)(__dict_Applicative_4)(__dict_Choice_5);
    };
};
var foldJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNumber = isJsonType(foldJsonNumber);
var jsonNumberL = function (__dict_Applicative_6) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_6)(Data_Profunctor_Choice.choiceArr)(isNumber));
};
var toNumber = toJsonType(foldJsonNumber);
var numberL = function (__dict_Applicative_7) {
    return function (__dict_Choice_8) {
        return Optic_Prism["prism'"](fromNumber)(toNumber)(__dict_Applicative_7)(__dict_Choice_8);
    };
};
var foldJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNull = isJsonType(foldJsonNull);
var jsonNullL = function (__dict_Applicative_9) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_9)(Data_Profunctor_Choice.choiceArr)(isNull));
};
var toNull = toJsonType(foldJsonNull);
var nullL = function (__dict_Applicative_10) {
    return function (__dict_Choice_11) {
        return Optic_Prism["prism'"](fromNull)(toNull)(__dict_Applicative_10)(__dict_Choice_11);
    };
};
var foldJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(foldJsonBoolean);
var jsonBooleanL = function (__dict_Applicative_12) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_12)(Data_Profunctor_Choice.choiceArr)(isBoolean));
};
var toBoolean = toJsonType(foldJsonBoolean);
var foldJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
        };
    };
};
var isArray = isJsonType(foldJsonArray);
var jsonArrayL = function (__dict_Applicative_13) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_13)(Data_Profunctor_Choice.choiceArr)(isArray));
};
var toArray = toJsonType(foldJsonArray);
var foldJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return _foldJson(a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
var ordJson = new Prelude.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return _compare(Prelude.EQ.value, Prelude.GT.value, Prelude.LT.value, a, b);
    };
});
var eqJson = new Prelude.Eq(function (j) {
    return function (j$prime) {
        return !Prelude["=="](eqJson)(j)(j$prime);
    };
}, function (j1) {
    return function (j2) {
        return Prelude["=="](Prelude.eqOrdering)(Prelude.compare(ordJson)(j1)(j2))(Prelude.EQ.value);
    };
});
var eqJNull = new Prelude.Eq(function (n1) {
    return function (n2) {
        return false;
    };
}, function (n1) {
    return function (n2) {
        return true;
    };
});
var ordJNull = new Prelude.Ord(function () {
    return eqJNull;
}, Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["const"])(Prelude["const"](Prelude.EQ.value)));
var booleanL = function (__dict_Applicative_14) {
    return function (__dict_Choice_15) {
        return Optic_Prism["prism'"](fromBoolean)(toBoolean)(__dict_Applicative_14)(__dict_Choice_15);
    };
};
var arrayL = function (__dict_Applicative_16) {
    return function (__dict_Choice_17) {
        return Optic_Prism["prism'"](fromArray)(toArray)(__dict_Applicative_16)(__dict_Choice_17);
    };
};
module.exports = {
    arrayL: arrayL, 
    booleanL: booleanL, 
    eqJNull: eqJNull, 
    eqJson: eqJson, 
    foldJson: foldJson, 
    foldJsonArray: foldJsonArray, 
    foldJsonBoolean: foldJsonBoolean, 
    foldJsonNull: foldJsonNull, 
    foldJsonNumber: foldJsonNumber, 
    foldJsonObject: foldJsonObject, 
    foldJsonString: foldJsonString, 
    fromArray: fromArray, 
    fromBoolean: fromBoolean, 
    fromNull: fromNull, 
    fromNumber: fromNumber, 
    fromObject: fromObject, 
    fromString: fromString, 
    isArray: isArray, 
    isBoolean: isBoolean, 
    isJsonType: isJsonType, 
    isNull: isNull, 
    isNumber: isNumber, 
    isObject: isObject, 
    isString: isString, 
    jsonArrayL: jsonArrayL, 
    jsonBooleanL: jsonBooleanL, 
    jsonEmptyArray: jsonEmptyArray, 
    jsonEmptyObject: jsonEmptyObject, 
    jsonEmptyString: jsonEmptyString, 
    jsonFalse: jsonFalse, 
    jsonNull: jsonNull, 
    jsonNullL: jsonNullL, 
    jsonNumberL: jsonNumberL, 
    jsonObjectL: jsonObjectL, 
    jsonSingletonArray: jsonSingletonArray, 
    jsonSingletonObject: jsonSingletonObject, 
    jsonStringL: jsonStringL, 
    jsonTrue: jsonTrue, 
    jsonZero: jsonZero, 
    nullL: nullL, 
    numberL: numberL, 
    objectL: objectL, 
    ordJNull: ordJNull, 
    ordJson: ordJson, 
    showJson: showJson, 
    showJsonNull: showJsonNull, 
    stringL: stringL, 
    toArray: toArray, 
    toBoolean: toBoolean, 
    toNull: toNull, 
    toNumber: toNumber, 
    toObject: toObject, 
    toString: toString
};

},{"Data.Function":28,"Data.Maybe":32,"Data.Profunctor.Choice":39,"Data.StrMap":43,"Optic.Fold":107,"Optic.Prism":111,"Prelude":113}],17:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_String = require("Data.String");
var Data_Maybe = require("Data.Maybe");
var Data_Traversable = require("Data.Traversable");
var Data_Map = require("Data.Map");
var Data_Either = require("Data.Either");
var Optic_Prism = require("Optic.Prism");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Optic_Index = require("Optic.Index");
var Control_Alt = require("Control.Alt");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_StrMap = require("Data.StrMap");
var Data_Tuple = require("Data.Tuple");
function DecodeJson(decodeJson) {
    this.decodeJson = decodeJson;
};
var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
var decodeJson = function (dict) {
    return dict.decodeJson;
};
var decodeJsonChar = new DecodeJson(function (j) {
    var go = function (_749) {
        if (_749 instanceof Data_Maybe.Nothing) {
            return Data_Either.Left.create("Expected character but found: " + Prelude.show(Data_Argonaut_Core.showJson)(j));
        };
        if (_749 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_749.value0);
        };
        throw new Error("Failed pattern match");
    };
    return Prelude[">>="](Data_Either.bindEither)(Prelude["<$>"](Data_Either.functorEither)(Data_String.charAt(0))(decodeJson(decodeJsonString)(j)))(go);
});
var decodeJsonEither = function (__dict_DecodeJson_0) {
    return function (__dict_DecodeJson_1) {
        return new DecodeJson(function (j) {
            return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(__dict_DecodeJson_0)(j)))(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(__dict_DecodeJson_1)(j)));
        });
    };
};
var decodeJsonMaybe = function (__dict_DecodeJson_2) {
    return new DecodeJson(function (j) {
        return Control_Alt["<|>"](Data_Either.altEither)(decodeJson(decodeJsonMaybe(__dict_DecodeJson_2))(j))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
    });
};
var decodeMaybe = function (__dict_DecodeJson_8) {
    return function (json) {
        return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_8)(json));
    };
};
var decodeL = function (__dict_DecodeJson_9) {
    return function (__dict_EncodeJson_10) {
        return function (__dict_Applicative_11) {
            return function (__dict_Choice_12) {
                return Optic_Prism["prism'"](Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_10))(decodeMaybe(__dict_DecodeJson_9))(__dict_Applicative_11)(__dict_Choice_12);
            };
        };
    };
};
var objectFieldL = function (__dict_DecodeJson_13) {
    return function (__dict_EncodeJson_14) {
        return function (key) {
            return function (__dict_Applicative_15) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_13)(__dict_EncodeJson_14)(__dict_Applicative_15)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexStrMap)(key)(__dict_Applicative_15))(Data_Argonaut_Core.objectL(__dict_Applicative_15)(Data_Profunctor_Choice.choiceArr)));
            };
        };
    };
};
var decodeStrMap = function (__dict_DecodeJson_16) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (_32) {
            return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_16))(_32);
        }));
    });
};
var decodeArray = function (__dict_DecodeJson_17) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_33) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_17))(_33);
        }));
    });
};
var decodeJsonTuple = function (__dict_DecodeJson_3) {
    return function (__dict_DecodeJson_4) {
        return new DecodeJson(function (j) {
            var f = function (_748) {
                if (_748.length >= 2) {
                    var _2558 = _748.slice(2);
                    if (_2558.length === 0) {
                        return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(__dict_DecodeJson_3)(_748[0])))(decodeJson(__dict_DecodeJson_4)(_748[1]));
                    };
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](Data_Either.bindEither)(decodeJson(decodeArray(decodeJsonJson))(j))(f);
        });
    };
};
var decodeMap = function (__dict_Ord_5) {
    return function (__dict_DecodeJson_6) {
        return function (__dict_DecodeJson_7) {
            return new DecodeJson(function (j) {
                return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(__dict_Ord_5))(decodeJson(decodeArray(decodeJsonTuple(__dict_DecodeJson_6)(__dict_DecodeJson_7)))(j));
            });
        };
    };
};
var arrayIndexL = function (__dict_DecodeJson_18) {
    return function (__dict_EncodeJson_19) {
        return function (i) {
            return function (__dict_Applicative_20) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_18)(__dict_EncodeJson_19)(__dict_Applicative_20)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(i)(__dict_Applicative_20))(Data_Argonaut_Core.arrayL(__dict_Applicative_20)(Data_Profunctor_Choice.choiceArr)));
            };
        };
    };
};
module.exports = {
    DecodeJson: DecodeJson, 
    arrayIndexL: arrayIndexL, 
    decodeArray: decodeArray, 
    decodeJson: decodeJson, 
    decodeJsonBoolean: decodeJsonBoolean, 
    decodeJsonChar: decodeJsonChar, 
    decodeJsonEither: decodeJsonEither, 
    decodeJsonJson: decodeJsonJson, 
    decodeJsonMaybe: decodeJsonMaybe, 
    decodeJsonNull: decodeJsonNull, 
    decodeJsonNumber: decodeJsonNumber, 
    decodeJsonString: decodeJsonString, 
    decodeJsonTuple: decodeJsonTuple, 
    decodeL: decodeL, 
    decodeMap: decodeMap, 
    decodeMaybe: decodeMaybe, 
    decodeStrMap: decodeStrMap, 
    objectFieldL: objectFieldL
};

},{"Control.Alt":4,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Either":25,"Data.Map":30,"Data.Maybe":32,"Data.Profunctor.Choice":39,"Data.StrMap":43,"Data.String":46,"Data.Traversable":47,"Data.Tuple":49,"Optic.Index":109,"Optic.Prism":111,"Prelude":113}],18:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Map = require("Data.Map");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_StrMap = require("Data.StrMap");
function EncodeJson(encodeJson) {
    this.encodeJson = encodeJson;
};
var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryArr));
var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
var encodeJson = function (dict) {
    return dict.encodeJson;
};
var encodeJsonArray = function (__dict_EncodeJson_0) {
    return new EncodeJson(function (json) {
        return Data_Argonaut_Core.fromArray(Prelude["<$>"](Data_Array.functorArray)(encodeJson(__dict_EncodeJson_0))(json));
    });
};
var encodeJsonChar = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonJString))(Data_Char.charString));
var encodeJsonEither = function (__dict_EncodeJson_1) {
    return function (__dict_EncodeJson_2) {
        return new EncodeJson(function (_746) {
            if (_746 instanceof Data_Either.Left) {
                return encodeJson(__dict_EncodeJson_1)(_746.value0);
            };
            if (_746 instanceof Data_Either.Right) {
                return encodeJson(__dict_EncodeJson_2)(_746.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
};
var encodeJsonMaybe = function (__dict_EncodeJson_3) {
    return new EncodeJson(function (_744) {
        if (_744 instanceof Data_Maybe.Nothing) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (_744 instanceof Data_Maybe.Just) {
            return encodeJson(__dict_EncodeJson_3)(_744.value0);
        };
        throw new Error("Failed pattern match");
    });
};
var encodeJsonTuple = function (__dict_EncodeJson_4) {
    return function (__dict_EncodeJson_5) {
        return new EncodeJson(function (_745) {
            return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(__dict_EncodeJson_4)(_745.value0), encodeJson(__dict_EncodeJson_5)(_745.value1) ]);
        });
    };
};
var encodeMap = function (__dict_Ord_6) {
    return function (__dict_EncodeJson_7) {
        return function (__dict_EncodeJson_8) {
            return new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonArray(encodeJsonTuple(__dict_EncodeJson_7)(__dict_EncodeJson_8))))(Data_Map.toList));
        };
    };
};
var encodeStrMap = function (__dict_EncodeJson_9) {
    return new EncodeJson(function (m) {
        return Data_Argonaut_Core.fromObject(Prelude["<$>"](Data_StrMap.functorStrMap)(encodeJson(__dict_EncodeJson_9))(m));
    });
};
module.exports = {
    EncodeJson: EncodeJson, 
    encodeJson: encodeJson, 
    encodeJsonArray: encodeJsonArray, 
    encodeJsonChar: encodeJsonChar, 
    encodeJsonEither: encodeJsonEither, 
    encodeJsonJBoolean: encodeJsonJBoolean, 
    encodeJsonJNumber: encodeJsonJNumber, 
    encodeJsonJString: encodeJsonJString, 
    encodeJsonJson: encodeJsonJson, 
    encodeJsonMaybe: encodeJsonMaybe, 
    encodeJsonTuple: encodeJsonTuple, 
    encodeJsonUnit: encodeJsonUnit, 
    encodeMap: encodeMap, 
    encodeStrMap: encodeStrMap
};

},{"Data.Argonaut.Core":16,"Data.Array":20,"Data.Char":21,"Data.Either":25,"Data.Map":30,"Data.Maybe":32,"Data.StrMap":43,"Data.Tuple":49,"Prelude":113}],19:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

  function runSTArray(f) {
    return f;
  };

  function emptySTArray() {
    return [];
  };

  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };

  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };

  function pushAllSTArrayImpl(arr, as) {
    return function(){
      return arr.push.apply(arr, as);
    };
  };

  function spliceSTArrayImpl(arr, index, howMany, bs) {
    return function(){
      return arr.splice.apply(arr, [index, howMany].concat(bs));
    };
  };

  function copyImpl(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = arr[i];
      }
      return as;
    };
  };

  function toAssocArray(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = {value: arr[i], index: i};
      }
      return as;
    };
  };
var thaw = copyImpl;
var spliceSTArray = Data_Function.runFn4(spliceSTArrayImpl);
var pushAllSTArray = Data_Function.runFn2(pushAllSTArrayImpl);
var pushSTArray = function (arr) {
    return function (a) {
        return pushAllSTArray(arr)([ a ]);
    };
};
var pokeSTArray = function (arr) {
    return function (i) {
        return function (a) {
            return pokeSTArrayImpl(arr, i, a);
        };
    };
};
var peekSTArray = function (arr) {
    return function (i) {
        return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
var freeze = copyImpl;
module.exports = {
    emptySTArray: emptySTArray, 
    freeze: freeze, 
    peekSTArray: peekSTArray, 
    pokeSTArray: pokeSTArray, 
    pushAllSTArray: pushAllSTArray, 
    pushSTArray: pushSTArray, 
    runSTArray: runSTArray, 
    spliceSTArray: spliceSTArray, 
    thaw: thaw, 
    toAssocArray: toAssocArray
};

},{"Data.Function":28,"Data.Maybe":32,"Prelude":113}],20:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Prelude_Unsafe = require("Prelude.Unsafe");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
function length (xs) {  return xs.length;};
function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
function reverse (l) {  return l.slice().reverse();};
function drop (n) {  return function (l) {    return l.slice(n);  };};
function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
var $dot$dot = range;
var $bang$bang = function (xs) {
    return function (n) {
        var isInt = function (n_1) {
            return n_1 !== ~~n_1;
        };
        return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
    };
};
var take = function (n) {
    return slice(0)(n);
};
var tail = function (_197) {
    if (_197.length >= 1) {
        var _1019 = _197.slice(1);
        return new Data_Maybe.Just(_1019);
    };
    return Data_Maybe.Nothing.value;
};
var span = (function () {
    var go = function (__copy__213) {
        return function (__copy__214) {
            return function (__copy__215) {
                var _213 = __copy__213;
                var _214 = __copy__214;
                var _215 = __copy__215;
                tco: while (true) {
                    if (_215.length >= 1) {
                        var _1024 = _215.slice(1);
                        if (_214(_215[0])) {
                            var __tco__213 = Prelude[":"](_215[0])(_213);
                            var __tco__214 = _214;
                            _213 = __tco__213;
                            _214 = __tco__214;
                            _215 = _1024;
                            continue tco;
                        };
                    };
                    return {
                        init: reverse(_213), 
                        rest: _215
                    };
                };
            };
        };
    };
    return go([  ]);
})();
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var _1025 = comp(x)(y);
                if (_1025 instanceof Prelude.GT) {
                    return 1;
                };
                if (_1025 instanceof Prelude.EQ) {
                    return 0;
                };
                if (_1025 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match");
            };
        };
        return sortJS(comp$prime)(xs);
    };
};
var sort = function (__dict_Ord_0) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_0))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var semigroupArray = new Prelude.Semigroup(append);
var $$null = function (_199) {
    if (_199.length === 0) {
        return true;
    };
    return false;
};
var nubBy = function (_206) {
    return function (_207) {
        if (_207.length === 0) {
            return [  ];
        };
        if (_207.length >= 1) {
            var _1030 = _207.slice(1);
            return Prelude[":"](_207[0])(nubBy(_206)(filter(function (y) {
                return !_206(_207[0])(y);
            })(_1030)));
        };
        throw new Error("Failed pattern match");
    };
};
var nub = function (__dict_Eq_1) {
    return nubBy(Prelude["=="](__dict_Eq_1));
};
var mapMaybe = function (f) {
    return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
};
var last = function (__copy__196) {
    var _196 = __copy__196;
    tco: while (true) {
        if (_196.length >= 1) {
            var _1033 = _196.slice(1);
            if (_1033.length === 0) {
                return new Data_Maybe.Just(_196[0]);
            };
        };
        if (_196.length >= 1) {
            var _1035 = _196.slice(1);
            _196 = _1035;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var intersectBy = function (_203) {
    return function (_204) {
        return function (_205) {
            if (_204.length === 0) {
                return [  ];
            };
            if (_205.length === 0) {
                return [  ];
            };
            var el = function (x) {
                return findIndex(_203(x))(_205) >= 0;
            };
            return filter(el)(_204);
        };
    };
};
var intersect = function (__dict_Eq_2) {
    return intersectBy(Prelude["=="](__dict_Eq_2));
};
var init = function (_198) {
    if (_198.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(slice(0)(length(_198) - 1)(_198));
};
var head = function (_195) {
    if (_195.length >= 1) {
        var _1042 = _195.slice(1);
        return new Data_Maybe.Just(_195[0]);
    };
    return Data_Maybe.Nothing.value;
};
var groupBy = (function () {
    var go = function (__copy__210) {
        return function (__copy__211) {
            return function (__copy__212) {
                var _210 = __copy__210;
                var _211 = __copy__211;
                var _212 = __copy__212;
                tco: while (true) {
                    if (_212.length === 0) {
                        return reverse(_210);
                    };
                    if (_212.length >= 1) {
                        var _1047 = _212.slice(1);
                        var sp = span(_211(_212[0]))(_1047);
                        var __tco__210 = Prelude[":"](Prelude[":"](_212[0])(sp.init))(_210);
                        var __tco__211 = _211;
                        _210 = __tco__210;
                        _211 = __tco__211;
                        _212 = sp.rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return go([  ]);
})();
var group = function (__dict_Eq_3) {
    return function (xs) {
        return groupBy(Prelude["=="](__dict_Eq_3))(xs);
    };
};
var group$prime = function (__dict_Ord_4) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_4["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_4));
};
var functorArray = new Prelude.Functor(map);
var elemLastIndex = function (__dict_Eq_5) {
    return function (x) {
        return findLastIndex(Prelude["=="](__dict_Eq_5)(x));
    };
};
var elemIndex = function (__dict_Eq_6) {
    return function (x) {
        return findIndex(Prelude["=="](__dict_Eq_6)(x));
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteBy = function (_200) {
    return function (_201) {
        return function (_202) {
            if (_202.length === 0) {
                return [  ];
            };
            var _1051 = findIndex(_200(_201))(_202);
            if (_1051 < 0) {
                return _202;
            };
            return deleteAt(_1051)(1)(_202);
        };
    };
};
var $$delete = function (__dict_Eq_7) {
    return deleteBy(Prelude["=="](__dict_Eq_7));
};
var $bslash$bslash = function (__dict_Eq_8) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy__208) {
                return function (__copy__209) {
                    var _208 = __copy__208;
                    var _209 = __copy__209;
                    tco: while (true) {
                        if (_209.length === 0) {
                            return _208;
                        };
                        if (_208.length === 0) {
                            return [  ];
                        };
                        if (_209.length >= 1) {
                            var _1055 = _209.slice(1);
                            var __tco__208 = $$delete(__dict_Eq_8)(_209[0])(_208);
                            _208 = __tco__208;
                            _209 = _1055;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return go(xs)(ys);
        };
    };
};
var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
var monadArray = new Prelude.Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
    return applyArray;
});
var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
    return functorArray;
});
var applicativeArray = new Prelude.Applicative(function () {
    return applyArray;
}, singleton);
var altArray = new Control_Alt.Alt(append, function () {
    return functorArray;
});
var plusArray = new Control_Plus.Plus(function () {
    return altArray;
}, [  ]);
var alternativeArray = new Control_Alternative.Alternative(function () {
    return plusArray;
}, function () {
    return applicativeArray;
});
var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
    return alternativeArray;
}, function () {
    return monadArray;
});
module.exports = {
    "!!": $bang$bang, 
    "..": $dot$dot, 
    "\\\\": $bslash$bslash, 
    altArray: altArray, 
    alternativeArray: alternativeArray, 
    append: append, 
    applicativeArray: applicativeArray, 
    applyArray: applyArray, 
    bindArray: bindArray, 
    catMaybes: catMaybes, 
    concat: concat, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    drop: drop, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filter: filter, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    functorArray: functorArray, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    init: init, 
    insertAt: insertAt, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    length: length, 
    map: map, 
    mapMaybe: mapMaybe, 
    monadArray: monadArray, 
    monadPlusArray: monadPlusArray, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    plusArray: plusArray, 
    range: range, 
    reverse: reverse, 
    semigroupArray: semigroupArray, 
    singleton: singleton, 
    snoc: snoc, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    tail: tail, 
    take: take, 
    takeWhile: takeWhile, 
    updateAt: updateAt, 
    zipWith: zipWith
};

},{"Control.Alt":4,"Control.Alternative":5,"Control.MonadPlus":13,"Control.Plus":14,"Data.Maybe":32,"Prelude":113,"Prelude.Unsafe":112}],21:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Char = {
    create: function (value) {
        return value;
    }
};

    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;

    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
var showChar = new Prelude.Show(function (_138) {
    return "Char " + Prelude.show(Prelude.showString)(_138);
});
var eqChar = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqChar)(a)(b);
    };
}, function (_134) {
    return function (_135) {
        return _134 === _135;
    };
});
var ordChar = new Prelude.Ord(function () {
    return eqChar;
}, function (_136) {
    return function (_137) {
        return Prelude.compare(Prelude.ordString)(_136)(_137);
    };
});
var charString = function (_133) {
    return _133;
};
module.exports = {
    charString: charString, 
    eqChar: eqChar, 
    fromCharCode: fromCharCode, 
    ordChar: ordChar, 
    showChar: showChar, 
    toCharCode: toCharCode
};

},{"Prelude":113}],22:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Data_Contravariant = require("Data.Contravariant");
var Const = {
    create: function (value) {
        return value;
    }
};
var showConst = function (__dict_Show_2) {
    return new Prelude.Show(function (_420) {
        return "Const (" + (Prelude.show(__dict_Show_2)(_420) + ")");
    });
};
var semigroupoidConst = new Prelude.Semigroupoid(function (_421) {
    return function (_422) {
        return _422;
    };
});
var semigroupConst = function (__dict_Semigroup_3) {
    return new Prelude.Semigroup(function (_423) {
        return function (_424) {
            return Prelude["<>"](__dict_Semigroup_3)(_423)(_424);
        };
    });
};
var monoidConst = function (__dict_Monoid_5) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConst(__dict_Monoid_5["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_5));
};
var getConst = function (_415) {
    return _415;
};
var functorConst = new Prelude.Functor(function (_425) {
    return function (_426) {
        return _426;
    };
});
var foldableConst = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (_440) {
        return function (_441) {
            return Data_Monoid.mempty(__dict_Monoid_6);
        };
    };
}, function (_437) {
    return function (_438) {
        return function (_439) {
            return _438;
        };
    };
}, function (_434) {
    return function (_435) {
        return function (_436) {
            return _435;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (__dict_Applicative_1) {
    return function (_444) {
        return Prelude.pure(__dict_Applicative_1)(_444);
    };
}, function (__dict_Applicative_0) {
    return function (_442) {
        return function (_443) {
            return Prelude.pure(__dict_Applicative_0)(_443);
        };
    };
});
var eqConst = function (__dict_Eq_7) {
    return new Prelude.Eq(function (c) {
        return function (c$prime) {
            return !Prelude["=="](eqConst(__dict_Eq_7))(c)(c$prime);
        };
    }, function (_416) {
        return function (_417) {
            return Prelude["=="](__dict_Eq_7)(_416)(_417);
        };
    });
};
var ordConst = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqConst(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_418) {
        return function (_419) {
            return Prelude.compare(__dict_Ord_4)(_418)(_419);
        };
    });
};
var contravariantConst = new Data_Contravariant.Contravariant(function (_432) {
    return function (_433) {
        return _433;
    };
});
var applyConst = function (__dict_Semigroup_9) {
    return new Prelude.Apply(function (_427) {
        return function (_428) {
            return Prelude["<>"](__dict_Semigroup_9)(_427)(_428);
        };
    }, function () {
        return functorConst;
    });
};
var bindConst = function (__dict_Semigroup_8) {
    return new Prelude.Bind(function (_429) {
        return function (_430) {
            return _429;
        };
    }, function () {
        return applyConst(__dict_Semigroup_8);
    });
};
var applicativeConst = function (__dict_Monoid_10) {
    return new Prelude.Applicative(function () {
        return applyConst(__dict_Monoid_10["__superclass_Prelude.Semigroup_0"]());
    }, function (_431) {
        return Data_Monoid.mempty(__dict_Monoid_10);
    });
};
module.exports = {
    Const: Const, 
    applicativeConst: applicativeConst, 
    applyConst: applyConst, 
    bindConst: bindConst, 
    contravariantConst: contravariantConst, 
    eqConst: eqConst, 
    foldableConst: foldableConst, 
    functorConst: functorConst, 
    getConst: getConst, 
    monoidConst: monoidConst, 
    ordConst: ordConst, 
    semigroupConst: semigroupConst, 
    semigroupoidConst: semigroupoidConst, 
    showConst: showConst, 
    traversableConst: traversableConst
};

},{"Data.Contravariant":23,"Data.Foldable":27,"Data.Monoid":38,"Data.Traversable":47,"Prelude":113}],23:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Contravariant($greater$dollar$less) {
    this[">$<"] = $greater$dollar$less;
};
var $greater$dollar$less = function (dict) {
    return dict[">$<"];
};
module.exports = {
    ">$<": $greater$dollar$less, 
    Contravariant: Contravariant
};

},{"Prelude":113}],24:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Global = require("Global");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
function January() {

};
January.value = new January();
function February() {

};
February.value = new February();
function March() {

};
March.value = new March();
function April() {

};
April.value = new April();
function May() {

};
May.value = new May();
function June() {

};
June.value = new June();
function July() {

};
July.value = new July();
function August() {

};
August.value = new August();
function September() {

};
September.value = new September();
function October() {

};
October.value = new October();
function November() {

};
November.value = new November();
function December() {

};
December.value = new December();
function Sunday() {

};
Sunday.value = new Sunday();
function Monday() {

};
Monday.value = new Monday();
function Tuesday() {

};
Tuesday.value = new Tuesday();
function Wednesday() {

};
Wednesday.value = new Wednesday();
function Thursday() {

};
Thursday.value = new Thursday();
function Friday() {

};
Friday.value = new Friday();
function Saturday() {

};
Saturday.value = new Saturday();
function DateTime(value0) {
    this.value0 = value0;
};
DateTime.create = function (value0) {
    return new DateTime(value0);
};
function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
function jsDateConstructor(x) {   return new Date(x); };
function strictJsDate(Just, Nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return Nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    if (idx < 0) return Nothing;
    else return Just(date);
  };
function jsDateFromRecord(r) {  return new Date(r.year, r.month, r.day, r.hours, r.minutes, r.seconds, r.milliseconds); };

  function nowImpl(f) {
    return function(){
      return f(new Date()); 
    };    
  }
  ;
var toJSDate = function (_718) {
    return _718.value0;
};
var showMonth = new Prelude.Show(function (_723) {
    if (_723 instanceof January) {
        return "January";
    };
    if (_723 instanceof February) {
        return "February";
    };
    if (_723 instanceof March) {
        return "March";
    };
    if (_723 instanceof April) {
        return "April";
    };
    if (_723 instanceof May) {
        return "May";
    };
    if (_723 instanceof June) {
        return "June";
    };
    if (_723 instanceof July) {
        return "July";
    };
    if (_723 instanceof August) {
        return "August";
    };
    if (_723 instanceof September) {
        return "September";
    };
    if (_723 instanceof October) {
        return "October";
    };
    if (_723 instanceof November) {
        return "November";
    };
    if (_723 instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match");
});
var showDayOfWeek = new Prelude.Show(function (_726) {
    if (_726 instanceof Sunday) {
        return "Sunday";
    };
    if (_726 instanceof Monday) {
        return "Monday";
    };
    if (_726 instanceof Tuesday) {
        return "Tuesday";
    };
    if (_726 instanceof Wednesday) {
        return "Wednesday";
    };
    if (_726 instanceof Thursday) {
        return "Thursday";
    };
    if (_726 instanceof Friday) {
        return "Friday";
    };
    if (_726 instanceof Saturday) {
        return "Saturday";
    };
    throw new Error("Failed pattern match");
});
var now = nowImpl(DateTime.create);
var monthToEnum = function (_714) {
    if (_714 === 0) {
        return new Data_Maybe.Just(January.value);
    };
    if (_714 === 1) {
        return new Data_Maybe.Just(February.value);
    };
    if (_714 === 2) {
        return new Data_Maybe.Just(March.value);
    };
    if (_714 === 3) {
        return new Data_Maybe.Just(April.value);
    };
    if (_714 === 4) {
        return new Data_Maybe.Just(May.value);
    };
    if (_714 === 5) {
        return new Data_Maybe.Just(June.value);
    };
    if (_714 === 6) {
        return new Data_Maybe.Just(July.value);
    };
    if (_714 === 7) {
        return new Data_Maybe.Just(August.value);
    };
    if (_714 === 8) {
        return new Data_Maybe.Just(September.value);
    };
    if (_714 === 9) {
        return new Data_Maybe.Just(October.value);
    };
    if (_714 === 10) {
        return new Data_Maybe.Just(November.value);
    };
    if (_714 === 11) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
};
var monthFromEnum = function (_715) {
    if (_715 instanceof January) {
        return 0;
    };
    if (_715 instanceof February) {
        return 1;
    };
    if (_715 instanceof March) {
        return 2;
    };
    if (_715 instanceof April) {
        return 3;
    };
    if (_715 instanceof May) {
        return 4;
    };
    if (_715 instanceof June) {
        return 5;
    };
    if (_715 instanceof July) {
        return 6;
    };
    if (_715 instanceof August) {
        return 7;
    };
    if (_715 instanceof September) {
        return 8;
    };
    if (_715 instanceof October) {
        return 9;
    };
    if (_715 instanceof November) {
        return 10;
    };
    if (_715 instanceof December) {
        return 11;
    };
    throw new Error("Failed pattern match");
};
var liftDate = function (_719) {
    return function (_720) {
        return _719(_720.value0);
    };
};
var millisecond = liftDate(jsDateMethod("getMilliseconds"));
var millisecondUTC = liftDate(jsDateMethod("getUTCMilliseconds"));
var minute = liftDate(jsDateMethod("getMinutes"));
var minuteUTC = liftDate(jsDateMethod("getUTCMinutes"));
var second = liftDate(jsDateMethod("getSeconds"));
var secondUTC = liftDate(jsDateMethod("getUTCSeconds"));
var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
var timezoneOffset = liftDate(jsDateMethod("getTimezoneOffset"));
var toEpochMilliseconds = liftDate(jsDateMethod("getTime"));
var liftOp = function (op) {
    return function (x) {
        return function (y) {
            return op(toEpochMilliseconds(x))(toEpochMilliseconds(y));
        };
    };
};
var year = liftDate(jsDateMethod("getFullYear"));
var yearUTC = liftDate(jsDateMethod("getUTCFullYear"));
var hourUTC = liftDate(jsDateMethod("getUTCHours"));
var hour = liftDate(jsDateMethod("getHours"));
var fromJSDate = function (d) {
    return Global.isNaN(jsDateMethod("getTime")(d)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(new DateTime(d));
};
var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
var fromStringStrict = function (s) {
    return Prelude[">>="](Data_Maybe.bindMaybe)(strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
};
var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
var eqMonth = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqMonth)(a)(b);
    };
}, function (_721) {
    return function (_722) {
        if (_721 instanceof January && _722 instanceof January) {
            return true;
        };
        if (_721 instanceof February && _722 instanceof February) {
            return true;
        };
        if (_721 instanceof March && _722 instanceof March) {
            return true;
        };
        if (_721 instanceof April && _722 instanceof April) {
            return true;
        };
        if (_721 instanceof May && _722 instanceof May) {
            return true;
        };
        if (_721 instanceof June && _722 instanceof June) {
            return true;
        };
        if (_721 instanceof July && _722 instanceof July) {
            return true;
        };
        if (_721 instanceof August && _722 instanceof August) {
            return true;
        };
        if (_721 instanceof September && _722 instanceof September) {
            return true;
        };
        if (_721 instanceof October && _722 instanceof October) {
            return true;
        };
        if (_721 instanceof November && _722 instanceof November) {
            return true;
        };
        if (_721 instanceof December && _722 instanceof December) {
            return true;
        };
        return false;
    };
});
var eqDayOfWeek = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqDayOfWeek)(a)(b);
    };
}, function (_724) {
    return function (_725) {
        if (_724 instanceof Sunday && _725 instanceof Sunday) {
            return true;
        };
        if (_724 instanceof Monday && _725 instanceof Monday) {
            return true;
        };
        if (_724 instanceof Tuesday && _725 instanceof Tuesday) {
            return true;
        };
        if (_724 instanceof Wednesday && _725 instanceof Wednesday) {
            return true;
        };
        if (_724 instanceof Thursday && _725 instanceof Thursday) {
            return true;
        };
        if (_724 instanceof Friday && _725 instanceof Friday) {
            return true;
        };
        if (_724 instanceof Saturday && _725 instanceof Saturday) {
            return true;
        };
        return false;
    };
});
var eqDate = new Prelude.Eq(liftOp(Prelude["/="](Prelude.eqNumber)), liftOp(Prelude["=="](Prelude.eqNumber)));
var ordDate = new Prelude.Ord(function () {
    return eqDate;
}, liftOp(Prelude.compare(Prelude.ordNumber)));
var ordMonth = new Prelude.Ord(function () {
    return eqMonth;
}, function (a) {
    return function (b) {
        return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumMonth)(a))(Data_Enum.fromEnum(enumMonth)(b));
    };
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, 12, January.value, monthFromEnum, December.value, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
var month = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getMonth"))));
var monthUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getUTCMonth"))));
var dayUTC = liftDate(jsDateMethod("getUTCDate"));
var dayOfWeekToEnum = function (_716) {
    if (_716 === 0) {
        return new Data_Maybe.Just(Sunday.value);
    };
    if (_716 === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (_716 === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (_716 === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (_716 === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (_716 === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (_716 === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    return Data_Maybe.Nothing.value;
};
var dayOfWeekFromEnum = function (_717) {
    if (_717 instanceof Sunday) {
        return 0;
    };
    if (_717 instanceof Monday) {
        return 1;
    };
    if (_717 instanceof Tuesday) {
        return 2;
    };
    if (_717 instanceof Wednesday) {
        return 3;
    };
    if (_717 instanceof Thursday) {
        return 4;
    };
    if (_717 instanceof Friday) {
        return 5;
    };
    if (_717 instanceof Saturday) {
        return 6;
    };
    throw new Error("Failed pattern match");
};
var ordDayOfWeek = new Prelude.Ord(function () {
    return eqDayOfWeek;
}, function (a) {
    return function (b) {
        return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumDayOfWeek)(a))(Data_Enum.fromEnum(enumDayOfWeek)(b));
    };
});
var enumDayOfWeek = new Data_Enum.Enum(function () {
    return ordDayOfWeek;
}, 7, Sunday.value, dayOfWeekFromEnum, Saturday.value, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
var dayOfWeekUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getUTCDay"))));
var dayOfWeek = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getDay"))));
var day = liftDate(jsDateMethod("getDate"));
var dateTime = function (y) {
    return function (m) {
        return function (d) {
            return function (h) {
                return function (n) {
                    return function (s) {
                        return function (ms) {
                            return fromJSDate(jsDateFromRecord({
                                year: y, 
                                month: Data_Enum.fromEnum(enumMonth)(m), 
                                day: d, 
                                hours: h, 
                                minutes: n, 
                                seconds: s, 
                                milliseconds: ms
                            }));
                        };
                    };
                };
            };
        };
    };
};
var date = function (y) {
    return function (m) {
        return function (d) {
            return dateTime(y)(m)(d)(0)(0)(0)(0);
        };
    };
};
module.exports = {
    April: April, 
    August: August, 
    December: December, 
    February: February, 
    January: January, 
    July: July, 
    June: June, 
    March: March, 
    May: May, 
    November: November, 
    October: October, 
    September: September, 
    date: date, 
    dateTime: dateTime, 
    day: day, 
    dayOfWeek: dayOfWeek, 
    dayOfWeekUTC: dayOfWeekUTC, 
    dayUTC: dayUTC, 
    enumDayOfWeek: enumDayOfWeek, 
    enumMonth: enumMonth, 
    eqDate: eqDate, 
    eqDayOfWeek: eqDayOfWeek, 
    eqMonth: eqMonth, 
    fromEpochMilliseconds: fromEpochMilliseconds, 
    fromJSDate: fromJSDate, 
    fromString: fromString, 
    fromStringStrict: fromStringStrict, 
    hour: hour, 
    hourUTC: hourUTC, 
    millisecond: millisecond, 
    millisecondUTC: millisecondUTC, 
    minute: minute, 
    minuteUTC: minuteUTC, 
    month: month, 
    monthUTC: monthUTC, 
    now: now, 
    ordDate: ordDate, 
    ordDayOfWeek: ordDayOfWeek, 
    ordMonth: ordMonth, 
    second: second, 
    secondUTC: secondUTC, 
    showDate: showDate, 
    showDayOfWeek: showDayOfWeek, 
    showMonth: showMonth, 
    timezoneOffset: timezoneOffset, 
    toEpochMilliseconds: toEpochMilliseconds, 
    toJSDate: toJSDate, 
    year: year, 
    yearUTC: yearUTC
};

},{"Data.Enum":26,"Data.Function":28,"Data.Maybe":32,"Data.Maybe.Unsafe":31,"Global":99,"Prelude":113}],25:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
function Left(value0) {
    this.value0 = value0;
};
Left.create = function (value0) {
    return new Left(value0);
};
function Right(value0) {
    this.value0 = value0;
};
Right.create = function (value0) {
    return new Right(value0);
};
var showEither = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return new Prelude.Show(function (_161) {
            if (_161 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_0)(_161.value0) + ")");
            };
            if (_161 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_1)(_161.value0) + ")");
            };
            throw new Error("Failed pattern match");
        });
    };
};
var functorEither = new Prelude.Functor(function (_155) {
    return function (_156) {
        if (_156 instanceof Left) {
            return new Left(_156.value0);
        };
        if (_156 instanceof Right) {
            return new Right(_155(_156.value0));
        };
        throw new Error("Failed pattern match");
    };
});
var eqEither = function (__dict_Eq_4) {
    return function (__dict_Eq_5) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqEither(__dict_Eq_4)(__dict_Eq_5))(a)(b);
            };
        }, function (_162) {
            return function (_163) {
                if (_162 instanceof Left && _163 instanceof Left) {
                    return Prelude["=="](__dict_Eq_4)(_162.value0)(_163.value0);
                };
                if (_162 instanceof Right && _163 instanceof Right) {
                    return Prelude["=="](__dict_Eq_5)(_162.value0)(_163.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_2) {
    return function (__dict_Ord_3) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_2["__superclass_Prelude.Eq_0"]())(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
        }, function (_164) {
            return function (_165) {
                if (_164 instanceof Left && _165 instanceof Left) {
                    return Prelude.compare(__dict_Ord_2)(_164.value0)(_165.value0);
                };
                if (_164 instanceof Right && _165 instanceof Right) {
                    return Prelude.compare(__dict_Ord_3)(_164.value0)(_165.value0);
                };
                if (_164 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_165 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
};
var either = function (_152) {
    return function (_153) {
        return function (_154) {
            if (_154 instanceof Left) {
                return _152(_154.value0);
            };
            if (_154 instanceof Right) {
                return _153(_154.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var applyEither = new Prelude.Apply(function (_157) {
    return function (_158) {
        if (_157 instanceof Left) {
            return new Left(_157.value0);
        };
        if (_157 instanceof Right) {
            return Prelude["<$>"](functorEither)(_157.value0)(_158);
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return functorEither;
});
var bindEither = new Prelude.Bind(either(function (e) {
    return function (_) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}), function () {
    return applyEither;
});
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function (_159) {
    return function (_160) {
        if (_159 instanceof Left) {
            return _160;
        };
        return _159;
    };
}, function () {
    return functorEither;
});
module.exports = {
    Left: Left, 
    Right: Right, 
    altEither: altEither, 
    applicativeEither: applicativeEither, 
    applyEither: applyEither, 
    bindEither: bindEither, 
    either: either, 
    eqEither: eqEither, 
    functorEither: functorEither, 
    isLeft: isLeft, 
    isRight: isRight, 
    monadEither: monadEither, 
    ordEither: ordEither, 
    showEither: showEither
};

},{"Control.Alt":4,"Prelude":113}],26:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Char = require("Data.Char");
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Cardinality = {
    create: function (value) {
        return value;
    }
};
function Enum(__superclass_Prelude$dotOrd_0, cardinality, firstEnum, fromEnum, lastEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
    this.cardinality = cardinality;
    this.firstEnum = firstEnum;
    this.fromEnum = fromEnum;
    this.lastEnum = lastEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
function floor(n){ return Math.floor(n); };
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_694) {
    return _694;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality.create(runCardinality(l) * runCardinality(r));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_2) {
    return function (c) {
        return Cardinality.create(1 + runCardinality(c));
    };
};
var maybeToEnum = function (__dict_Enum_3) {
    return function (_699) {
        return function (_700) {
            if (_700 <= runCardinality(maybeCardinality(__dict_Enum_3)(_699))) {
                return _700 === 0 ? Data_Maybe.Just.create(Data_Maybe.Nothing.value) : Data_Maybe.Just.create(toEnum(__dict_Enum_3)(_700 - 1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var lastEnum = function (dict) {
    return dict.lastEnum;
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                return e <= to ? Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step)) : Data_Maybe.Nothing.value;
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(1);
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_4) {
    return function (__dict_Enum_5) {
        return function (_703) {
            return function (_704) {
                return fromEnum(__dict_Enum_4)(_704.value0) * runCardinality(_703) + fromEnum(__dict_Enum_5)(_704.value1);
            };
        };
    };
};
var firstEnum = function (dict) {
    return dict.firstEnum;
};
var enumFromTo = function (__dict_Enum_6) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_6)(b);
            var a$prime = fromEnum(__dict_Enum_6)(a);
            return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_6))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_7) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_7)(c);
                var b$prime = fromEnum(__dict_Enum_7)(b);
                var a$prime = fromEnum(__dict_Enum_7)(a);
                return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_7))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_8) {
    return function (__dict_Enum_9) {
        return function (_705) {
            return function (_706) {
                if (_706 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_8)(_706.value0);
                };
                if (_706 instanceof Data_Either.Right) {
                    return fromEnum(__dict_Enum_9)(_706.value0) + runCardinality(_705);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (l) {
            return function (r) {
                return Cardinality.create(runCardinality(l) + runCardinality(r));
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    return n >= 0 && n < runCardinality(carda) ? Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_12)(n)) : n >= runCardinality(carda) && n < runCardinality(eitherCardinality(__dict_Enum_12)(__dict_Enum_13)(carda)(cardb)) ? Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_13)(n - runCardinality(carda))) : Data_Maybe.Nothing.value;
                };
            };
        };
    };
};
var div = function (a) {
    return function (b) {
        return floor(a / b);
    };
};
var tupleToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_14)(div(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_15)(n % runCardinality(cardb)));
            };
        };
    };
};
var defaultToEnum = function (_695) {
    return function (_696) {
        return function (_697) {
            if (_697 < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (_697 === 0) {
                return new Data_Maybe.Just(_696);
            };
            return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(_695)(_696)(_697 - 1))(_695);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1);
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(pred$prime)(prd) + 1;
        })(pred$prime(e));
    };
};
var charToEnum = function (_698) {
    if (_698 >= 0 && _698 <= 65535) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(_698));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Data_Char.ordChar;
}, 65535 + 1, Data_Char.fromCharCode(0), charFromEnum, Data_Char.fromCharCode(65535), defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.ordEither(__dict_Enum_16["__superclass_Prelude.Ord_0"]())(__dict_Enum_17["__superclass_Prelude.Ord_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), new Data_Either.Left(firstEnum(__dict_Enum_16)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), new Data_Either.Right(lastEnum(__dict_Enum_17)), function (_713) {
            if (_713 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_16)(_713.value0));
            };
            if (_713 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_16))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_17)(_713.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_712) {
            if (_712 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_17))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_16)(_712.value0));
            };
            if (_712 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_17)(_712.value0));
            };
            throw new Error("Failed pattern match");
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe(__dict_Enum_18["__superclass_Prelude.Ord_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), Data_Maybe.Nothing.value, function (_709) {
        if (_709 instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (_709 instanceof Data_Maybe.Just) {
            return fromEnum(__dict_Enum_18)(_709.value0) + 1;
        };
        throw new Error("Failed pattern match");
    }, Data_Maybe.Just.create(lastEnum(__dict_Enum_18)), function (_708) {
        if (_708 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_708 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_708.value0));
        };
        throw new Error("Failed pattern match");
    }, function (_707) {
        if (_707 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_18)));
        };
        if (_707 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_707.value0));
        };
        throw new Error("Failed pattern match");
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(__dict_Enum_19["__superclass_Prelude.Ord_0"]())(__dict_Enum_20["__superclass_Prelude.Ord_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_19), firstEnum(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_19), lastEnum(__dict_Enum_20)), function (_711) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_20)))(pred(__dict_Enum_19)(_711.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_711.value0)))(pred(__dict_Enum_20)(_711.value1));
        }, function (_710) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_20)))(succ(__dict_Enum_19)(_710.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_710.value0)))(succ(__dict_Enum_20)(_710.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_701) {
    if (!_701) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_702) {
    if (_702) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var booleanFirstEnum = false;
var enumBoolean = new Enum(function () {
    return Prelude.ordBoolean;
}, 2, booleanFirstEnum, defaultFromEnum(booleanPred), true, booleanPred, booleanSucc, defaultToEnum(booleanSucc)(booleanFirstEnum));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    cardinality: cardinality, 
    defaultFromEnum: defaultFromEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    defaultToEnum: defaultToEnum, 
    enumBoolean: enumBoolean, 
    enumChar: enumChar, 
    enumEither: enumEither, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    enumMaybe: enumMaybe, 
    enumTuple: enumTuple, 
    firstEnum: firstEnum, 
    fromEnum: fromEnum, 
    intFromTo: intFromTo, 
    intStepFromTo: intStepFromTo, 
    lastEnum: lastEnum, 
    pred: pred, 
    runCardinality: runCardinality, 
    succ: succ, 
    toEnum: toEnum
};

},{"Data.Array":20,"Data.Char":21,"Data.Either":25,"Data.Maybe":32,"Data.Maybe.Unsafe":31,"Data.Tuple":49,"Data.Unfoldable":50,"Prelude":113}],27:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Monoid = require("Data.Monoid");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid_First = require("Data.Monoid.First");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};

  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };

  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryArr));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_388) {
                    return function (_389) {
                        if (_388.init) {
                            return {
                                init: false, 
                                acc: _389
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_388.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(_389))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var mconcat = function (__dict_Foldable_8) {
    return function (__dict_Monoid_9) {
        return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
    };
};
var or = function (__dict_Foldable_10) {
    return foldl(__dict_Foldable_10)(Prelude["||"](Prelude.boolLikeBoolean))(false);
};
var product = function (__dict_Foldable_11) {
    return foldl(__dict_Foldable_11)(Prelude["*"](Prelude.numNumber))(1);
};
var sum = function (__dict_Foldable_12) {
    return foldl(__dict_Foldable_12)(Prelude["+"](Prelude.numNumber))(0);
};
var foldableTuple = new Foldable(function (__dict_Monoid_13) {
    return function (_386) {
        return function (_387) {
            return _386(_387.value1);
        };
    };
}, function (_383) {
    return function (_384) {
        return function (_385) {
            return _383(_384)(_385.value1);
        };
    };
}, function (_380) {
    return function (_381) {
        return function (_382) {
            return _380(_382.value1)(_381);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_14) {
    return function (_378) {
        return function (_379) {
            if (_379 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_14);
            };
            if (_379 instanceof Data_Maybe.Just) {
                return _378(_379.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_375) {
    return function (_376) {
        return function (_377) {
            if (_377 instanceof Data_Maybe.Nothing) {
                return _376;
            };
            if (_377 instanceof Data_Maybe.Just) {
                return _375(_376)(_377.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_372) {
    return function (_373) {
        return function (_374) {
            if (_374 instanceof Data_Maybe.Nothing) {
                return _373;
            };
            if (_374 instanceof Data_Maybe.Just) {
                return _372(_374.value0)(_373);
            };
            throw new Error("Failed pattern match");
        };
    };
});
var foldableEither = new Foldable(function (__dict_Monoid_15) {
    return function (_370) {
        return function (_371) {
            if (_371 instanceof Data_Either.Left) {
                return Data_Monoid.mempty(__dict_Monoid_15);
            };
            if (_371 instanceof Data_Either.Right) {
                return _370(_371.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_367) {
    return function (_368) {
        return function (_369) {
            if (_369 instanceof Data_Either.Left) {
                return _368;
            };
            if (_369 instanceof Data_Either.Right) {
                return _367(_368)(_369.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
}, function (_364) {
    return function (_365) {
        return function (_366) {
            if (_366 instanceof Data_Either.Left) {
                return _365;
            };
            if (_366 instanceof Data_Either.Right) {
                return _364(_366.value0)(_365);
            };
            throw new Error("Failed pattern match");
        };
    };
});
var foldableArray = new Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return function (xs) {
            return foldr(foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_16))(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (xs) {
            return foldlArray(f)(z)(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (xs) {
            return foldrArray(f)(z)(xs);
        };
    };
});
var foldMap = function (dict) {
    return dict.foldMap;
};
var lookup = function (__dict_Eq_17) {
    return function (__dict_Foldable_18) {
        return function (a) {
            return function (f) {
                return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_18)(Data_Monoid_First.monoidFirst)(function (_363) {
                    return Prelude["=="](__dict_Eq_17)(a)(_363.value0) ? new Data_Maybe.Just(_363.value1) : Data_Maybe.Nothing.value;
                })(f));
            };
        };
    };
};
var fold = function (__dict_Foldable_19) {
    return function (__dict_Monoid_20) {
        return foldMap(__dict_Foldable_19)(__dict_Monoid_20)(Prelude.id(Prelude.categoryArr));
    };
};
var find = function (__dict_Foldable_21) {
    return function (p) {
        return function (f) {
            var _1493 = foldMap(__dict_Foldable_21)(Data_Monoid.monoidArray)(function (x) {
                return p(x) ? [ x ] : [  ];
            })(f);
            if (_1493.length >= 1) {
                var _1495 = _1493.slice(1);
                return new Data_Maybe.Just(_1493[0]);
            };
            if (_1493.length === 0) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    };
};
var any = function (__dict_Foldable_22) {
    return function (p) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_22)(Data_Monoid.monoidArray)(function (x) {
            return [ p(x) ];
        }));
    };
};
var elem = function (__dict_Eq_23) {
    return function (__dict_Foldable_24) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_24))(Prelude["=="](__dict_Eq_23));
    };
};
var notElem = function (__dict_Eq_25) {
    return function (__dict_Foldable_26) {
        return function (x) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_25)(__dict_Foldable_26)(x));
        };
    };
};
var and = function (__dict_Foldable_27) {
    return foldl(__dict_Foldable_27)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
};
var all = function (__dict_Foldable_28) {
    return function (p) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_28)(Data_Monoid.monoidArray)(function (x) {
            return [ p(x) ];
        }));
    };
};
module.exports = {
    Foldable: Foldable, 
    all: all, 
    and: and, 
    any: any, 
    elem: elem, 
    find: find, 
    fold: fold, 
    foldMap: foldMap, 
    foldableArray: foldableArray, 
    foldableEither: foldableEither, 
    foldableMaybe: foldableMaybe, 
    foldableTuple: foldableTuple, 
    foldl: foldl, 
    foldlArray: foldlArray, 
    foldr: foldr, 
    foldrArray: foldrArray, 
    for_: for_, 
    intercalate: intercalate, 
    lookup: lookup, 
    mconcat: mconcat, 
    notElem: notElem, 
    or: or, 
    product: product, 
    sequence_: sequence_, 
    sum: sum, 
    traverse_: traverse_
};

},{"Control.Apply":6,"Data.Either":25,"Data.Maybe":32,"Data.Monoid":38,"Data.Monoid.First":37,"Data.Tuple":49,"Prelude":113}],28:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function mkFn0(fn) {  return function() {    return fn({});  };};
function mkFn1(fn) {  return function(a) {    return fn(a);  };};
function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
function runFn0(fn) {  return fn();};
function runFn1(fn) {  return function(a) {    return fn(a);  };};
function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    mkFn0: mkFn0, 
    mkFn1: mkFn1, 
    mkFn10: mkFn10, 
    mkFn2: mkFn2, 
    mkFn3: mkFn3, 
    mkFn4: mkFn4, 
    mkFn5: mkFn5, 
    mkFn6: mkFn6, 
    mkFn7: mkFn7, 
    mkFn8: mkFn8, 
    mkFn9: mkFn9, 
    on: on, 
    runFn0: runFn0, 
    runFn1: runFn1, 
    runFn10: runFn10, 
    runFn2: runFn2, 
    runFn3: runFn3, 
    runFn4: runFn4, 
    runFn5: runFn5, 
    runFn6: runFn6, 
    runFn7: runFn7, 
    runFn8: runFn8, 
    runFn9: runFn9
};

},{"Prelude":113}],29:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Control_Extend = require("Control.Extend");
var Control_Comonad = require("Control.Comonad");
var Identity = {
    create: function (value) {
        return value;
    }
};
var showConst = function (__dict_Show_2) {
    return new Prelude.Show(function (_574) {
        return "Identity (" + (Prelude.show(__dict_Show_2)(_574) + ")");
    });
};
var runIdentity = function (_569) {
    return _569;
};
var functorIdentity = new Prelude.Functor(function (_575) {
    return function (_576) {
        return _575(_576);
    };
});
var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_4) {
    return function (_586) {
        return function (_587) {
            return _586(_587);
        };
    };
}, function (_583) {
    return function (_584) {
        return function (_585) {
            return _583(_584)(_585);
        };
    };
}, function (_580) {
    return function (_581) {
        return function (_582) {
            return _580(_582)(_581);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (__dict_Applicative_1) {
    return function (_590) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_590);
    };
}, function (__dict_Applicative_0) {
    return function (_588) {
        return function (_589) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_588(_589));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function (f) {
    return function (m) {
        return f(m);
    };
}, function () {
    return functorIdentity;
});
var eqIdentity = function (__dict_Eq_5) {
    return new Prelude.Eq(function (x) {
        return function (y) {
            return !Prelude["=="](eqIdentity(__dict_Eq_5))(x)(y);
        };
    }, function (_570) {
        return function (_571) {
            return Prelude["=="](__dict_Eq_5)(_570)(_571);
        };
    });
};
var ordIdentity = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqIdentity(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_572) {
        return function (_573) {
            return Prelude.compare(__dict_Ord_3)(_572)(_573);
        };
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (_579) {
    return _579;
});
var applyIdentity = new Prelude.Apply(function (_577) {
    return function (_578) {
        return _577(_578);
    };
}, function () {
    return functorIdentity;
});
var bindIdentity = new Prelude.Bind(function (m) {
    return function (f) {
        return f(runIdentity(m));
    };
}, function () {
    return applyIdentity;
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity.create);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    applicativeIdentity: applicativeIdentity, 
    applyIdentity: applyIdentity, 
    bindIdentity: bindIdentity, 
    comonadIdentity: comonadIdentity, 
    eqIdentity: eqIdentity, 
    extendIdentity: extendIdentity, 
    foldableIdentity: foldableIdentity, 
    functorIdentity: functorIdentity, 
    monadIdentity: monadIdentity, 
    ordIdentity: ordIdentity, 
    runIdentity: runIdentity, 
    showConst: showConst, 
    traversableIdentity: traversableIdentity
};

},{"Control.Comonad":7,"Control.Extend":8,"Data.Foldable":27,"Data.Traversable":47,"Prelude":113}],30:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
function Leaf() {

};
Leaf.value = new Leaf();
function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Two.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Two(value0, value1, value2, value3);
            };
        };
    };
};
function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
};
Three.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return function (value6) {
                            return new Three(value0, value1, value2, value3, value4, value5, value6);
                        };
                    };
                };
            };
        };
    };
};
function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoLeft(value0, value1, value2);
        };
    };
};
function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoRight(value0, value1, value2);
        };
    };
};
function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeMiddle.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeRight(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
KickUp.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new KickUp(value0, value1, value2, value3);
            };
        };
    };
};
var values = function (_606) {
    if (_606 instanceof Leaf) {
        return [  ];
    };
    if (_606 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_606.value0))(Prelude["++"](Data_Array.semigroupArray)([ _606.value2 ])(values(_606.value3)));
    };
    if (_606 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_606.value0))(Prelude["++"](Data_Array.semigroupArray)([ _606.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_606.value3))(Prelude["++"](Data_Array.semigroupArray)([ _606.value5 ])(values(_606.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_604) {
    if (_604 instanceof Leaf) {
        return [  ];
    };
    if (_604 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_604.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_604.value1, _604.value2) ])(toList(_604.value3)));
    };
    if (_604 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_604.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_604.value1, _604.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_604.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_604.value4, _604.value5) ])(toList(_604.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_598) {
            if (_598 instanceof Leaf) {
                return "Leaf";
            };
            if (_598 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_598.value0) + (") (" + (Prelude.show(__dict_Show_0)(_598.value1) + (") (" + (Prelude.show(__dict_Show_1)(_598.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_598.value3) + ")")))))));
            };
            if (_598 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_598.value0) + (") (" + (Prelude.show(__dict_Show_0)(_598.value1) + (") (" + (Prelude.show(__dict_Show_1)(_598.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_598.value3) + (") (" + (Prelude.show(__dict_Show_0)(_598.value4) + (") (" + (Prelude.show(__dict_Show_1)(_598.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_598.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__600) {
        return function (__copy__601) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _600 = __copy__600;
            var _601 = __copy__601;
            tco: while (true) {
                if (_601 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_601 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_600)(_601.value1)) {
                    return new Data_Maybe.Just(_601.value2);
                };
                if (_601 instanceof Two && Prelude["<"](__dict_Ord_4)(_600)(_601.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__600 = _600;
                    var __tco__601 = _601.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _600 = __tco__600;
                    _601 = __tco__601;
                    continue tco;
                };
                if (_601 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__600 = _600;
                    var __tco__601 = _601.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _600 = __tco__600;
                    _601 = __tco__601;
                    continue tco;
                };
                if (_601 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_600)(_601.value1)) {
                    return new Data_Maybe.Just(_601.value2);
                };
                if (_601 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_600)(_601.value4)) {
                    return new Data_Maybe.Just(_601.value5);
                };
                if (_601 instanceof Three && Prelude["<"](__dict_Ord_4)(_600)(_601.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__600 = _600;
                    var __tco__601 = _601.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _600 = __tco__600;
                    _601 = __tco__601;
                    continue tco;
                };
                if (_601 instanceof Three && (Prelude["<"](__dict_Ord_4)(_601.value1)(_600) && Prelude["<="](__dict_Ord_4)(_600)(_601.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__600 = _600;
                    var __tco__601 = _601.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _600 = __tco__600;
                    _601 = __tco__601;
                    continue tco;
                };
                if (_601 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__600 = _600;
                    var __tco__601 = _601.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _600 = __tco__600;
                    _601 = __tco__601;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_605) {
    if (_605 instanceof Leaf) {
        return [  ];
    };
    if (_605 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_605.value0))(Prelude["++"](Data_Array.semigroupArray)([ _605.value1 ])(keys(_605.value3)));
    };
    if (_605 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_605.value0))(Prelude["++"](Data_Array.semigroupArray)([ _605.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_605.value3))(Prelude["++"](Data_Array.semigroupArray)([ _605.value4 ])(keys(_605.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_599) {
    if (_599 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (_607) {
    return function (_608) {
        if (_608 instanceof Leaf) {
            return Leaf.value;
        };
        if (_608 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(_607)(_608.value0), _608.value1, _607(_608.value2), Prelude["<$>"](functorMap)(_607)(_608.value3));
        };
        if (_608 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(_607)(_608.value0), _608.value1, _607(_608.value2), Prelude["<$>"](functorMap)(_607)(_608.value3), _608.value4, _607(_608.value5), Prelude["<$>"](functorMap)(_607)(_608.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__602) {
        return function (__copy__603) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _602 = __copy__602;
            var _603 = __copy__603;
            tco: while (true) {
                if (_602.length === 0) {
                    return _603;
                };
                if (_602.length >= 1) {
                    var _1942 = _602.slice(1);
                    if (_602[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__603 = new Two(_603, (_602[0]).value0, (_602[0]).value1, (_602[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _602 = _1942;
                        _603 = __tco__603;
                        continue tco;
                    };
                };
                if (_602.length >= 1) {
                    var _1947 = _602.slice(1);
                    if (_602[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__603 = new Two((_602[0]).value0, (_602[0]).value1, (_602[0]).value2, _603);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _602 = _1947;
                        _603 = __tco__603;
                        continue tco;
                    };
                };
                if (_602.length >= 1) {
                    var _1955 = _602.slice(1);
                    if (_602[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__603 = new Three(_603, (_602[0]).value0, (_602[0]).value1, (_602[0]).value2, (_602[0]).value3, (_602[0]).value4, (_602[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _602 = _1955;
                        _603 = __tco__603;
                        continue tco;
                    };
                };
                if (_602.length >= 1) {
                    var _1963 = _602.slice(1);
                    if (_602[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__603 = new Three((_602[0]).value0, (_602[0]).value1, (_602[0]).value2, _603, (_602[0]).value3, (_602[0]).value4, (_602[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _602 = _1963;
                        _603 = __tco__603;
                        continue tco;
                    };
                };
                if (_602.length >= 1) {
                    var _1971 = _602.slice(1);
                    if (_602[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__603 = new Three((_602[0]).value0, (_602[0]).value1, (_602[0]).value2, (_602[0]).value3, (_602[0]).value4, (_602[0]).value5, _603);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _602 = _1971;
                        _603 = __tco__603;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__614) {
            return function (__copy__615) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _614 = __copy__614;
                var _615 = __copy__615;
                tco: while (true) {
                    if (_614.length === 0) {
                        return new Two(_615.value0, _615.value1, _615.value2, _615.value3);
                    };
                    if (_614.length >= 1) {
                        var _1986 = _614.slice(1);
                        if (_614[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_1986)(new Three(_615.value0, _615.value1, _615.value2, _615.value3, (_614[0]).value0, (_614[0]).value1, (_614[0]).value2));
                        };
                    };
                    if (_614.length >= 1) {
                        var _1995 = _614.slice(1);
                        if (_614[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_1995)(new Three((_614[0]).value0, (_614[0]).value1, (_614[0]).value2, _615.value0, _615.value1, _615.value2, _615.value3));
                        };
                    };
                    if (_614.length >= 1) {
                        var _2007 = _614.slice(1);
                        if (_614[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__615 = new KickUp(new Two(_615.value0, _615.value1, _615.value2, _615.value3), (_614[0]).value0, (_614[0]).value1, new Two((_614[0]).value2, (_614[0]).value3, (_614[0]).value4, (_614[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _614 = _2007;
                            _615 = __tco__615;
                            continue tco;
                        };
                    };
                    if (_614.length >= 1) {
                        var _2019 = _614.slice(1);
                        if (_614[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__615 = new KickUp(new Two((_614[0]).value0, (_614[0]).value1, (_614[0]).value2, _615.value0), _615.value1, _615.value2, new Two(_615.value3, (_614[0]).value3, (_614[0]).value4, (_614[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _614 = _2019;
                            _615 = __tco__615;
                            continue tco;
                        };
                    };
                    if (_614.length >= 1) {
                        var _2031 = _614.slice(1);
                        if (_614[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__615 = new KickUp(new Two((_614[0]).value0, (_614[0]).value1, (_614[0]).value2, (_614[0]).value3), (_614[0]).value4, (_614[0]).value5, new Two(_615.value0, _615.value1, _615.value2, _615.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _614 = _2031;
                            _615 = __tco__615;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__610) {
            return function (__copy__611) {
                return function (__copy__612) {
                    return function (__copy__613) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _610 = __copy__610;
                        var _611 = __copy__611;
                        var _612 = __copy__612;
                        var _613 = __copy__613;
                        tco: while (true) {
                            if (_613 instanceof Leaf) {
                                return up(__dict_Ord_9)(_610)(new KickUp(Leaf.value, _611, _612, Leaf.value));
                            };
                            if (_613 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_611)(_613.value1)) {
                                return fromZipper(__dict_Ord_9)(_610)(new Two(_613.value0, _611, _612, _613.value3));
                            };
                            if (_613 instanceof Two && Prelude["<"](__dict_Ord_9)(_611)(_613.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__610 = Prelude[":"](new TwoLeft(_613.value1, _613.value2, _613.value3))(_610);
                                var __tco__611 = _611;
                                var __tco__612 = _612;
                                var __tco__613 = _613.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _610 = __tco__610;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                continue tco;
                            };
                            if (_613 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__610 = Prelude[":"](new TwoRight(_613.value0, _613.value1, _613.value2))(_610);
                                var __tco__611 = _611;
                                var __tco__612 = _612;
                                var __tco__613 = _613.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _610 = __tco__610;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                continue tco;
                            };
                            if (_613 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_611)(_613.value1)) {
                                return fromZipper(__dict_Ord_9)(_610)(new Three(_613.value0, _611, _612, _613.value3, _613.value4, _613.value5, _613.value6));
                            };
                            if (_613 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_611)(_613.value4)) {
                                return fromZipper(__dict_Ord_9)(_610)(new Three(_613.value0, _613.value1, _613.value2, _613.value3, _611, _612, _613.value6));
                            };
                            if (_613 instanceof Three && Prelude["<"](__dict_Ord_9)(_611)(_613.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__610 = Prelude[":"](new ThreeLeft(_613.value1, _613.value2, _613.value3, _613.value4, _613.value5, _613.value6))(_610);
                                var __tco__611 = _611;
                                var __tco__612 = _612;
                                var __tco__613 = _613.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _610 = __tco__610;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                continue tco;
                            };
                            if (_613 instanceof Three && (Prelude["<"](__dict_Ord_9)(_613.value1)(_611) && Prelude["<="](__dict_Ord_9)(_611)(_613.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__610 = Prelude[":"](new ThreeMiddle(_613.value0, _613.value1, _613.value2, _613.value4, _613.value5, _613.value6))(_610);
                                var __tco__611 = _611;
                                var __tco__612 = _612;
                                var __tco__613 = _613.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _610 = __tco__610;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                continue tco;
                            };
                            if (_613 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__610 = Prelude[":"](new ThreeRight(_613.value0, _613.value1, _613.value2, _613.value3, _613.value4, _613.value5))(_610);
                                var __tco__611 = _611;
                                var __tco__612 = _612;
                                var __tco__613 = _613.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _610 = __tco__610;
                                _611 = __tco__611;
                                _612 = __tco__612;
                                _613 = __tco__613;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_10)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_597) {
            return insert(__dict_Ord_13)(_597.value0)(_597.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__619) {
            return function (__copy__620) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _619 = __copy__619;
                var _620 = __copy__620;
                tco: while (true) {
                    if (_619.length === 0) {
                        return _620;
                    };
                    if (_619.length >= 1) {
                        var _2092 = _619.slice(1);
                        if (_619[0] instanceof TwoLeft && ((_619[0]).value2 instanceof Leaf && _620 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_2092)(new Two(Leaf.value, (_619[0]).value0, (_619[0]).value1, Leaf.value));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2097 = _619.slice(1);
                        if (_619[0] instanceof TwoRight && ((_619[0]).value0 instanceof Leaf && _620 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_2097)(new Two(Leaf.value, (_619[0]).value1, (_619[0]).value2, Leaf.value));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2106 = _619.slice(1);
                        if (_619[0] instanceof TwoLeft && (_619[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__620 = new Three(_620, (_619[0]).value0, (_619[0]).value1, (_619[0]).value2.value0, (_619[0]).value2.value1, (_619[0]).value2.value2, (_619[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _619 = _2106;
                            _620 = __tco__620;
                            continue tco;
                        };
                    };
                    if (_619.length >= 1) {
                        var _2115 = _619.slice(1);
                        if (_619[0] instanceof TwoRight && (_619[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__620 = new Three((_619[0]).value0.value0, (_619[0]).value0.value1, (_619[0]).value0.value2, (_619[0]).value0.value3, (_619[0]).value1, (_619[0]).value2, _620);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _619 = _2115;
                            _620 = __tco__620;
                            continue tco;
                        };
                    };
                    if (_619.length >= 1) {
                        var _2127 = _619.slice(1);
                        if (_619[0] instanceof TwoLeft && (_619[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2127)(new Two(new Two(_620, (_619[0]).value0, (_619[0]).value1, (_619[0]).value2.value0), (_619[0]).value2.value1, (_619[0]).value2.value2, new Two((_619[0]).value2.value3, (_619[0]).value2.value4, (_619[0]).value2.value5, (_619[0]).value2.value6)));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2139 = _619.slice(1);
                        if (_619[0] instanceof TwoRight && (_619[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2139)(new Two(new Two((_619[0]).value0.value0, (_619[0]).value0.value1, (_619[0]).value0.value2, (_619[0]).value0.value3), (_619[0]).value0.value4, (_619[0]).value0.value5, new Two((_619[0]).value0.value6, (_619[0]).value1, (_619[0]).value2, _620)));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2147 = _619.slice(1);
                        if (_619[0] instanceof ThreeLeft && ((_619[0]).value2 instanceof Leaf && ((_619[0]).value5 instanceof Leaf && _620 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2147)(new Three(Leaf.value, (_619[0]).value0, (_619[0]).value1, Leaf.value, (_619[0]).value3, (_619[0]).value4, Leaf.value));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2155 = _619.slice(1);
                        if (_619[0] instanceof ThreeMiddle && ((_619[0]).value0 instanceof Leaf && ((_619[0]).value5 instanceof Leaf && _620 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2155)(new Three(Leaf.value, (_619[0]).value1, (_619[0]).value2, Leaf.value, (_619[0]).value3, (_619[0]).value4, Leaf.value));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2163 = _619.slice(1);
                        if (_619[0] instanceof ThreeRight && ((_619[0]).value0 instanceof Leaf && ((_619[0]).value3 instanceof Leaf && _620 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_2163)(new Three(Leaf.value, (_619[0]).value1, (_619[0]).value2, Leaf.value, (_619[0]).value4, (_619[0]).value5, Leaf.value));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2175 = _619.slice(1);
                        if (_619[0] instanceof ThreeLeft && (_619[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2175)(new Two(new Three(_620, (_619[0]).value0, (_619[0]).value1, (_619[0]).value2.value0, (_619[0]).value2.value1, (_619[0]).value2.value2, (_619[0]).value2.value3), (_619[0]).value3, (_619[0]).value4, (_619[0]).value5));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2187 = _619.slice(1);
                        if (_619[0] instanceof ThreeMiddle && (_619[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2187)(new Two(new Three((_619[0]).value0.value0, (_619[0]).value0.value1, (_619[0]).value0.value2, (_619[0]).value0.value3, (_619[0]).value1, (_619[0]).value2, _620), (_619[0]).value3, (_619[0]).value4, (_619[0]).value5));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2199 = _619.slice(1);
                        if (_619[0] instanceof ThreeMiddle && (_619[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2199)(new Two((_619[0]).value0, (_619[0]).value1, (_619[0]).value2, new Three(_620, (_619[0]).value3, (_619[0]).value4, (_619[0]).value5.value0, (_619[0]).value5.value1, (_619[0]).value5.value2, (_619[0]).value5.value3)));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2211 = _619.slice(1);
                        if (_619[0] instanceof ThreeRight && (_619[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_2211)(new Two((_619[0]).value0, (_619[0]).value1, (_619[0]).value2, new Three((_619[0]).value3.value0, (_619[0]).value3.value1, (_619[0]).value3.value2, (_619[0]).value3.value3, (_619[0]).value4, (_619[0]).value5, _620)));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2226 = _619.slice(1);
                        if (_619[0] instanceof ThreeLeft && (_619[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2226)(new Three(new Two(_620, (_619[0]).value0, (_619[0]).value1, (_619[0]).value2.value0), (_619[0]).value2.value1, (_619[0]).value2.value2, new Two((_619[0]).value2.value3, (_619[0]).value2.value4, (_619[0]).value2.value5, (_619[0]).value2.value6), (_619[0]).value3, (_619[0]).value4, (_619[0]).value5));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2241 = _619.slice(1);
                        if (_619[0] instanceof ThreeMiddle && (_619[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2241)(new Three(new Two((_619[0]).value0.value0, (_619[0]).value0.value1, (_619[0]).value0.value2, (_619[0]).value0.value3), (_619[0]).value0.value4, (_619[0]).value0.value5, new Two((_619[0]).value0.value6, (_619[0]).value1, (_619[0]).value2, _620), (_619[0]).value3, (_619[0]).value4, (_619[0]).value5));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2256 = _619.slice(1);
                        if (_619[0] instanceof ThreeMiddle && (_619[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2256)(new Three((_619[0]).value0, (_619[0]).value1, (_619[0]).value2, new Two(_620, (_619[0]).value3, (_619[0]).value4, (_619[0]).value5.value0), (_619[0]).value5.value1, (_619[0]).value5.value2, new Two((_619[0]).value5.value3, (_619[0]).value5.value4, (_619[0]).value5.value5, (_619[0]).value5.value6)));
                        };
                    };
                    if (_619.length >= 1) {
                        var _2271 = _619.slice(1);
                        if (_619[0] instanceof ThreeRight && (_619[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_2271)(new Three((_619[0]).value0, (_619[0]).value1, (_619[0]).value2, new Two((_619[0]).value3.value0, (_619[0]).value3.value1, (_619[0]).value3.value2, (_619[0]).value3.value3), (_619[0]).value3.value4, (_619[0]).value3.value5, new Two((_619[0]).value3.value6, (_619[0]).value4, (_619[0]).value5, _620)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__622) {
            return function (__copy__623) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _622 = __copy__622;
                var _623 = __copy__623;
                tco: while (true) {
                    if (_623 instanceof Two && (_623.value0 instanceof Leaf && _623.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_622)(Leaf.value);
                    };
                    if (_623 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__622 = Prelude[":"](new TwoRight(_623.value0, _623.value1, _623.value2))(_622);
                        var __tco__623 = _623.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _622 = __tco__622;
                        _623 = __tco__623;
                        continue tco;
                    };
                    if (_623 instanceof Three && (_623.value0 instanceof Leaf && (_623.value3 instanceof Leaf && _623.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _623.value1, _623.value2))(_622))(Leaf.value);
                    };
                    if (_623 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__622 = Prelude[":"](new ThreeRight(_623.value0, _623.value1, _623.value2, _623.value3, _623.value4, _623.value5))(_622);
                        var __tco__623 = _623.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _622 = __tco__622;
                        _623 = __tco__623;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__621) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _621 = __copy__621;
            tco: while (true) {
                if (_621 instanceof Two && _621.value3 instanceof Leaf) {
                    return {
                        key: _621.value1, 
                        value: _621.value2
                    };
                };
                if (_621 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__621 = _621.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _621 = __tco__621;
                    continue tco;
                };
                if (_621 instanceof Three && _621.value6 instanceof Leaf) {
                    return {
                        key: _621.value4, 
                        value: _621.value5
                    };
                };
                if (_621 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__621 = _621.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _621 = __tco__621;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__616) {
            return function (__copy__617) {
                return function (__copy__618) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _616 = __copy__616;
                    var _617 = __copy__617;
                    var _618 = __copy__618;
                    tco: while (true) {
                        if (_618 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_616)(Leaf.value);
                        };
                        if (_618 instanceof Two && (_618.value0 instanceof Leaf && (_618.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value1)))) {
                            return up(__dict_Ord_19)(_616)(Leaf.value);
                        };
                        if (_618 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value1)) {
                                var max = maxNode(__dict_Ord_19)(_618.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _618.value3))(_616))(_618.value0);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_617)(_618.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__616 = Prelude[":"](new TwoLeft(_618.value1, _618.value2, _618.value3))(_616);
                                var __tco__617 = _617;
                                var __tco__618 = _618.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _616 = __tco__616;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__616 = Prelude[":"](new TwoRight(_618.value0, _618.value1, _618.value2))(_616);
                                var __tco__617 = _617;
                                var __tco__618 = _618.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _616 = __tco__616;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                continue tco;
                            };
                        };
                        if (_618 instanceof Three && (_618.value0 instanceof Leaf && (_618.value3 instanceof Leaf && _618.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value1)) {
                                return fromZipper(__dict_Ord_19)(_616)(new Two(Leaf.value, _618.value4, _618.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value4)) {
                                return fromZipper(__dict_Ord_19)(_616)(new Two(Leaf.value, _618.value1, _618.value2, Leaf.value));
                            };
                        };
                        if (_618 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value1)) {
                                var max = maxNode(__dict_Ord_19)(_618.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _618.value3, _618.value4, _618.value5, _618.value6))(_616))(_618.value0);
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_617)(_618.value4)) {
                                var max = maxNode(__dict_Ord_19)(_618.value3);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_618.value0, _618.value1, _618.value2, max.key, max.value, _618.value6))(_616))(_618.value3);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_617)(_618.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__616 = Prelude[":"](new ThreeLeft(_618.value1, _618.value2, _618.value3, _618.value4, _618.value5, _618.value6))(_616);
                                var __tco__617 = _617;
                                var __tco__618 = _618.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _616 = __tco__616;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_19)(_618.value1)(_617) && Prelude["<"](__dict_Ord_19)(_617)(_618.value4)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__616 = Prelude[":"](new ThreeMiddle(_618.value0, _618.value1, _618.value2, _618.value4, _618.value5, _618.value6))(_616);
                                var __tco__617 = _617;
                                var __tco__618 = _618.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _616 = __tco__616;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__616 = Prelude[":"](new ThreeRight(_618.value0, _618.value1, _618.value2, _618.value3, _618.value4, _618.value5))(_616);
                                var __tco__617 = _617;
                                var __tco__618 = _618.value6;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _616 = __tco__616;
                                _617 = __tco__617;
                                _618 = __tco__618;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_609) {
        if (_609 instanceof Leaf) {
            return [ 0 ];
        };
        if (_609 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_609.value0))(allHeights(_609.value3)));
        };
        if (_609 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_609.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_609.value3))(allHeights(_609.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _2356 = f(lookup(__dict_Ord_20)(k)(m));
                if (_2356 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_2356 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_2356.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var unionWith = function (__dict_Ord_21) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (_624) {
                    return function (_625) {
                        return alter(__dict_Ord_21)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_625.value1)(f(_625.value1))))(_625.value0)(_624);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_22) {
    return unionWith(__dict_Ord_22)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_23) {
    return new Prelude.Semigroup(union(__dict_Ord_23));
};
var monoidMap = function (__dict_Ord_14) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_14);
    }, empty);
};
var traversableMap = function (__dict_Ord_24) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_26) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_24))(__dict_Applicative_26)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_25) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_25["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_24))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_25)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_25)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_27) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_27))(empty);
};
var update = function (__dict_Ord_28) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_28)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    alter: alter, 
    checkValid: checkValid, 
    "delete": $$delete, 
    empty: empty, 
    eqMap: eqMap, 
    foldableMap: foldableMap, 
    fromList: fromList, 
    functorMap: functorMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    monoidMap: monoidMap, 
    semigroupMap: semigroupMap, 
    showMap: showMap, 
    showTree: showTree, 
    singleton: singleton, 
    size: size, 
    toList: toList, 
    traversableMap: traversableMap, 
    union: union, 
    unionWith: unionWith, 
    unions: unions, 
    update: update, 
    values: values
};

},{"Data.Array":20,"Data.Foldable":27,"Data.Maybe":32,"Data.Monoid":38,"Data.Traversable":47,"Data.Tuple":49,"Prelude":113}],31:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (_216) {
    if (_216 instanceof Data_Maybe.Just) {
        return _216.value0;
    };
    throw new Error("Failed pattern match");
};
module.exports = {
    fromJust: fromJust
};

},{"Data.Maybe":32,"Prelude":113}],32:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
function Nothing() {

};
Nothing.value = new Nothing();
function Just(value0) {
    this.value0 = value0;
};
Just.create = function (value0) {
    return new Just(value0);
};
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_190) {
        if (_190 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_190.value0) + ")");
        };
        if (_190 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match");
    });
};
var semigroupMaybe = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_188) {
        return function (_189) {
            if (_188 instanceof Nothing) {
                return _189;
            };
            if (_189 instanceof Nothing) {
                return _188;
            };
            if (_188 instanceof Just && _189 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_1)(_188.value0)(_189.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
};
var maybe = function (_175) {
    return function (_176) {
        return function (_177) {
            if (_177 instanceof Nothing) {
                return _175;
            };
            if (_177 instanceof Just) {
                return _176(_177.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (_178) {
    return function (_179) {
        if (_179 instanceof Just) {
            return new Just(_178(_179.value0));
        };
        return Nothing.value;
    };
});
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryArr));
};
var extendMaybe = new Control_Extend.Extend(function (_186) {
    return function (_187) {
        if (_187 instanceof Nothing) {
            return Nothing.value;
        };
        return Just.create(_186(_187));
    };
}, function () {
    return functorMaybe;
});
var eqMaybe = function (__dict_Eq_3) {
    return new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMaybe(__dict_Eq_3))(a)(b);
        };
    }, function (_191) {
        return function (_192) {
            if (_191 instanceof Nothing && _192 instanceof Nothing) {
                return true;
            };
            if (_191 instanceof Just && _192 instanceof Just) {
                return Prelude["=="](__dict_Eq_3)(_191.value0)(_192.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_193) {
        return function (_194) {
            if (_193 instanceof Just && _194 instanceof Just) {
                return Prelude.compare(__dict_Ord_2)(_193.value0)(_194.value0);
            };
            if (_193 instanceof Nothing && _194 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_193 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_194 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
};
var applyMaybe = new Prelude.Apply(function (_180) {
    return function (_181) {
        if (_180 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_180.value0)(_181);
        };
        if (_180 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return functorMaybe;
});
var bindMaybe = new Prelude.Bind(function (_184) {
    return function (_185) {
        if (_184 instanceof Just) {
            return _185(_184.value0);
        };
        if (_184 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return applyMaybe;
});
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function (_182) {
    return function (_183) {
        if (_182 instanceof Nothing) {
            return _183;
        };
        return _182;
    };
}, function () {
    return functorMaybe;
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Just: Just, 
    Nothing: Nothing, 
    altMaybe: altMaybe, 
    alternativeMaybe: alternativeMaybe, 
    applicativeMaybe: applicativeMaybe, 
    applyMaybe: applyMaybe, 
    bindMaybe: bindMaybe, 
    eqMaybe: eqMaybe, 
    extendMaybe: extendMaybe, 
    fromMaybe: fromMaybe, 
    functorMaybe: functorMaybe, 
    isJust: isJust, 
    isNothing: isNothing, 
    maybe: maybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    ordMaybe: ordMaybe, 
    plusMaybe: plusMaybe, 
    semigroupMaybe: semigroupMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":4,"Control.Alternative":5,"Control.Extend":8,"Control.MonadPlus":13,"Control.Plus":14,"Prelude":113}],33:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var All = {
    create: function (value) {
        return value;
    }
};
var showAll = new Prelude.Show(function (_224) {
    return "All (" + (Prelude.show(Prelude.showBoolean)(_224) + ")");
});
var semigroupAll = new Prelude.Semigroup(function (_225) {
    return function (_226) {
        return _225 && _226;
    };
});
var runAll = function (_219) {
    return _219;
};
var monoidAll = new Data_Monoid.Monoid(function () {
    return semigroupAll;
}, true);
var eqAll = new Prelude.Eq(function (_222) {
    return function (_223) {
        return _222 !== _223;
    };
}, function (_220) {
    return function (_221) {
        return _220 === _221;
    };
});
module.exports = {
    All: All, 
    eqAll: eqAll, 
    monoidAll: monoidAll, 
    runAll: runAll, 
    semigroupAll: semigroupAll, 
    showAll: showAll
};

},{"Data.Monoid":38,"Prelude":113}],34:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Any = {
    create: function (value) {
        return value;
    }
};
var showAny = new Prelude.Show(function (_232) {
    return "Any (" + (Prelude.show(Prelude.showBoolean)(_232) + ")");
});
var semigroupAny = new Prelude.Semigroup(function (_233) {
    return function (_234) {
        return _233 || _234;
    };
});
var runAny = function (_227) {
    return _227;
};
var monoidAny = new Data_Monoid.Monoid(function () {
    return semigroupAny;
}, false);
var eqAny = new Prelude.Eq(function (_230) {
    return function (_231) {
        return _230 !== _231;
    };
}, function (_228) {
    return function (_229) {
        return _228 === _229;
    };
});
module.exports = {
    Any: Any, 
    eqAny: eqAny, 
    monoidAny: monoidAny, 
    runAny: runAny, 
    semigroupAny: semigroupAny, 
    showAny: showAny
};

},{"Data.Monoid":38,"Prelude":113}],35:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Dual = {
    create: function (value) {
        return value;
    }
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_242) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_242) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_243) {
        return function (_244) {
            return Prelude["<>"](__dict_Semigroup_1)(_244)(_243);
        };
    });
};
var runDual = function (_235) {
    return _235;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_238) {
        return function (_239) {
            return Prelude["/="](__dict_Eq_4)(_238)(_239);
        };
    }, function (_236) {
        return function (_237) {
            return Prelude["=="](__dict_Eq_4)(_236)(_237);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_240) {
        return function (_241) {
            return Prelude.compare(__dict_Ord_2)(_240)(_241);
        };
    });
};
module.exports = {
    Dual: Dual, 
    eqDual: eqDual, 
    monoidDual: monoidDual, 
    ordDual: ordDual, 
    runDual: runDual, 
    semigroupDual: semigroupDual, 
    showDual: showDual
};

},{"Data.Monoid":38,"Prelude":113}],36:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Endo = {
    create: function (value) {
        return value;
    }
};
var semigroupEndo = new Prelude.Semigroup(function (_246) {
    return function (_247) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(_246)(_247);
    };
});
var runEndo = function (_245) {
    return _245;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryArr));
module.exports = {
    Endo: Endo, 
    monoidEndo: monoidEndo, 
    runEndo: runEndo, 
    semigroupEndo: semigroupEndo
};

},{"Data.Monoid":38,"Prelude":113}],37:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = {
    create: function (value) {
        return value;
    }
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_360) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_360) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_361) {
    return function (_362) {
        if (_361 instanceof Data_Maybe.Just) {
            return _361;
        };
        return _362;
    };
});
var runFirst = function (_353) {
    return _353;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_356) {
        return function (_357) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_356)(_357);
        };
    }, function (_354) {
        return function (_355) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_354)(_355);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_358) {
        return function (_359) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_358)(_359);
        };
    });
};
module.exports = {
    First: First, 
    eqFirst: eqFirst, 
    monoidFirst: monoidFirst, 
    ordFirst: ordFirst, 
    runFirst: runFirst, 
    semigroupFirst: semigroupFirst, 
    showFirst: showFirst
};

},{"Data.Maybe":32,"Data.Monoid":38,"Prelude":113}],38:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidMaybe = function (__dict_Semigroup_0) {
    return new Monoid(function () {
        return Data_Maybe.semigroupMaybe(__dict_Semigroup_0);
    }, Data_Maybe.Nothing.value);
};
var monoidArray = new Monoid(function () {
    return Data_Array.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidArr = function (__dict_Monoid_1) {
    return new Monoid(function () {
        return Prelude.semigroupArr(__dict_Monoid_1["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_1)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidArr: monoidArr, 
    monoidArray: monoidArray, 
    monoidMaybe: monoidMaybe, 
    monoidString: monoidString, 
    monoidUnit: monoidUnit
};

},{"Data.Array":20,"Data.Maybe":32,"Prelude":113}],39:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Profunctor = require("Data.Profunctor");
function Choice(__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var choiceArr = new Choice(function () {
    return Data_Profunctor.profunctorArr;
}, function (_166) {
    return function (_167) {
        if (_167 instanceof Data_Either.Left) {
            return Data_Either.Left.create(_166(_167.value0));
        };
        if (_167 instanceof Data_Either.Right) {
            return new Data_Either.Right(_167.value0);
        };
        throw new Error("Failed pattern match");
    };
}, Prelude["<$>"](Data_Either.functorEither));
module.exports = {
    Choice: Choice, 
    choiceArr: choiceArr, 
    left: left, 
    right: right
};

},{"Data.Either":25,"Data.Profunctor":40,"Prelude":113}],40:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Profunctor(dimap) {
    this.dimap = dimap;
};
var profunctorArr = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (__dict_Profunctor_0) {
    return function (a2b) {
        return dimap(__dict_Profunctor_0)(a2b)(Prelude.id(Prelude.categoryArr));
    };
};
var rmap = function (__dict_Profunctor_1) {
    return function (b2c) {
        return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryArr))(b2c);
    };
};
module.exports = {
    Profunctor: Profunctor, 
    dimap: dimap, 
    lmap: lmap, 
    profunctorArr: profunctorArr, 
    rmap: rmap
};

},{"Prelude":113}],41:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Map = require("Data.Map");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
function Set(value0) {
    this.value0 = value0;
};
Set.create = function (value0) {
    return new Set(value0);
};
var union = function (__dict_Ord_0) {
    return function (_635) {
        return function (_636) {
            return new Set(Data_Map.union(__dict_Ord_0)(_635.value0)(_636.value0));
        };
    };
};
var toList = function (_634) {
    return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_634.value0));
};
var singleton = function (a) {
    return new Set(Data_Map.singleton(a)(Prelude.unit));
};
var showSet = function (__dict_Show_1) {
    return new Prelude.Show(function (s) {
        return "fromList " + Prelude.show(Prelude.showArray(__dict_Show_1))(toList(s));
    });
};
var member = function (__dict_Ord_2) {
    return function (_628) {
        return function (_629) {
            return Data_Map.member(__dict_Ord_2)(_628)(_629.value0);
        };
    };
};
var isEmpty = function (_626) {
    return Data_Map.isEmpty(_626.value0);
};
var insert = function (__dict_Ord_3) {
    return function (_630) {
        return function (_631) {
            return new Set(Data_Map.insert(__dict_Ord_3)(_630)(Prelude.unit)(_631.value0));
        };
    };
};
var eqSet = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_639) {
        return function (_640) {
            return Prelude["/="](Data_Map.eqMap(__dict_Eq_4)(Prelude.eqUnit))(_639.value0)(_640.value0);
        };
    }, function (_637) {
        return function (_638) {
            return Prelude["=="](Data_Map.eqMap(__dict_Eq_4)(Prelude.eqUnit))(_637.value0)(_638.value0);
        };
    });
};
var empty = new Set(Data_Map.empty);
var fromList = function (__dict_Ord_5) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (a) {
            return insert(__dict_Ord_5)(a)(m);
        };
    })(empty);
};
var unions = function (__dict_Ord_6) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_6))(empty);
};
var $$delete = function (__dict_Ord_7) {
    return function (_632) {
        return function (_633) {
            return new Set(Data_Map["delete"](__dict_Ord_7)(_632)(_633.value0));
        };
    };
};
var difference = function (__dict_Ord_8) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip($$delete(__dict_Ord_8)))(s1)(toList(s2));
        };
    };
};
var checkValid = function (_627) {
    return Data_Map.checkValid(_627.value0);
};
module.exports = {
    checkValid: checkValid, 
    "delete": $$delete, 
    difference: difference, 
    empty: empty, 
    eqSet: eqSet, 
    fromList: fromList, 
    insert: insert, 
    isEmpty: isEmpty, 
    member: member, 
    showSet: showSet, 
    singleton: singleton, 
    toList: toList, 
    union: union, 
    unions: unions
};

},{"Data.Array":20,"Data.Foldable":27,"Data.Map":30,"Data.Tuple":49,"Prelude":113}],42:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

  function _new() {
    return {};
  }
  ;

  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;

  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;

  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
var $$new = _new;
var $$delete = _delete;
module.exports = {
    "delete": $$delete, 
    "new": $$new, 
    peek: peek, 
    poke: poke
};

},{"Prelude":113}],43:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap_ST = require("Data.StrMap.ST");
var Data_Array = require("Data.Array");

  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;

  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;

  function runST(f) {
    return f;
  }
  ;

  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;

  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;

  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;

  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
var empty = {};;

  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;

  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;

  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;

  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;

  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
var values = _collect(function (_) {
    return function (v) {
        return v;
    };
});
var toList = _collect(Data_Tuple.Tuple.create);
var thawST = _copyEff;
var showStrMap = function (__dict_Show_0) {
    return new Prelude.Show(function (m) {
        return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_0)))(toList(m));
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure(runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var _27 = Data_StrMap_ST["new"]();
            Data_StrMap_ST.poke(_27)(k)(v)();
            return _27;
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var _26 = thawST(m)();
            f(_26)();
            return _26;
        });
    };
};
var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (__dict_Eq_1) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return _lookup(false, Prelude["=="](__dict_Eq_1)(v), k, m2);
                };
            };
            return all(f)(m1);
        };
    };
};
var isEmpty = all(function (_) {
    return function (__1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_StrMap_ST.poke(s)(k)(v);
        });
    };
};
var functorStrMap = new Prelude.Functor(function (f) {
    return function (m) {
        return _fmapStrMap(m, f);
    };
});
var map = Prelude["<$>"](functorStrMap);
var fromList = function (l) {
    return pureST(function __do() {
        var _28 = Data_StrMap_ST["new"]();
        Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_641) {
            return Data_StrMap_ST.poke(_28)(_641.value0)(_641.value1);
        })();
        return _28;
    });
};
var freezeST = _copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (__dict_Monad_2) {
    return function (f) {
        return function (z) {
            return _foldM(Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(z));
        };
    };
};
var semigroupStrMap = function (__dict_Semigroup_3) {
    return new Prelude.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s) {
                return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                return Prelude["<>"](__dict_Semigroup_3)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s)(m1);
            })(m2);
        };
    });
};
var union = function (m) {
    return mutate(function (s) {
        return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
    });
};
var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
var fold = _foldM(Prelude["#"]);
var foldMap = function (__dict_Monoid_6) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["<>"](__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(__dict_Monoid_6));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_7) {
    return function (f) {
        return foldMap(__dict_Monoid_7)(Prelude["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (_) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (__dict_Applicative_5) {
    return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_5)(Prelude.id(Prelude.categoryArr));
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (ms) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<*>"](__dict_Applicative_4["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                };
            })(Prelude.pure(__dict_Applicative_4)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_4)(f))(toList(ms))));
        };
    };
});
var eqStrMap = function (__dict_Eq_8) {
    return new Prelude.Eq(function (m1) {
        return function (m2) {
            return !Prelude["=="](eqStrMap(__dict_Eq_8))(m1)(m2);
        };
    }, function (m1) {
        return function (m2) {
            return isSubmap(__dict_Eq_8)(m1)(m2) && isSubmap(__dict_Eq_8)(m2)(m1);
        };
    });
};
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_StrMap_ST["delete"](s)(k);
    });
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var _2395 = f(lookup(k)(m));
            if (_2395 instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (_2395 instanceof Data_Maybe.Just) {
                return insert(k)(_2395.value0)(m);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    all: all, 
    alter: alter, 
    "delete": $$delete, 
    empty: empty, 
    eqStrMap: eqStrMap, 
    fold: fold, 
    foldM: foldM, 
    foldMap: foldMap, 
    foldMaybe: foldMaybe, 
    foldableStrMap: foldableStrMap, 
    freezeST: freezeST, 
    fromList: fromList, 
    functorStrMap: functorStrMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    isSubmap: isSubmap, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    runST: runST, 
    semigroupStrMap: semigroupStrMap, 
    showStrMap: showStrMap, 
    singleton: singleton, 
    size: size, 
    thawST: thawST, 
    toList: toList, 
    traversableStrMap: traversableStrMap, 
    union: union, 
    unions: unions, 
    update: update, 
    values: values
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Foldable":27,"Data.Function":28,"Data.Maybe":32,"Data.Monoid":38,"Data.StrMap.ST":42,"Data.Traversable":47,"Data.Tuple":49,"Prelude":113}],44:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_String = require("Data.String");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

  function showRegex$prime(r) {
    return '' + r;
  }
  ;

  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;

  function source(r) {
    return r.source;
  }
  ;

  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;

  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;

  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;

  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;

  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;

  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;

  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
var showRegex = new Prelude.Show(showRegex$prime);
var renderFlags = function (flags_1) {
    return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
};
var regex = function (source_1) {
    return function (flags_1) {
        return regex$prime(source_1)(renderFlags(flags_1));
    };
};
var parseFlags = function (s) {
    return {
        global: Data_String.indexOf("g")(s) >= 0, 
        ignoreCase: Data_String.indexOf("i")(s) >= 0, 
        multiline: Data_String.indexOf("m")(s) >= 0, 
        sticky: Data_String.indexOf("y")(s) >= 0, 
        unicode: Data_String.indexOf("u")(s) >= 0
    };
};
var match = function (r) {
    return function (s) {
        return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    flags: flags, 
    match: match, 
    parseFlags: parseFlags, 
    regex: regex, 
    renderFlags: renderFlags, 
    replace: replace, 
    "replace'": replace$prime, 
    search: search, 
    showRegex: showRegex, 
    source: source, 
    split: split, 
    test: test
};

},{"Data.Function":28,"Data.Maybe":32,"Data.String":46,"Prelude":113}],45:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;

    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt
};

},{"Prelude":113}],46:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Data_Char = require("Data.Char");
var Data_String_Unsafe = require("Data.String.Unsafe");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;

    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;

    function fromCharArray(a) {
      return a.join('');
    }
    ;

    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;

    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;

    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;

    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;

    function length(s) {
      return s.length;
    }
    ;

    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;

    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;

    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;

    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;

    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;

    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;

    function toCharArray(s) {
      return s.split('');
    }
    ;

    function toLower(s) {
      return s.toLowerCase();
    }
    ;

    function toUpper(s) {
      return s.toUpperCase();
    }
    ;

    function trim(s) {
      return s.trim();
    }
    ;

    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
var takeWhile = function (p) {
    return function (s) {
        return take(count(p)(s))(s);
    };
};
var $$null = function (s) {
    return length(s) === 0;
};
var uncons = function (_400) {
    if ($$null(_400)) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(_400), 
        tail: drop(1)(_400)
    });
};
var fromChar = Data_Char.charString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return drop(count(p)(s))(s);
    };
};
var charCodeAt = function (n) {
    return function (s) {
        return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
var charAt = function (n) {
    return function (s) {
        return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt, 
    count: count, 
    drop: drop, 
    dropWhile: dropWhile, 
    fromChar: fromChar, 
    fromCharArray: fromCharArray, 
    indexOf: indexOf, 
    "indexOf'": indexOf$prime, 
    joinWith: joinWith, 
    lastIndexOf: lastIndexOf, 
    "lastIndexOf'": lastIndexOf$prime, 
    length: length, 
    localeCompare: localeCompare, 
    "null": $$null, 
    replace: replace, 
    singleton: singleton, 
    split: split, 
    take: take, 
    takeWhile: takeWhile, 
    toCharArray: toCharArray, 
    toLower: toLower, 
    toUpper: toUpper, 
    trim: trim, 
    uncons: uncons
};

},{"Data.Char":21,"Data.Function":28,"Data.Maybe":32,"Data.String.Unsafe":45,"Prelude":113}],47:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var StateR = {
    create: function (value) {
        return value;
    }
};
var StateL = {
    create: function (value) {
        return value;
    }
};
function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableTuple = new Traversable(function () {
    return Data_Foldable.foldableTuple;
}, function () {
    return Data_Tuple.functorTuple;
}, function (__dict_Applicative_1) {
    return function (_414) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_414.value0))(_414.value1);
    };
}, function (__dict_Applicative_0) {
    return function (_412) {
        return function (_413) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_413.value0))(_412(_413.value1));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_411) {
        if (_411 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_411 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_411.value0);
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_2) {
    return function (_409) {
        return function (_410) {
            if (_410 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_410 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_409(_410.value0));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var traversableEither = new Traversable(function () {
    return Data_Foldable.foldableEither;
}, function () {
    return Data_Either.functorEither;
}, function (__dict_Applicative_5) {
    return function (_408) {
        if (_408 instanceof Data_Either.Left) {
            return Prelude.pure(__dict_Applicative_5)(new Data_Either.Left(_408.value0));
        };
        if (_408 instanceof Data_Either.Right) {
            return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_408.value0);
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_4) {
    return function (_406) {
        return function (_407) {
            if (_407 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_4)(new Data_Either.Left(_407.value0));
            };
            if (_407 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_406(_407.value0));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var stateR = function (_402) {
    return _402;
};
var stateL = function (_401) {
    return _401;
};
var sequence = function (dict) {
    return dict.sequence;
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Array.functorArray;
}, function (__dict_Applicative_7) {
    return function (_405) {
        if (_405.length === 0) {
            return Prelude.pure(__dict_Applicative_7)([  ]);
        };
        if (_405.length >= 1) {
            var _1531 = _405.slice(1);
            return Prelude["<*>"](__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_405[0]))(sequence(traversableArray)(__dict_Applicative_7)(_1531));
        };
        throw new Error("Failed pattern match");
    };
}, function (__dict_Applicative_6) {
    return function (_403) {
        return function (_404) {
            if (_404.length === 0) {
                return Prelude.pure(__dict_Applicative_6)([  ]);
            };
            if (_404.length >= 1) {
                var _1535 = _404.slice(1);
                return Prelude["<*>"](__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_403(_404[0])))(traverse(traversableArray)(__dict_Applicative_6)(_403)(_1535));
            };
            throw new Error("Failed pattern match");
        };
    };
});
var zipWithA = function (__dict_Applicative_8) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return sequence(traversableArray)(__dict_Applicative_8)(Data_Array.zipWith(f)(xs)(ys));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return StateR.create(function (s) {
            var _1536 = stateR(k)(s);
            return new Data_Tuple.Tuple(_1536.value0, f(_1536.value1));
        });
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return StateL.create(function (s) {
            var _1539 = stateL(k)(s);
            return new Data_Tuple.Tuple(_1539.value0, f(_1539.value1));
        });
    };
});
var $$for = function (__dict_Applicative_13) {
    return function (__dict_Traversable_14) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_14)(__dict_Applicative_13)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function (f) {
    return function (x) {
        return StateR.create(function (s) {
            var _1542 = stateR(x)(s);
            var _1543 = stateR(f)(_1542.value0);
            return new Data_Tuple.Tuple(_1543.value0, _1543.value1(_1542.value1));
        });
    };
}, function () {
    return functorStateR;
});
var applyStateL = new Prelude.Apply(function (f) {
    return function (x) {
        return StateL.create(function (s) {
            var _1548 = stateL(f)(s);
            var _1549 = stateL(x)(_1548.value0);
            return new Data_Tuple.Tuple(_1549.value0, _1548.value1(_1549.value1));
        });
    };
}, function () {
    return functorStateL;
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return StateR.create(function (s) {
        return new Data_Tuple.Tuple(s, a);
    });
});
var mapAccumR = function (__dict_Traversable_9) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_9)(applicativeStateR)(function (a) {
                    return StateR.create(function (s) {
                        return f(s)(a);
                    });
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_10) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return Data_Tuple.snd(mapAccumR(__dict_Traversable_10)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return new Data_Tuple.Tuple(b$prime, b$prime);
                    };
                })(b0)(xs));
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return StateL.create(function (s) {
        return new Data_Tuple.Tuple(s, a);
    });
});
var mapAccumL = function (__dict_Traversable_11) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_11)(applicativeStateL)(function (a) {
                    return StateL.create(function (s) {
                        return f(s)(a);
                    });
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_12) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return Data_Tuple.snd(mapAccumL(__dict_Traversable_12)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return new Data_Tuple.Tuple(b$prime, b$prime);
                    };
                })(b0)(xs));
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    "for": $$for, 
    mapAccumL: mapAccumL, 
    mapAccumR: mapAccumR, 
    scanl: scanl, 
    scanr: scanr, 
    sequence: sequence, 
    traversableArray: traversableArray, 
    traversableEither: traversableEither, 
    traversableMaybe: traversableMaybe, 
    traversableTuple: traversableTuple, 
    traverse: traverse, 
    zipWithA: zipWithA
};

},{"Data.Array":20,"Data.Either":25,"Data.Foldable":27,"Data.Maybe":32,"Data.Tuple":49,"Prelude":113}],48:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var $div$bslash = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, b);
    };
};
var con9 = function (f) {
    return function (_351) {
        return f(_351.value0)(_351.value1.value0)(_351.value1.value1.value0)(_351.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value1.value1.value0)(_351.value1.value1.value1.value1.value1.value1.value1.value1);
    };
};
var con8 = function (f) {
    return function (_350) {
        return f(_350.value0)(_350.value1.value0)(_350.value1.value1.value0)(_350.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value1.value1.value0)(_350.value1.value1.value1.value1.value1.value1.value1);
    };
};
var con7 = function (f) {
    return function (_349) {
        return f(_349.value0)(_349.value1.value0)(_349.value1.value1.value0)(_349.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value1);
    };
};
var con6 = function (f) {
    return function (_348) {
        return f(_348.value0)(_348.value1.value0)(_348.value1.value1.value0)(_348.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value1);
    };
};
var con5 = function (f) {
    return function (_347) {
        return f(_347.value0)(_347.value1.value0)(_347.value1.value1.value0)(_347.value1.value1.value1.value0)(_347.value1.value1.value1.value1);
    };
};
var con4 = function (f) {
    return function (_346) {
        return f(_346.value0)(_346.value1.value0)(_346.value1.value1.value0)(_346.value1.value1.value1);
    };
};
var con3 = function (f) {
    return function (_345) {
        return f(_345.value0)(_345.value1.value0)(_345.value1.value1);
    };
};
var con2 = function (f) {
    return function (_344) {
        return f(_344.value0)(_344.value1);
    };
};
var con10 = function (f) {
    return function (_352) {
        return f(_352.value0)(_352.value1.value0)(_352.value1.value1.value0)(_352.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_352.value1.value1.value1.value1.value1.value1.value1.value1.value1);
    };
};
module.exports = {
    "/\\": $div$bslash, 
    con10: con10, 
    con2: con2, 
    con3: con3, 
    con4: con4, 
    con5: con5, 
    con6: con6, 
    con7: con7, 
    con8: con8, 
    con9: con9
};

},{"Data.Tuple":49,"Prelude":113}],49:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Lazy = require("Control.Lazy");
var Data_Array = require("Data.Array");
var Control_Extend = require("Control.Extend");
var Control_Comonad = require("Control.Comonad");
function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
Tuple.create = function (value0) {
    return function (value1) {
        return new Tuple(value0, value1);
    };
};
var zip = Data_Array.zipWith(Tuple.create);
var unzip = function (_272) {
    if (_272.length >= 1) {
        var _1120 = _272.slice(1);
        var _1114 = unzip(_1120);
        return new Tuple(Prelude[":"]((_272[0]).value0)(_1114.value0), Prelude[":"]((_272[0]).value1)(_1114.value1));
    };
    if (_272.length === 0) {
        return new Tuple([  ], [  ]);
    };
    throw new Error("Failed pattern match");
};
var uncurry = function (_270) {
    return function (_271) {
        return _270(_271.value0)(_271.value1);
    };
};
var swap = function (_273) {
    return new Tuple(_273.value1, _273.value0);
};
var snd = function (_269) {
    return _269.value1;
};
var showTuple = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return new Prelude.Show(function (_274) {
            return "Tuple (" + (Prelude.show(__dict_Show_0)(_274.value0) + (") (" + (Prelude.show(__dict_Show_1)(_274.value1) + ")")));
        });
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_279) {
    return function (_280) {
        return new Tuple(_280.value0, _279.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_2) {
    return function (__dict_Semigroup_3) {
        return new Prelude.Semigroup(function (_281) {
            return function (_282) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_2)(_281.value0)(_282.value0), Prelude["<>"](__dict_Semigroup_3)(_281.value1)(_282.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_6) {
    return function (__dict_Monoid_7) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_6), Data_Monoid.mempty(__dict_Monoid_7)));
    };
};
var functorTuple = new Prelude.Functor(function (_283) {
    return function (_284) {
        return new Tuple(_284.value0, _283(_284.value1));
    };
});
var fst = function (_268) {
    return _268.value0;
};
var lazyLazy1Tuple = function (__dict_Lazy1_9) {
    return function (__dict_Lazy1_10) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer1(__dict_Lazy1_9)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer1(__dict_Lazy1_10)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var lazyLazy2Tuple = function (__dict_Lazy2_11) {
    return function (__dict_Lazy2_12) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer2(__dict_Lazy2_11)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer2(__dict_Lazy2_12)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var lazyTuple = function (__dict_Lazy_13) {
    return function (__dict_Lazy_14) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_13)(function (_) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_14)(function (_) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var extendTuple = new Control_Extend.Extend(function (_289) {
    return function (_290) {
        return new Tuple(_290.value0, _289(_290));
    };
}, function () {
    return functorTuple;
});
var eqTuple = function (__dict_Eq_15) {
    return function (__dict_Eq_16) {
        return new Prelude.Eq(function (t1) {
            return function (t2) {
                return !Prelude["=="](eqTuple(__dict_Eq_15)(__dict_Eq_16))(t1)(t2);
            };
        }, function (_275) {
            return function (_276) {
                return Prelude["=="](__dict_Eq_15)(_275.value0)(_276.value0) && Prelude["=="](__dict_Eq_16)(_275.value1)(_276.value1);
            };
        });
    };
};
var ordTuple = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (_277) {
            return function (_278) {
                var _1165 = Prelude.compare(__dict_Ord_4)(_277.value0)(_278.value0);
                if (_1165 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_5)(_277.value1)(_278.value1);
                };
                return _1165;
            };
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var applyTuple = function (__dict_Semigroup_18) {
    return new Prelude.Apply(function (_285) {
        return function (_286) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_18)(_285.value0)(_286.value0), _285.value1(_286.value1));
        };
    }, function () {
        return functorTuple;
    });
};
var bindTuple = function (__dict_Semigroup_17) {
    return new Prelude.Bind(function (_287) {
        return function (_288) {
            var _1178 = _288(_287.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_17)(_287.value0)(_1178.value0), _1178.value1);
        };
    }, function () {
        return applyTuple(__dict_Semigroup_17);
    });
};
var applicativeTuple = function (__dict_Monoid_19) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_19)));
};
var monadTuple = function (__dict_Monoid_8) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_8);
    }, function () {
        return bindTuple(__dict_Monoid_8["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    applicativeTuple: applicativeTuple, 
    applyTuple: applyTuple, 
    bindTuple: bindTuple, 
    comonadTuple: comonadTuple, 
    curry: curry, 
    eqTuple: eqTuple, 
    extendTuple: extendTuple, 
    fst: fst, 
    functorTuple: functorTuple, 
    lazyLazy1Tuple: lazyLazy1Tuple, 
    lazyLazy2Tuple: lazyLazy2Tuple, 
    lazyTuple: lazyTuple, 
    monadTuple: monadTuple, 
    monoidTuple: monoidTuple, 
    ordTuple: ordTuple, 
    semigroupTuple: semigroupTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    showTuple: showTuple, 
    snd: snd, 
    swap: swap, 
    uncurry: uncurry, 
    unzip: unzip, 
    zip: zip
};

},{"Control.Comonad":7,"Control.Extend":8,"Control.Lazy":9,"Data.Array":20,"Data.Monoid":38,"Prelude":113}],50:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array_ST = require("Data.Array.ST");
var Prelude = require("Prelude");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
function Unfoldable(unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _31 = Data_Array_ST.emptySTArray();
            var _30 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _29 = Control_Monad_ST.readSTRef(_30)();
                    return (function () {
                        var _2452 = f(_29);
                        if (_2452 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.monadEff)(true);
                        };
                        if (_2452 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_31)(_2452.value0.value0)();
                                Control_Monad_ST.writeSTRef(_30)(_2452.value0.value1)();
                                return false;
                            };
                        };
                        throw new Error("Failed pattern match");
                    })()();
                })()) {

                };
                return {};
            })();
            return _31;
        }));
    };
});
module.exports = {
    Unfoldable: Unfoldable, 
    unfoldableArray: unfoldableArray, 
    unfoldr: unfoldr
};

},{"Control.Monad.Eff":11,"Control.Monad.ST":12,"Data.Array.ST":19,"Data.Maybe":32,"Data.Tuple":49,"Prelude":113}],51:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_String_Regex = require("Data.String.Regex");
var Prelude = require("Prelude");
var Data_Date = require("Data.Date");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Utils = require("Utils");
var Data_Traversable = require("Data.Traversable");
var Math = require("Math");
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Title = require("ECharts.Title");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var Signal_Time = require("Signal.Time");
var ECharts_Chart = require("ECharts.Chart");
var Signal = require("Signal");
var Data_Foldable = require("Data.Foldable");
var ECharts_AddData = require("ECharts.AddData");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");

function toLocaleTimeString(date) {
  return date.toLocaleTimeString();
}
;
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var options_ = function (xAxis) {
    return function (d1) {
        return function (d2) {
            return ECharts_Options.Option.create((function () {
                var _383 = {};
                for (var _384 in ECharts_Options.optionDefault) {
                    if (ECharts_Options.optionDefault.hasOwnProperty(_384)) {
                        _383[_384] = ECharts_Options.optionDefault[_384];
                    };
                };
                _383.tooltip = Data_Maybe.Just.create((function () {
                    var _345 = {};
                    for (var _346 in ECharts_Tooltip.tooltipDefault) {
                        if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_346)) {
                            _345[_346] = ECharts_Tooltip.tooltipDefault[_346];
                        };
                    };
                    _345.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
                    return _345;
                })());
                _383.legend = Data_Maybe.Just.create((function () {
                    var _347 = {};
                    for (var _348 in ECharts_Legend.legendDefault) {
                        if (ECharts_Legend.legendDefault.hasOwnProperty(_348)) {
                            _347[_348] = ECharts_Legend.legendDefault[_348];
                        };
                    };
                    _347.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "new price", "pre-order queue" ]));
                    return _347;
                })());
                _383.title = Data_Maybe.Just.create((function () {
                    var _349 = {};
                    for (var _350 in ECharts_Title.titleDefault) {
                        if (ECharts_Title.titleDefault.hasOwnProperty(_350)) {
                            _349[_350] = ECharts_Title.titleDefault[_350];
                        };
                    };
                    _349.text = new Data_Maybe.Just("dynamic data");
                    _349.subtext = new Data_Maybe.Just("fictitious");
                    return _349;
                })());
                _383.toolbox = Data_Maybe.Just.create(ECharts_Toolbox.Toolbox.create((function () {
                    var _363 = {};
                    for (var _364 in ECharts_Toolbox.toolboxDefault) {
                        if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_364)) {
                            _363[_364] = ECharts_Toolbox.toolboxDefault[_364];
                        };
                    };
                    _363.show = new Data_Maybe.Just(true);
                    _363.feature = Data_Maybe.Just.create(ECharts_Toolbox.Feature.create((function () {
                        var _361 = {};
                        for (var _362 in ECharts_Toolbox.featureDefault) {
                            if (ECharts_Toolbox.featureDefault.hasOwnProperty(_362)) {
                                _361[_362] = ECharts_Toolbox.featureDefault[_362];
                            };
                        };
                        _361.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                            var _351 = {};
                            for (var _352 in ECharts_Toolbox.markFeatureDefault) {
                                if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_352)) {
                                    _351[_352] = ECharts_Toolbox.markFeatureDefault[_352];
                                };
                            };
                            _351.show = new Data_Maybe.Just(true);
                            return _351;
                        })()));
                        _361.dataView = Data_Maybe.Just.create(ECharts_Toolbox.DataViewFeature.create((function () {
                            var _353 = {};
                            for (var _354 in ECharts_Toolbox.dataViewFeatureDefault) {
                                if (ECharts_Toolbox.dataViewFeatureDefault.hasOwnProperty(_354)) {
                                    _353[_354] = ECharts_Toolbox.dataViewFeatureDefault[_354];
                                };
                            };
                            _353.show = new Data_Maybe.Just(true);
                            _353.readOnly = new Data_Maybe.Just(false);
                            return _353;
                        })()));
                        _361.magicType = Data_Maybe.Just.create(ECharts_Toolbox.MagicTypeFeature.create((function () {
                            var _355 = {};
                            for (var _356 in ECharts_Toolbox.magicTypeFeatureDefault) {
                                if (ECharts_Toolbox.magicTypeFeatureDefault.hasOwnProperty(_356)) {
                                    _355[_356] = ECharts_Toolbox.magicTypeFeatureDefault[_356];
                                };
                            };
                            _355.show = new Data_Maybe.Just(true);
                            _355.type = new Data_Maybe.Just([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value ]);
                            return _355;
                        })()));
                        _361.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                            var _357 = {};
                            for (var _358 in ECharts_Toolbox.restoreFeatureDefault) {
                                if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_358)) {
                                    _357[_358] = ECharts_Toolbox.restoreFeatureDefault[_358];
                                };
                            };
                            _357.show = new Data_Maybe.Just(true);
                            return _357;
                        })()));
                        _361.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                            var _359 = {};
                            for (var _360 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                                if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_360)) {
                                    _359[_360] = ECharts_Toolbox.saveAsImageFeatureDefault[_360];
                                };
                            };
                            _359.show = new Data_Maybe.Just(true);
                            return _359;
                        })()));
                        return _361;
                    })()));
                    return _363;
                })()));
                _383.dataZoom = Data_Maybe.Just.create(ECharts_DataZoom.DataZoom.create((function () {
                    var _365 = {};
                    for (var _366 in ECharts_DataZoom.dataZoomDefault) {
                        if (ECharts_DataZoom.dataZoomDefault.hasOwnProperty(_366)) {
                            _365[_366] = ECharts_DataZoom.dataZoomDefault[_366];
                        };
                    };
                    _365.show = new Data_Maybe.Just(true);
                    _365.start = new Data_Maybe.Just(0);
                    _365.end = new Data_Maybe.Just(100);
                    return _365;
                })()));
                _383.xAxis = Data_Maybe.Just.create(new ECharts_Axis.TwoAxises((function () {
                    var _367 = {};
                    for (var _368 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_368)) {
                            _367[_368] = ECharts_Axis.axisDefault[_368];
                        };
                    };
                    _367.type = Data_Maybe.Just.create(ECharts_Axis.CategoryAxis.value);
                    _367.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.CatBoundaryGap(true));
                    _367.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)(xAxis));
                    return _367;
                })(), (function () {
                    var _369 = {};
                    for (var _370 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_370)) {
                            _369[_370] = ECharts_Axis.axisDefault[_370];
                        };
                    };
                    _369.type = Data_Maybe.Just.create(ECharts_Axis.CategoryAxis.value);
                    _369.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.CatBoundaryGap(true));
                    _369.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"](Prelude.functorArr)(ECharts_Axis.CommonAxisData.create)(Prelude.show(Prelude.showNumber)))(Data_Array[".."](1)(10)));
                    return _369;
                })()));
                _383.yAxis = Data_Maybe.Just.create(new ECharts_Axis.TwoAxises((function () {
                    var _371 = {};
                    for (var _372 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_372)) {
                            _371[_372] = ECharts_Axis.axisDefault[_372];
                        };
                    };
                    _371.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
                    _371.scale = new Data_Maybe.Just(true);
                    _371.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.ValueBoundaryGap(0.2, 0.2));
                    _371.name = new Data_Maybe.Just("price");
                    return _371;
                })(), (function () {
                    var _373 = {};
                    for (var _374 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_374)) {
                            _373[_374] = ECharts_Axis.axisDefault[_374];
                        };
                    };
                    _373.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
                    _373.scale = new Data_Maybe.Just(true);
                    _373.name = new Data_Maybe.Just("pre-order quantity");
                    _373.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.ValueBoundaryGap(0.2, 0.2));
                    return _373;
                })()));
                _383.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.BarSeries({
                    common: (function () {
                        var _375 = {};
                        for (var _376 in ECharts_Series.universalSeriesDefault) {
                            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_376)) {
                                _375[_376] = ECharts_Series.universalSeriesDefault[_376];
                            };
                        };
                        _375.name = new Data_Maybe.Just("pre-order queue");
                        return _375;
                    })(), 
                    special: (function () {
                        var _377 = {};
                        for (var _378 in ECharts_Series.barSeriesDefault) {
                            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_378)) {
                                _377[_378] = ECharts_Series.barSeriesDefault[_378];
                            };
                        };
                        _377.xAxisIndex = new Data_Maybe.Just(1);
                        _377.yAxisIndex = new Data_Maybe.Just(1);
                        _377.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(d1));
                        return _377;
                    })()
                }), new ECharts_Series.LineSeries({
                    common: (function () {
                        var _379 = {};
                        for (var _380 in ECharts_Series.universalSeriesDefault) {
                            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_380)) {
                                _379[_380] = ECharts_Series.universalSeriesDefault[_380];
                            };
                        };
                        _379.name = new Data_Maybe.Just("new price");
                        return _379;
                    })(), 
                    special: (function () {
                        var _381 = {};
                        for (var _382 in ECharts_Series.lineSeriesDefault) {
                            if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_382)) {
                                _381[_382] = ECharts_Series.lineSeriesDefault[_382];
                            };
                        };
                        _381.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(d2));
                        return _381;
                    })()
                }) ]));
                return _383;
            })());
        };
    };
};
var onlyDigRgx = Data_String_Regex.regex("^\\D*")({
    global: false, 
    ignoreCase: false, 
    multiline: false, 
    sticky: false, 
    unicode: false
});
var xTimeAxis = function __do() {
    var _0 = Data_Date.now();
    return (function () {
        var start = Data_Date.toEpochMilliseconds(_0);
        var mapfn = function (i) {
            return Data_Maybe.fromMaybe("")(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<$>"](Prelude.functorArr)(Prelude["<$>"](Prelude.functorArr)(Data_String_Regex.replace(onlyDigRgx)(""))(toLocaleTimeString))(Data_Date.toJSDate))(Data_Date.fromEpochMilliseconds(start - i * 2000)));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
    })()();
};
var dataStream = Signal["~>"](Signal.functorSignal)(Signal_Time.every(2000))(Prelude["const"](function __do() {
    var _9 = Control_Monad_Eff_Random.random();
    var _8 = Control_Monad_Eff_Random.random();
    var _7 = Control_Monad_Eff_Random.random();
    return (function () {
        var lastData = Utils.precise(1)(_9 * (Math.round(_8 * 10 % 2) === 0 ? 1 : -1));
        return function __do() {
            var _6 = Data_Date.now();
            return (function () {
                var axisData = Data_String_Regex.replace(onlyDigRgx)("")(toLocaleTimeString(Data_Date.toJSDate(_6)));
                var firstData = {
                    idx: 0, 
                    datum: ECharts_Item_Data.Value.create(ECharts_Item_Value.Simple.create(Math.round(_7 * 1000))), 
                    isHead: true, 
                    dataGrow: false, 
                    additionalData: Data_Maybe.Nothing.value
                };
                var sndData = {
                    idx: 1, 
                    datum: ECharts_Item_Data.Value.create(ECharts_Item_Value.Simple.create(lastData)), 
                    isHead: false, 
                    dataGrow: false, 
                    additionalData: new Data_Maybe.Just(axisData)
                };
                return Prelude["return"](Control_Monad_Eff.monadEff)([ firstData, sndData ]);
            })()();
        };
    })()();
}));
var data2 = (function () {
    var mapfn = function (i) {
        return function __do() {
            var _1 = Control_Monad_Eff_Random.random();
            return Utils.precise(1)(_1 * 10 + 5);
        };
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
})();
var data1 = (function () {
    var mapfn = function (i) {
        return function __do() {
            var _2 = Control_Monad_Eff_Random.random();
            return Math.round(_2 * 1000);
        };
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(Data_Array[".."](1)(10)));
})();
var options = function __do() {
    var _5 = xTimeAxis();
    var _4 = data1();
    var _3 = data2();
    return options_(_5)(_4)(_3);
};
var dynamicLineBar = function (id) {
    return function __do() {
        var _12 = options();
        var _11 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(_12)(true))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(dataStream)(function (effContent) {
            return function __do() {
                var _10 = effContent();
                return Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Prelude["<$>"](Data_Array.functorArray)(Prelude.flip(ECharts_AddData.addData)(_11))(_10))();
            };
        }))();
    };
};
module.exports = {
    data1: data1, 
    data2: data2, 
    dataStream: dataStream, 
    dynamicLineBar: dynamicLineBar, 
    onlyDigRgx: onlyDigRgx, 
    options: options, 
    options_: options_, 
    simpleData: simpleData, 
    toLocaleTimeString: toLocaleTimeString, 
    xTimeAxis: xTimeAxis
};

},{"Control.Monad.Eff":11,"Control.Monad.Eff.Random":10,"Data.Array":20,"Data.Date":24,"Data.Foldable":27,"Data.Maybe":32,"Data.String.Regex":44,"Data.Traversable":47,"ECharts.AddData":52,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.DataZoom":60,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Title":89,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Math":105,"Prelude":113,"Signal":117,"Signal.Time":116,"Utils":118}],52:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var ECharts_Item_Data = require("ECharts.Item.Data");
var AdditionalData = {
    create: function (value) {
        return value;
    }
};

function addDataImpl(data, chart) {
  return function() {
    return chart.addData.apply(chart, data);
  };
}
;
var additionalDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_100) {
    return Data_Argonaut_Core.fromArray([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_100.idx), Data_Argonaut_Encode.encodeJson(ECharts_Item_Data.itemDataEncodeJson)(_100.datum), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_100.isHead), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_100.dataGrow), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))(_100.additionalData) ]);
});
var addData = function (d) {
    return function (chart) {
        return addDataImpl(Data_Argonaut_Encode.encodeJson(additionalDataEncodeJson)(d), chart);
    };
};
module.exports = {
    AdditionalData: AdditionalData, 
    addData: addData, 
    additionalDataEncodeJson: additionalDataEncodeJson
};

},{"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"ECharts.Item.Data":65,"Prelude":113}],53:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Area = require("ECharts.Style.Area");
function PolarPolygon() {

};
PolarPolygon.value = new PolarPolygon();
function PolarCircle() {

};
PolarCircle.value = new PolarCircle();
var PolarName = {
    create: function (value) {
        return value;
    }
};
function CategoryAxis() {

};
CategoryAxis.value = new CategoryAxis();
function ValueAxis() {

};
ValueAxis.value = new ValueAxis();
function TimeAxis() {

};
TimeAxis.value = new TimeAxis();
var AxisTick = {
    create: function (value) {
        return value;
    }
};
var AxisSplitLine = {
    create: function (value) {
        return value;
    }
};
var AxisSplitArea = {
    create: function (value) {
        return value;
    }
};
function LeftAxis() {

};
LeftAxis.value = new LeftAxis();
function RightAxis() {

};
RightAxis.value = new RightAxis();
function TopAxis() {

};
TopAxis.value = new TopAxis();
function BottomAxis() {

};
BottomAxis.value = new BottomAxis();
function Start() {

};
Start.value = new Start();
function End() {

};
End.value = new End();
var AxisLineStyle = {
    create: function (value) {
        return value;
    }
};
var AxisLine = {
    create: function (value) {
        return value;
    }
};
var AxisLabel = {
    create: function (value) {
        return value;
    }
};
var Indicator = {
    create: function (value) {
        return value;
    }
};
var Polar = {
    create: function (value) {
        return value;
    }
};
function CommonAxisData(value0) {
    this.value0 = value0;
};
CommonAxisData.create = function (value0) {
    return new CommonAxisData(value0);
};
function CustomAxisData(value0) {
    this.value0 = value0;
};
CustomAxisData.create = function (value0) {
    return new CustomAxisData(value0);
};
function CatBoundaryGap(value0) {
    this.value0 = value0;
};
CatBoundaryGap.create = function (value0) {
    return new CatBoundaryGap(value0);
};
function ValueBoundaryGap(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
ValueBoundaryGap.create = function (value0) {
    return function (value1) {
        return new ValueBoundaryGap(value0, value1);
    };
};
var Axis = {
    create: function (value) {
        return value;
    }
};
function OneAxis(value0) {
    this.value0 = value0;
};
OneAxis.create = function (value0) {
    return new OneAxis(value0);
};
function TwoAxises(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
TwoAxises.create = function (value0) {
    return function (value1) {
        return new TwoAxises(value0, value1);
    };
};
var polarTypeEncode = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof PolarPolygon) {
            return "polygon";
        };
        if (a instanceof PolarCircle) {
            return "circle";
        };
        throw new Error("Failed pattern match");
    })());
});
var polarNameEncode = new Data_Argonaut_Encode.EncodeJson(function (_111) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_111.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_111.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_111.textStyle) ]));
});
var polarNameDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var polarDefault = {
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    indicator: Data_Maybe.Nothing.value
};
var indicatorDefault = {
    text: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value
};
var axisTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof CategoryAxis) {
            return "category";
        };
        if (a instanceof ValueAxis) {
            return "value";
        };
        if (a instanceof TimeAxis) {
            return "time";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisTickEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_103) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_103.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_103.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_103.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_103.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_103.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_103.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("inside")(_103.inside) ]));
});
var axisTickDefault = {
    show: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    inside: Data_Maybe.Nothing.value
};
var axisSplitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_106) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_106.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_106.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_106.lineStyle) ]));
});
var axisSplitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisSplitAreaEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_107) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_107.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_107.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_107.areaStyle) ]));
});
var axisSplitAreaDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value
};
var axisPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LeftAxis) {
            return "left";
        };
        if (a instanceof RightAxis) {
            return "right";
        };
        if (a instanceof TopAxis) {
            return "top";
        };
        if (a instanceof BottomAxis) {
            return "bottom";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisNameLocationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Start) {
            return "start";
        };
        if (a instanceof End) {
            return "end";
        };
        throw new Error("Failed pattern match");
    })());
});
var axisLineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_101) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJString))))("color")(_101.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_101.width) ]));
});
var axisLineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
var axisLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_102) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_102.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineStyleEncodeJson))("lineStyle")(_102.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onZero")(_102.onZero) ]));
});
var axisLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onZero: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_104) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_104.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_104.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_104.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_104.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("rotate")(_104.rotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("margin")(_104.margin), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(_104.clickable) ]));
});
var indicatorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_112) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_112.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_112.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_112.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_112.axisLabel) ]));
});
var polarEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_113) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(_113.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("radius")(_113.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(_113.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_113.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarNameEncode))("name")(_113.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("boundaryGap")(_113.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_113.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_113.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_113.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_113.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_113.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarTypeEncode))("type")(_113.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(indicatorEncodeJson)))("indicator")(_113.indicator) ]));
});
var axisLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    rotate: Data_Maybe.Nothing.value, 
    margin: Data_Maybe.Nothing.value, 
    clickable: Data_Maybe.Nothing.value
};
var axisDefault = {
    type: Data_Maybe.Nothing.value, 
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    nameLocation: Data_Maybe.Nothing.value, 
    nameTextStyle: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisTick: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var axisDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_108) {
    if (_108 instanceof CommonAxisData) {
        return Data_Argonaut_Core.fromString(_108.value0);
    };
    if (_108 instanceof CustomAxisData) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("value")(_108.value0.value), Data_Argonaut_Combinators[":="](ECharts_Style_Text.textStyleEncodeJson)("textStyle")(_108.value0.textStyle) ]));
    };
    throw new Error("Failed pattern match");
});
var axisBoundaryGapEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_109) {
    if (_109 instanceof CatBoundaryGap) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_109.value0);
    };
    if (_109 instanceof ValueBoundaryGap) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ _109.value0, _109.value1 ]);
    };
    throw new Error("Failed pattern match");
});
var axisEncJson = new Data_Argonaut_Encode.EncodeJson(function (_110) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTypeEncodeJson))("type")(_110.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_110.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisPositionEncodeJson))("position")(_110.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_110.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisNameLocationEncodeJson))("nameLocation")(_110.nameLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("nameTextStyle")(_110.nameTextStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisBoundaryGapEncodeJson))("boundaryGap")(_110.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_110.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_110.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_110.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_110.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_110.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTickEncodeJson))("axisTick")(_110.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_110.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_110.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_110.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(axisDataEncodeJson)))("data")(_110.data) ]));
});
var axisesEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_105) {
    if (_105 instanceof OneAxis) {
        return Data_Argonaut_Encode.encodeJson(axisEncJson)(_105.value0);
    };
    if (_105 instanceof TwoAxises) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(axisEncJson))([ _105.value0, _105.value1 ]);
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    Axis: Axis, 
    AxisLabel: AxisLabel, 
    AxisLine: AxisLine, 
    AxisLineStyle: AxisLineStyle, 
    AxisSplitArea: AxisSplitArea, 
    AxisSplitLine: AxisSplitLine, 
    AxisTick: AxisTick, 
    BottomAxis: BottomAxis, 
    CatBoundaryGap: CatBoundaryGap, 
    CategoryAxis: CategoryAxis, 
    CommonAxisData: CommonAxisData, 
    CustomAxisData: CustomAxisData, 
    End: End, 
    Indicator: Indicator, 
    LeftAxis: LeftAxis, 
    OneAxis: OneAxis, 
    Polar: Polar, 
    PolarCircle: PolarCircle, 
    PolarName: PolarName, 
    PolarPolygon: PolarPolygon, 
    RightAxis: RightAxis, 
    Start: Start, 
    TimeAxis: TimeAxis, 
    TopAxis: TopAxis, 
    TwoAxises: TwoAxises, 
    ValueAxis: ValueAxis, 
    ValueBoundaryGap: ValueBoundaryGap, 
    axisBoundaryGapEncodeJson: axisBoundaryGapEncodeJson, 
    axisDataEncodeJson: axisDataEncodeJson, 
    axisDefault: axisDefault, 
    axisEncJson: axisEncJson, 
    axisLabelDefault: axisLabelDefault, 
    axisLabelEncodeJson: axisLabelEncodeJson, 
    axisLineDefault: axisLineDefault, 
    axisLineEncodeJson: axisLineEncodeJson, 
    axisLineStyleDefault: axisLineStyleDefault, 
    axisLineStyleEncodeJson: axisLineStyleEncodeJson, 
    axisNameLocationEncodeJson: axisNameLocationEncodeJson, 
    axisPositionEncodeJson: axisPositionEncodeJson, 
    axisSplitAreaDefault: axisSplitAreaDefault, 
    axisSplitAreaEncodeJson: axisSplitAreaEncodeJson, 
    axisSplitLineDefault: axisSplitLineDefault, 
    axisSplitLineEncodeJson: axisSplitLineEncodeJson, 
    axisTickDefault: axisTickDefault, 
    axisTickEncodeJson: axisTickEncodeJson, 
    axisTypeEncodeJson: axisTypeEncodeJson, 
    axisesEncodeJson: axisesEncodeJson, 
    indicatorDefault: indicatorDefault, 
    indicatorEncodeJson: indicatorEncodeJson, 
    polarDefault: polarDefault, 
    polarEncodeJson: polarEncodeJson, 
    polarNameDefault: polarNameDefault, 
    polarNameEncode: polarNameEncode, 
    polarTypeEncode: polarTypeEncode
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Formatter":62,"ECharts.Style.Area":79,"ECharts.Style.Line":83,"ECharts.Style.Text":86,"Prelude":113}],54:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
function ThemeName(value0) {
    this.value0 = value0;
};
ThemeName.create = function (value0) {
    return new ThemeName(value0);
};
function ThemeConfig(value0) {
    this.value0 = value0;
};
ThemeConfig.create = function (value0) {
    return new ThemeConfig(value0);
};

function initImpl(node, theme) {
  return function() {
    return echarts.init(node, theme);
  };
}
;

function setThemeImpl(args, chart) {
  return function() {
    chart.setTheme.apply(chart, args);
  };
}
;

function getZRender(chart) {
  return function() {
    return chart.getZRender();
  };
}
;

function resize(chart) {
  return function() {
    return chart.resize();
  };
}
;

function refresh(chart) {
  return function( ){
    return chart.refresh();
  };
}
;

function clear(chart) {
  return function() {
    return chart.clear();
  };
}
;

function dispose() {
  return function() {
    return chart.dispose();
  };
}
;
var themeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (theme) {
    if (theme instanceof ThemeName) {
        return Data_Argonaut_Core.fromString(theme.value0);
    };
    if (theme instanceof ThemeConfig) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJson)(theme.value0);
    };
    throw new Error("Failed pattern match");
});
var setTheme = function (theme) {
    return function (chart) {
        return setThemeImpl(Data_Argonaut_Encode.encodeJson(themeEncodeJson)(theme), chart);
    };
};
var init = function (theme) {
    return function (dom) {
        return initImpl(dom, Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(themeEncodeJson))(theme));
    };
};
module.exports = {
    ThemeConfig: ThemeConfig, 
    ThemeName: ThemeName, 
    clear: clear, 
    dispose: dispose, 
    getZRender: getZRender, 
    init: init, 
    refresh: refresh, 
    resize: resize, 
    setTheme: setTheme, 
    themeEncodeJson: themeEncodeJson
};

},{"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Prelude":113}],55:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var ColorFuncParam = {
    create: function (value) {
        return value;
    }
};
function SimpleColor(value0) {
    this.value0 = value0;
};
SimpleColor.create = function (value0) {
    return new SimpleColor(value0);
};
function ColorFunc(value0) {
    this.value0 = value0;
};
ColorFunc.create = function (value0) {
    return new ColorFunc(value0);
};
var calculableColorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (cc) {
    if (cc instanceof SimpleColor) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(cc.value0);
    };
    if (cc instanceof ColorFunc) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(cc.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    ColorFunc: ColorFunc, 
    ColorFuncParam: ColorFuncParam, 
    SimpleColor: SimpleColor, 
    calculableColorEncodeJson: calculableColorEncodeJson
};

},{"Data.Argonaut.Encode":18,"Data.Function":28,"ECharts.Utils":93,"Prelude":113}],56:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
function NoSort() {

};
NoSort.value = new NoSort();
function Asc() {

};
Asc.value = new Asc();
function Desc() {

};
Desc.value = new Desc();
function SelModeSingle() {

};
SelModeSingle.value = new SelModeSingle();
function SelModeMultiple() {

};
SelModeMultiple.value = new SelModeMultiple();
function SelModeFalse() {

};
SelModeFalse.value = new SelModeFalse();
function RTRadius() {

};
RTRadius.value = new RTRadius();
function RTArea() {

};
RTArea.value = new RTArea();
function Enable() {

};
Enable.value = new Enable();
function Disable() {

};
Disable.value = new Disable();
function Scale() {

};
Scale.value = new Scale();
function Move() {

};
Move.value = new Move();
function Percent(value0) {
    this.value0 = value0;
};
Percent.create = function (value0) {
    return new Percent(value0);
};
function Pixel(value0) {
    this.value0 = value0;
};
Pixel.create = function (value0) {
    return new Pixel(value0);
};
function R(value0) {
    this.value0 = value0;
};
R.create = function (value0) {
    return new R(value0);
};
function Rs(value0) {
    this.value0 = value0;
};
Rs.create = function (value0) {
    return new Rs(value0);
};
var MinMax = {
    create: function (value) {
        return value;
    }
};
function SumCalculation() {

};
SumCalculation.value = new SumCalculation();
function AverageCalculation() {

};
AverageCalculation.value = new AverageCalculation();
function Auto() {

};
Auto.value = new Auto();
function Custom(value0) {
    this.value0 = value0;
};
Custom.create = function (value0) {
    return new Custom(value0);
};
function AllCorners(value0) {
    this.value0 = value0;
};
AllCorners.create = function (value0) {
    return new AllCorners(value0);
};
function Corners(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Corners.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Corners(value0, value1, value2, value3);
            };
        };
    };
};
var sortEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof NoSort) {
            return "none";
        };
        if (a instanceof Asc) {
            return "ascending";
        };
        if (a instanceof Desc) {
            return "descending";
        };
        throw new Error("Failed pattern match");
    })());
});
var selModeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    if (a instanceof SelModeSingle) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("single");
    };
    if (a instanceof SelModeMultiple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("multiple");
    };
    if (a instanceof SelModeFalse) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    throw new Error("Failed pattern match");
});
var roseTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof RTRadius) {
            return "radius";
        };
        if (a instanceof RTArea) {
            return "area";
        };
        throw new Error("Failed pattern match");
    })());
});
var roamEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_61) {
    if (_61 instanceof Enable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(true);
    };
    if (_61 instanceof Disable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    if (_61 instanceof Scale) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("scale");
    };
    if (_61 instanceof Move) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("move");
    };
    throw new Error("Failed pattern match");
});
var percentOrPixelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_60) {
    if (_60 instanceof Percent) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(Prelude.show(Prelude.showNumber)(_60.value0) + "%");
    };
    if (_60 instanceof Pixel) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_60.value0);
    };
    throw new Error("Failed pattern match");
});
var radiusEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_63) {
    if (_63 instanceof R) {
        return Data_Argonaut_Encode.encodeJson(percentOrPixelEncodeJson)(_63.value0);
    };
    if (_63 instanceof Rs) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(percentOrPixelEncodeJson))([ _63.value0.inner, _63.value0.outer ]);
    };
    throw new Error("Failed pattern match");
});
var minMaxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_62) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("min")(_62.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("max")(_62.max) ]));
});
var mapValueCalculationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof SumCalculation) {
            return "sum";
        };
        if (a instanceof AverageCalculation) {
            return "average";
        };
        throw new Error("Failed pattern match");
    })());
});
var intervalEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_64) {
    if (_64 instanceof Auto) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("auto");
    };
    if (_64 instanceof Custom) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_64.value0);
    };
    throw new Error("Failed pattern match");
});
var cornerJsonEncode = function (__dict_EncodeJson_0) {
    return new Data_Argonaut_Encode.EncodeJson(function (corners) {
        if (corners instanceof AllCorners) {
            return Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(corners.value0);
        };
        if (corners instanceof Corners) {
            return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(__dict_EncodeJson_0))([ corners.value0, corners.value1, corners.value2, corners.value3 ]);
        };
        throw new Error("Failed pattern match");
    });
};
module.exports = {
    AllCorners: AllCorners, 
    Asc: Asc, 
    Auto: Auto, 
    AverageCalculation: AverageCalculation, 
    Corners: Corners, 
    Custom: Custom, 
    Desc: Desc, 
    Disable: Disable, 
    Enable: Enable, 
    MinMax: MinMax, 
    Move: Move, 
    NoSort: NoSort, 
    Percent: Percent, 
    Pixel: Pixel, 
    R: R, 
    RTArea: RTArea, 
    RTRadius: RTRadius, 
    Rs: Rs, 
    Scale: Scale, 
    SelModeFalse: SelModeFalse, 
    SelModeMultiple: SelModeMultiple, 
    SelModeSingle: SelModeSingle, 
    SumCalculation: SumCalculation, 
    cornerJsonEncode: cornerJsonEncode, 
    intervalEncodeJson: intervalEncodeJson, 
    mapValueCalculationEncodeJson: mapValueCalculationEncodeJson, 
    minMaxEncodeJson: minMaxEncodeJson, 
    percentOrPixelEncodeJson: percentOrPixelEncodeJson, 
    radiusEncodeJson: radiusEncodeJson, 
    roamEncodeJson: roamEncodeJson, 
    roseTypeEncodeJson: roseTypeEncodeJson, 
    selModeEncodeJson: selModeEncodeJson, 
    sortEncodeJson: sortEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.StrMap":43,"Prelude":113}],57:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Connection = {
    create: function (value) {
        return value;
    }
};

function connectImpl(target, source) {
  return function() {
    source.connect(target);
    return function() {
      source.disconnect(target);
    };
  };
}
;
var connect = function (target) {
    return function (source) {
        return connectImpl(target, source);
    };
};
module.exports = {
    connect: connect
};

},{"Data.Function":28,"Prelude":113}],58:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
function YTop() {

};
YTop.value = new YTop();
function YBottom() {

};
YBottom.value = new YBottom();
function YCenter() {

};
YCenter.value = new YCenter();
function Y(value0) {
    this.value0 = value0;
};
Y.create = function (value0) {
    return new Y(value0);
};
function XLeft() {

};
XLeft.value = new XLeft();
function XRight() {

};
XRight.value = new XRight();
function XCenter() {

};
XCenter.value = new XCenter();
function X(value0) {
    this.value0 = value0;
};
X.create = function (value0) {
    return new X(value0);
};
function Horizontal() {

};
Horizontal.value = new Horizontal();
function Vertical() {

};
Vertical.value = new Vertical();
var Location = {
    create: function (value) {
        return value;
    }
};
function LPOuter() {

};
LPOuter.value = new LPOuter();
function LPInner() {

};
LPInner.value = new LPInner();
function LPTop() {

};
LPTop.value = new LPTop();
function LPRight() {

};
LPRight.value = new LPRight();
function LPLeft() {

};
LPLeft.value = new LPLeft();
function LPBottom() {

};
LPBottom.value = new LPBottom();
function LPInside() {

};
LPInside.value = new LPInside();
function LPInsideLeft() {

};
LPInsideLeft.value = new LPInsideLeft();
function LPInsideRight() {

};
LPInsideRight.value = new LPInsideRight();
function LPInsideTop() {

};
LPInsideTop.value = new LPInsideTop();
function LPInsideBottom() {

};
LPInsideBottom.value = new LPInsideBottom();
function HAlignLeft() {

};
HAlignLeft.value = new HAlignLeft();
function HAlignRight() {

};
HAlignRight.value = new HAlignRight();
function HAlignCenter() {

};
HAlignCenter.value = new HAlignCenter();
var yPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ypos) {
    if (ypos instanceof YTop) {
        return Data_Argonaut_Core.fromString("top");
    };
    if (ypos instanceof YBottom) {
        return Data_Argonaut_Core.fromString("bottom");
    };
    if (ypos instanceof YCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (ypos instanceof Y) {
        return Data_Argonaut_Core.fromNumber(ypos.value0);
    };
    throw new Error("Failed pattern match");
});
var xPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_759) {
    if (_759 instanceof XLeft) {
        return Data_Argonaut_Core.fromString("left");
    };
    if (_759 instanceof XRight) {
        return Data_Argonaut_Core.fromString("right");
    };
    if (_759 instanceof XCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (_759 instanceof X) {
        return Data_Argonaut_Core.fromNumber(_759.value0);
    };
    throw new Error("Failed pattern match");
});
var textAlignEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof HAlignLeft) {
            return "left";
        };
        if (a instanceof HAlignRight) {
            return "right";
        };
        if (a instanceof HAlignCenter) {
            return "center";
        };
        throw new Error("Failed pattern match");
    })());
});
var orientEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Horizontal) {
            return "horizontal";
        };
        if (a instanceof Vertical) {
            return "vertical";
        };
        throw new Error("Failed pattern match");
    })());
});
var locationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_760) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(xPosEncodeJson))("x")(_760.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(yPosEncodeJson))("y")(_760.y) ]));
});
var labelPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LPOuter) {
            return "outer";
        };
        if (a instanceof LPInner) {
            return "inner";
        };
        if (a instanceof LPTop) {
            return "top";
        };
        if (a instanceof LPRight) {
            return "right";
        };
        if (a instanceof LPLeft) {
            return "left";
        };
        if (a instanceof LPBottom) {
            return "bottom";
        };
        if (a instanceof LPInside) {
            return "inside";
        };
        if (a instanceof LPInsideLeft) {
            return "insideLeft";
        };
        if (a instanceof LPInsideRight) {
            return "insideRight";
        };
        if (a instanceof LPInsideTop) {
            return "insideTop";
        };
        if (a instanceof LPInsideBottom) {
            return "insideBottom";
        };
        throw new Error("Failed pattern match");
    })());
});
module.exports = {
    HAlignCenter: HAlignCenter, 
    HAlignLeft: HAlignLeft, 
    HAlignRight: HAlignRight, 
    Horizontal: Horizontal, 
    LPBottom: LPBottom, 
    LPInner: LPInner, 
    LPInside: LPInside, 
    LPInsideBottom: LPInsideBottom, 
    LPInsideLeft: LPInsideLeft, 
    LPInsideRight: LPInsideRight, 
    LPInsideTop: LPInsideTop, 
    LPLeft: LPLeft, 
    LPOuter: LPOuter, 
    LPRight: LPRight, 
    LPTop: LPTop, 
    Location: Location, 
    Vertical: Vertical, 
    X: X, 
    XCenter: XCenter, 
    XLeft: XLeft, 
    XRight: XRight, 
    Y: Y, 
    YBottom: YBottom, 
    YCenter: YCenter, 
    YTop: YTop, 
    labelPositionEncodeJson: labelPositionEncodeJson, 
    locationEncodeJson: locationEncodeJson, 
    orientEncodeJson: orientEncodeJson, 
    textAlignEncodeJson: textAlignEncodeJson, 
    xPosEncodeJson: xPosEncodeJson, 
    yPosEncodeJson: yPosEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.StrMap":43,"Prelude":113}],59:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var DataRange = {
    create: function (value) {
        return value;
    }
};
var dataRangeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_76) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_76.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_76.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_76.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_76.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_76.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_76.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_76.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_76.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_76.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_76.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_76.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_76.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_76.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(_76.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_76.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_76.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_76.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverLink")(_76.hoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_76.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_76.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_76.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJString)(Data_Argonaut_Encode.encodeJsonJString)))("text")(_76.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_76.textStyle) ]));
});
var dataRangeDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    precision: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    hoverLink: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
module.exports = {
    DataRange: DataRange, 
    dataRangeDefault: dataRangeDefault, 
    dataRangeEncodeJson: dataRangeEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Formatter":62,"ECharts.Style.Text":86,"Prelude":113}],60:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var Data_Maybe = require("Data.Maybe");
var DataZoom = {
    create: function (value) {
        return value;
    }
};
var dataZoomEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_65) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_65.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_65.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_65.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_65.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_65.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_65.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_65.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("dataBackgroundColor")(_65.dataBackgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_65.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_65.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("xAxisIndex")(_65.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("yAxisIndex")(_65.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("start")(_65.start), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("end")(_65.end), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showDetail")(_65.showDetail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_65.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("zoomlock")(_65.zoomlock) ]));
});
var dataZoomDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    dataBackgroundColor: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    start: Data_Maybe.Nothing.value, 
    end: Data_Maybe.Nothing.value, 
    showDetail: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    zoomlock: Data_Maybe.Nothing.value
};
module.exports = {
    DataZoom: DataZoom, 
    dataZoomDefault: dataZoomDefault, 
    dataZoomEncodeJson: dataZoomEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Coords":58,"Prelude":113}],61:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Sub = {
    create: function (value) {
        return value;
    }
};
function Refresh() {

};
Refresh.value = new Refresh();
function Restore() {

};
Restore.value = new Restore();
function Resize() {

};
Resize.value = new Resize();
function Click() {

};
Click.value = new Click();
function DoubleClick() {

};
DoubleClick.value = new DoubleClick();
function Hover() {

};
Hover.value = new Hover();
function DataChanged() {

};
DataChanged.value = new DataChanged();
function DataZoom() {

};
DataZoom.value = new DataZoom();
function DataRange() {

};
DataRange.value = new DataRange();
function DataRangeHoverLink() {

};
DataRangeHoverLink.value = new DataRangeHoverLink();
function LegendSelected() {

};
LegendSelected.value = new LegendSelected();
function LegendHoverLink() {

};
LegendHoverLink.value = new LegendHoverLink();
function MapSelected() {

};
MapSelected.value = new MapSelected();
function PieSelected() {

};
PieSelected.value = new PieSelected();
function DataViewChanged() {

};
DataViewChanged.value = new DataViewChanged();
function MapRoam() {

};
MapRoam.value = new MapRoam();
function MagicTypeChanged() {

};
MagicTypeChanged.value = new MagicTypeChanged();

function listenImpl(event, effHandler, chart) {
  return function() {
    var handler = function(param) {
      effHandler(param)();
    };
    chart.on(event, handler);
    return function() {
      chart.un(event, handler);
    }
  };
}
;
var eventTypeShow = new Prelude.Show(function (et) {
    if (et instanceof Refresh) {
        return "refresh";
    };
    if (et instanceof Restore) {
        return "restore";
    };
    if (et instanceof Resize) {
        return "resize";
    };
    if (et instanceof Click) {
        return "click";
    };
    if (et instanceof DoubleClick) {
        return "dblclick";
    };
    if (et instanceof Hover) {
        return "hover";
    };
    if (et instanceof DataChanged) {
        return "dataChanged";
    };
    if (et instanceof DataZoom) {
        return "dataZoom";
    };
    if (et instanceof DataRange) {
        return "dataRange";
    };
    if (et instanceof DataRangeHoverLink) {
        return "dataRangeHoverLink";
    };
    if (et instanceof LegendSelected) {
        return "legendSelected";
    };
    if (et instanceof LegendHoverLink) {
        return "legendHoverLink";
    };
    if (et instanceof MapSelected) {
        return "mapSelected";
    };
    if (et instanceof PieSelected) {
        return "pieSelected";
    };
    if (et instanceof DataViewChanged) {
        return "dataViewChanged";
    };
    if (et instanceof MapRoam) {
        return "mapRoam";
    };
    if (et instanceof MagicTypeChanged) {
        return "magicTypeChanged";
    };
    throw new Error("Failed pattern match");
});
var listen = function (eventName) {
    return function (handler) {
        return function (chart) {
            return listenImpl(Prelude.show(eventTypeShow)(eventName), handler, chart);
        };
    };
};
module.exports = {
    Click: Click, 
    DataChanged: DataChanged, 
    DataRange: DataRange, 
    DataRangeHoverLink: DataRangeHoverLink, 
    DataViewChanged: DataViewChanged, 
    DataZoom: DataZoom, 
    DoubleClick: DoubleClick, 
    Hover: Hover, 
    LegendHoverLink: LegendHoverLink, 
    LegendSelected: LegendSelected, 
    MagicTypeChanged: MagicTypeChanged, 
    MapRoam: MapRoam, 
    MapSelected: MapSelected, 
    PieSelected: PieSelected, 
    Refresh: Refresh, 
    Resize: Resize, 
    Restore: Restore, 
    eventTypeShow: eventTypeShow, 
    listen: listen
};

},{"Data.Function":28,"Prelude":113}],62:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Prelude = require("Prelude");
function Template(value0) {
    this.value0 = value0;
};
Template.create = function (value0) {
    return new Template(value0);
};
function FormatFunc(value0) {
    this.value0 = value0;
};
FormatFunc.create = function (value0) {
    return new FormatFunc(value0);
};

function effArrToFn(arr) {
  return function(x) {
    arr(x)();
  };
}
;
var formatterEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_67) {
    if (_67 instanceof Template) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_67.value0);
    };
    if (_67 instanceof FormatFunc) {
        return ECharts_Utils.func2json(effArrToFn(_67.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    FormatFunc: FormatFunc, 
    Template: Template, 
    formatterEncodeJson: formatterEncodeJson
};

},{"Data.Argonaut.Encode":18,"ECharts.Utils":93,"Prelude":113}],63:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Common = require("ECharts.Common");
var Data_Maybe = require("Data.Maybe");
var Grid = {
    create: function (value) {
        return value;
    }
};
var gridEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_66) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_66.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_66.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_66.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_66.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_66.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_66.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_66.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_66.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderColor")(_66.borderColor) ]));
});
var gridDefault = {
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
module.exports = {
    Grid: Grid, 
    gridDefault: gridDefault, 
    gridEncodeJson: gridEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"Prelude":113}],64:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
function PNG() {

};
PNG.value = new PNG();
function JPEG() {

};
JPEG.value = new JPEG();

function getDataURLImpl(imgType, chart) {
  return function() {
    return chart.getDataURL(imgType);
  };
}
;

function getImageImpl(imgType, chart) {
  return function( ){
    return chart.getImage(imgType);
  };
}
;
var imgTypeShow = new Prelude.Show(function (_747) {
    if (_747 instanceof PNG) {
        return "png";
    };
    if (_747 instanceof JPEG) {
        return "jpeg";
    };
    throw new Error("Failed pattern match");
});
var getImage = function (img) {
    return function (chart) {
        return getImageImpl(Prelude.show(imgTypeShow)(img), chart);
    };
};
var getDataURL = function (img) {
    return function (chart) {
        return getDataURLImpl(Prelude.show(imgTypeShow)(img), chart);
    };
};
var encodeImg = new Data_Argonaut_Encode.EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString))(Prelude.show(imgTypeShow)));
module.exports = {
    JPEG: JPEG, 
    PNG: PNG, 
    encodeImg: encodeImg, 
    getDataURL: getDataURL, 
    getImage: getImage, 
    imgTypeShow: imgTypeShow
};

},{"Data.Argonaut.Encode":18,"Data.Function":28,"Prelude":113}],65:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Maybe = require("Data.Maybe");
function Value(value0) {
    this.value0 = value0;
};
Value.create = function (value0) {
    return new Value(value0);
};
function Dat(value0) {
    this.value0 = value0;
};
Dat.create = function (value0) {
    return new Dat(value0);
};
function Label(value0) {
    this.value0 = value0;
};
Label.create = function (value0) {
    return new Label(value0);
};
var itemDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_99) {
    if (_99 instanceof Value) {
        return Data_Argonaut_Encode.encodeJson(ECharts_Item_Value.itemValueEncodeJson)(_99.value0);
    };
    if (_99 instanceof Dat) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](ECharts_Item_Value.itemValueEncodeJson)("value")(_99.value0.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_99.value0.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_99.value0.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_99.value0.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("selected")(_99.value0.selected) ]));
    };
    if (_99 instanceof Label) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("name")(_99.value0) ]));
    };
    throw new Error("Failed pattern match");
});
var dataDefault = function (value) {
    return {
        value: value, 
        name: Data_Maybe.Nothing.value, 
        tooltip: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        selected: Data_Maybe.Nothing.value
    };
};
module.exports = {
    Dat: Dat, 
    Label: Label, 
    Value: Value, 
    dataDefault: dataDefault, 
    itemDataEncodeJson: itemDataEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Item.Value":66,"ECharts.Style.Item":82,"ECharts.Tooltip":91,"Prelude":113}],66:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
function None() {

};
None.value = new None();
function Simple(value0) {
    this.value0 = value0;
};
Simple.create = function (value0) {
    return new Simple(value0);
};
function Many(value0) {
    this.value0 = value0;
};
Many.create = function (value0) {
    return new Many(value0);
};
function XYR(value0) {
    this.value0 = value0;
};
XYR.create = function (value0) {
    return new XYR(value0);
};
function HLOC(value0) {
    this.value0 = value0;
};
HLOC.create = function (value0) {
    return new HLOC(value0);
};
var itemValueEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (val) {
    if (val instanceof None) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("-");
    };
    if (val instanceof Simple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0);
    };
    if (val instanceof Many) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))(val.value0);
    };
    if (val instanceof XYR) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJson))([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0.x), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0.y), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))(val.value0.r) ]);
    };
    if (val instanceof HLOC) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ val.value0.o, val.value0.c, val.value0.l, val.value0.h ]);
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    HLOC: HLOC, 
    Many: Many, 
    None: None, 
    Simple: Simple, 
    XYR: XYR, 
    itemValueEncodeJson: itemValueEncodeJson
};

},{"Data.Argonaut.Encode":18,"Prelude":113}],67:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Maybe = require("Data.Maybe");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
function LegendItem(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
LegendItem.create = function (value0) {
    return function (value1) {
        return new LegendItem(value0, value1);
    };
};
var Legend = {
    create: function (value) {
        return value;
    }
};
var legendItemEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_77) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("name")(_77.value0), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("icon")(_77.value1.icon), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_77.value1.textStyle) ]));
});
var legendItemDefault = function (name) {
    return new LegendItem(name, {
        icon: Data_Maybe.Nothing.value, 
        textStyle: Data_Maybe.Nothing.value
    });
};
var legendEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_78) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_78.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_78.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_78.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_78.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_78.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_78.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_78.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_78.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_78.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_78.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_78.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_78.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_78.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_78.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean)))("selected")(_78.selected), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(legendItemEncodeJson)))("data")(_78.data) ]));
});
var legendDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    selected: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
module.exports = {
    Legend: Legend, 
    LegendItem: LegendItem, 
    legendDefault: legendDefault, 
    legendEncodeJson: legendEncodeJson, 
    legendItemDefault: legendItemDefault, 
    legendItemEncodeJson: legendItemEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Formatter":62,"ECharts.Style.Text":86,"Prelude":113}],68:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Style_Text = require("ECharts.Style.Text");
function Spin() {

};
Spin.value = new Spin();
function Bar() {

};
Bar.value = new Bar();
function Ring() {

};
Ring.value = new Ring();
function Whirling() {

};
Whirling.value = new Whirling();
function DynamicLine() {

};
DynamicLine.value = new DynamicLine();
function Bubble() {

};
Bubble.value = new Bubble();
var LoadingOption = {
    create: function (value) {
        return value;
    }
};

function showLoadingImpl(json, chart) {
  return function() {
    return chart.showLoading(json);
  };
}
;

function hideLoading(chart) {
  return function() {
    return chart.hideLoading();
  };
}
;
var loadingOptionDefault = {
    text: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    effectOption: Data_Maybe.Nothing.value, 
    progress: Data_Maybe.Nothing.value
};
var loadingEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Spin) {
            return "spin";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Ring) {
            return "ring";
        };
        if (a instanceof Whirling) {
            return "whirling";
        };
        if (a instanceof DynamicLine) {
            return "dynamicLine";
        };
        if (a instanceof Bubble) {
            return "bubble";
        };
        throw new Error("Failed pattern match");
    })());
});
var showLoadingOptions = new Data_Argonaut_Encode.EncodeJson(function (_79) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_79.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_79.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_79.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_79.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(loadingEffectEncodeJson))("effect")(_79.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("effectOption")(_79.effectOption), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("progress")(_79.progress) ]));
});
var showLoading = function (opts) {
    return function (chart) {
        return showLoadingImpl(ECharts_Utils.unnull(Data_Argonaut_Encode.encodeJson(showLoadingOptions)(opts)), chart);
    };
};
module.exports = {
    Bar: Bar, 
    Bubble: Bubble, 
    DynamicLine: DynamicLine, 
    LoadingOption: LoadingOption, 
    Ring: Ring, 
    Spin: Spin, 
    Whirling: Whirling, 
    hideLoading: hideLoading, 
    loadingEffectEncodeJson: loadingEffectEncodeJson, 
    loadingOptionDefault: loadingOptionDefault, 
    showLoading: showLoading, 
    showLoadingOptions: showLoadingOptions
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Coords":58,"ECharts.Style.Text":86,"ECharts.Utils":93,"Prelude":113}],69:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var MarkPointData = {
    create: function (value) {
        return value;
    }
};
var mpDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_764) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_764.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("value")(_764.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("x")(_764.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("y")(_764.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxis")(_764.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxis")(_764.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("type")(_764.type) ]));
});
var markPointDataDefault = {
    name: Data_Maybe.Nothing.value, 
    value: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointData: MarkPointData, 
    markPointDataDefault: markPointDataDefault, 
    mpDataEncodeJson: mpDataEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],70:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var MarkPointEffect = {
    create: function (value) {
        return value;
    }
};
var mpEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_68) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_68.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_68.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("period")(_68.period), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scaleSize")(_68.scaleSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_68.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowBlur")(_68.shadowBlur) ]));
});
var markPointEffectDefault = {
    show: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    period: Data_Maybe.Nothing.value, 
    scaleSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    shadowBlur: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointEffect: MarkPointEffect, 
    markPointEffectDefault: markPointEffectDefault, 
    mpEffectEncodeJson: mpEffectEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],71:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Maybe = require("Data.Maybe");
var MarkLine = {
    create: function (value) {
        return value;
    }
};

function addMarkLineImpl(ml, chart) {
  return function() {
    return chart.addMarkLine(ml);
  };
}
;

function delMarkLineImpl(idx, name, chart) {
  return function() {
    return chart.delMarkLine(idx, name);
  };
}
;
var mlEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_114) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Symbol.encodeJsonSymbol)(ECharts_Symbol.encodeJsonSymbol)))("symbol")(_114.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.dblSymbolSizeEncodeJson))("symbolSize")(_114.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("symbolRotate")(_114.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_114.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))))("geoCoord")(_114.geoCoord), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Mark_Data.mpDataEncodeJson)(ECharts_Mark_Data.mpDataEncodeJson))))("data")(_114.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_114.itemStyle) ]));
});
var markLineDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var delMarkLine = function (idx) {
    return function (name) {
        return function (chart) {
            return delMarkLineImpl(idx, name, chart);
        };
    };
};
var addMarkLine = function (ml) {
    return function (chart) {
        return addMarkLineImpl(Data_Argonaut_Encode.encodeJson(mlEncodeJson)(ml), chart);
    };
};
module.exports = {
    MarkLine: MarkLine, 
    addMarkLine: addMarkLine, 
    delMarkLine: delMarkLine, 
    markLineDefault: markLineDefault, 
    mlEncodeJson: mlEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Mark.Data":69,"ECharts.Mark.Effect":70,"ECharts.Style.Item":82,"ECharts.Symbol":87,"Prelude":113}],72:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var Data_Maybe = require("Data.Maybe");
var MarkPoint = {
    create: function (value) {
        return value;
    }
};

function delMarkPointImpl(idx, name, chart) {
  return function() {
    return chart.delMarkPoint(idx, name);
  };
}
;

function addMarkPointImpl(mp, chart) {
  return function() {
    return chart.addMarkPoint(mp);
  };
}
;
var markPointEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_115) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_115.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_115.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(_115.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_115.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Mark_Data.mpDataEncodeJson)))("data")(_115.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("geoCoord")(_115.geoCoord) ]));
});
var markPointDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value
};
var delMarkPoint = function (idx) {
    return function (name) {
        return function (chart) {
            return delMarkPointImpl(idx, name, chart);
        };
    };
};
var addMarkPoint = function (mp) {
    return function (chart) {
        return addMarkPointImpl(Data_Argonaut_Encode.encodeJson(markPointEncodeJson)(mp), chart);
    };
};
module.exports = {
    MarkPoint: MarkPoint, 
    addMarkPoint: addMarkPoint, 
    delMarkPoint: delMarkPoint, 
    markPointDefault: markPointDefault, 
    markPointEncodeJson: markPointEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Mark.Data":69,"ECharts.Mark.Effect":70,"ECharts.Symbol":87,"Prelude":113}],73:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Series = require("ECharts.Series");
var ECharts_Timeline = require("ECharts.Timeline");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_DataRange = require("ECharts.DataRange");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_RoamController = require("ECharts.RoamController");
var ECharts_Grid = require("ECharts.Grid");
var ECharts_Axis = require("ECharts.Axis");
var Data_Maybe = require("Data.Maybe");
var Option = {
    create: function (value) {
        return value;
    }
};

function setOptionImpl(option, notMerge, chart) {
  return function() {
if (!window.options) window.options = [];
window.options.push(option);
    return chart.setOption(option, notMerge);
  };
}
;
var optionsEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_128) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_128.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_128.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("renderAsImage")(_128.renderAsImage), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_128.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("animation")(_128.animation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series.encodeSeries))))("series")(_128.series), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Timeline.timelineEncodeJson))("timeline")(_128.timeline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_128.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Toolbox.toolboxEncodeJson))("toolbox")(_128.toolbox), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(_128.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Legend.legendEncodeJson))("legend")(_128.legend), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataRange.dataRangeEncodeJson))("dataRange")(_128.dataRange), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataZoom.dataZoomEncodeJson))("dataZoom")(_128.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_RoamController.roamControllerEncodeJson))("roamController")(_128.roamController), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Grid.gridEncodeJson))("grid")(_128.grid), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("xAxis")(_128.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("yAxis")(_128.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Axis.polarEncodeJson)))("polar")(_128.polar) ]));
});
var setOption = function (opts) {
    return function (notMerge) {
        return function (chart) {
            return setOptionImpl(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(optionsEncodeJson))(opts), notMerge, chart);
        };
    };
};
var optionDefault = {
    backgroundColor: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    renderAsImage: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    animation: Data_Maybe.Nothing.value, 
    series: Data_Maybe.Nothing.value, 
    timeline: Data_Maybe.Nothing.value, 
    tooltip: Data_Maybe.Nothing.value, 
    toolbox: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    legend: Data_Maybe.Nothing.value, 
    dataRange: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    roamController: Data_Maybe.Nothing.value, 
    grid: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    polar: Data_Maybe.Nothing.value
};
module.exports = {
    Option: Option, 
    optionDefault: optionDefault, 
    optionsEncodeJson: optionsEncodeJson, 
    setOption: setOption
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Axis":53,"ECharts.DataRange":59,"ECharts.DataZoom":60,"ECharts.Grid":63,"ECharts.Legend":67,"ECharts.RoamController":74,"ECharts.Series":78,"ECharts.Timeline":88,"ECharts.Title":89,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"ECharts.Utils":93,"Prelude":113}],74:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var Data_Maybe = require("Data.Maybe");
var RoamController = {
    create: function (value) {
        return value;
    }
};
var roamControllerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_69) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_69.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_69.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_69.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_69.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_69.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_69.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_69.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_69.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_69.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_69.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_69.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("step")(_69.step), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean))("mapTypeControl")(_69.mapTypeControl) ]));
});
var roamControllerDefault = {
    show: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    step: Data_Maybe.Nothing.value, 
    mapTypeControl: Data_Maybe.Nothing.value
};
module.exports = {
    RoamController: RoamController, 
    roamControllerDefault: roamControllerDefault, 
    roamControllerEncodeJson: roamControllerEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Coords":58,"Prelude":113}],75:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Date = require("Data.Date");
var EvolutionDetail = {
    create: function (value) {
        return value;
    }
};
var Evolution = {
    create: function (value) {
        return value;
    }
};
var OneEvent = {
    create: function (value) {
        return value;
    }
};
var oneEventDefault = {
    name: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value, 
    evolution: Data_Maybe.Nothing.value
};
var evolutionDetailDefault = {
    link: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    img: Data_Maybe.Nothing.value
};
var evoDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_125) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_125.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_125.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("img")(_125.img) ]));
});
var evoEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_126) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("time")(Prelude.show(Data_Date.showDate)(_126.time)), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_126.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(evoDetailEncodeJson))("detail")(_126.detail) ]));
});
var oneEventEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_127) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_127.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(_127.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(evoEncodeJson)))("evolution")(_127.evolution) ]));
});
module.exports = {
    Evolution: Evolution, 
    EvolutionDetail: EvolutionDetail, 
    OneEvent: OneEvent, 
    evoDetailEncodeJson: evoDetailEncodeJson, 
    evoEncodeJson: evoEncodeJson, 
    evolutionDetailDefault: evolutionDetailDefault, 
    oneEventDefault: oneEventDefault, 
    oneEventEncodeJson: oneEventEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Date":24,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],76:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Maybe = require("Data.Maybe");
var Node = {
    create: function (value) {
        return value;
    }
};
function Name(value0) {
    this.value0 = value0;
};
Name.create = function (value0) {
    return new Name(value0);
};
function Index(value0) {
    this.value0 = value0;
};
Index.create = function (value0) {
    return new Index(value0);
};
var Link = {
    create: function (value) {
        return value;
    }
};
var ForceCategory = {
    create: function (value) {
        return value;
    }
};
var nodeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_122) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_122.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("label")(_122.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_122.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ignore")(_122.ignore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_122.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_122.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_122.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("initial")(_122.initial), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixX")(_122.fixX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixY")(_122.fixY), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("draggable")(_122.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("category")(_122.category) ]));
});
var nodeDefault = function (value) {
    return {
        name: Data_Maybe.Nothing.value, 
        label: Data_Maybe.Nothing.value, 
        value: value, 
        ignore: Data_Maybe.Nothing.value, 
        symbol: Data_Maybe.Nothing.value, 
        symbolSize: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        initial: Data_Maybe.Nothing.value, 
        fixX: Data_Maybe.Nothing.value, 
        fixY: Data_Maybe.Nothing.value, 
        draggable: Data_Maybe.Nothing.value, 
        category: Data_Maybe.Nothing.value
    };
};
var linkEndEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_123) {
    if (_123 instanceof Name) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_123.value0);
    };
    if (_123 instanceof Index) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_123.value0);
    };
    throw new Error("Failed pattern match");
});
var linkEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_124) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](linkEndEncodeJson)("source")(_124.source), Data_Argonaut_Combinators[":="](linkEndEncodeJson)("target")(_124.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("weight")(_124.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_124.itemStyle) ]));
});
var forceCategoryEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_121) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_121.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_121.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_121.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_121.itemStyle) ]));
});
var forceCategoryDefault = {
    name: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value
};
module.exports = {
    ForceCategory: ForceCategory, 
    Index: Index, 
    Link: Link, 
    Name: Name, 
    Node: Node, 
    forceCategoryDefault: forceCategoryDefault, 
    forceCategoryEncodeJson: forceCategoryEncodeJson, 
    linkEncodeJson: linkEncodeJson, 
    linkEndEncodeJson: linkEndEncodeJson, 
    nodeDefault: nodeDefault, 
    nodeEncodeJson: nodeEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Style.Item":82,"ECharts.Symbol":87,"Prelude":113}],77:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var Data_Maybe = require("Data.Maybe");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var SplitLine = {
    create: function (value) {
        return value;
    }
};
var Pointer = {
    create: function (value) {
        return value;
    }
};
var GaugeDetail = {
    create: function (value) {
        return value;
    }
};
var splitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_117) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_117.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_117.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_117.lineStyle) ]));
});
var splitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var pointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_116) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_116.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_116.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_116.color) ]));
});
var pointerDefault = {
    length: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value
};
var gaugeDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_118) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_118.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_118.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_118.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_118.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_118.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_118.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("offsetCenter")(_118.offsetCenter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_118.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_118.textStyle) ]));
});
var gaugeDetailDefault = {
    show: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    offsetCenter: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
module.exports = {
    GaugeDetail: GaugeDetail, 
    Pointer: Pointer, 
    SplitLine: SplitLine, 
    gaugeDetailDefault: gaugeDetailDefault, 
    gaugeDetailEncodeJson: gaugeDetailEncodeJson, 
    pointerDefault: pointerDefault, 
    pointerEncodeJson: pointerEncodeJson, 
    splitLineDefault: splitLineDefault, 
    splitLineEncodeJson: splitLineEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Formatter":62,"ECharts.Style.Line":83,"ECharts.Style.Text":86,"Prelude":113}],78:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Array = require("Data.Array");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Type = require("ECharts.Type");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Title = require("ECharts.Title");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
function LineSeries(value0) {
    this.value0 = value0;
};
LineSeries.create = function (value0) {
    return new LineSeries(value0);
};
function BarSeries(value0) {
    this.value0 = value0;
};
BarSeries.create = function (value0) {
    return new BarSeries(value0);
};
function ScatterSeries(value0) {
    this.value0 = value0;
};
ScatterSeries.create = function (value0) {
    return new ScatterSeries(value0);
};
function CandlestickSeries(value0) {
    this.value0 = value0;
};
CandlestickSeries.create = function (value0) {
    return new CandlestickSeries(value0);
};
function PieSeries(value0) {
    this.value0 = value0;
};
PieSeries.create = function (value0) {
    return new PieSeries(value0);
};
function RadarSeries(value0) {
    this.value0 = value0;
};
RadarSeries.create = function (value0) {
    return new RadarSeries(value0);
};
function ChordSeries(value0) {
    this.value0 = value0;
};
ChordSeries.create = function (value0) {
    return new ChordSeries(value0);
};
function ForceSeries(value0) {
    this.value0 = value0;
};
ForceSeries.create = function (value0) {
    return new ForceSeries(value0);
};
function MapSeries(value0) {
    this.value0 = value0;
};
MapSeries.create = function (value0) {
    return new MapSeries(value0);
};
function GaugeSeries(value0) {
    this.value0 = value0;
};
GaugeSeries.create = function (value0) {
    return new GaugeSeries(value0);
};
function FunnelSeries(value0) {
    this.value0 = value0;
};
FunnelSeries.create = function (value0) {
    return new FunnelSeries(value0);
};
function EventRiverSeries(value0) {
    this.value0 = value0;
};
EventRiverSeries.create = function (value0) {
    return new EventRiverSeries(value0);
};

function setSeriesImpl(series, notMerge, chart) {
  return function() {
    return chart.setSeries(series, notMerge);
  };
}
;
var universalSeriesDefault = {
    name: Data_Maybe.Nothing.value, 
    tooltip: Data_Maybe.Nothing.value, 
    clickable: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value, 
    markPoint: Data_Maybe.Nothing.value, 
    markLine: Data_Maybe.Nothing.value
};
var universalRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(r.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(r.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(r.clickable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(r.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Point.markPointEncodeJson))("markPoint")(r.markPoint), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Line.mlEncodeJson))("markLine")(r.markLine) ];
};
var universalForSeries = function (series) {
    return universalRecEncode((function () {
        if (series instanceof LineSeries) {
            return series.value0.common;
        };
        if (series instanceof BarSeries) {
            return series.value0.common;
        };
        if (series instanceof CandlestickSeries) {
            return series.value0.common;
        };
        if (series instanceof ScatterSeries) {
            return series.value0.common;
        };
        if (series instanceof PieSeries) {
            return series.value0.common;
        };
        if (series instanceof RadarSeries) {
            return series.value0.common;
        };
        if (series instanceof ChordSeries) {
            return series.value0.common;
        };
        if (series instanceof ForceSeries) {
            return series.value0.common;
        };
        if (series instanceof MapSeries) {
            return series.value0.common;
        };
        if (series instanceof GaugeSeries) {
            return series.value0.common;
        };
        if (series instanceof FunnelSeries) {
            return series.value0.common;
        };
        if (series instanceof EventRiverSeries) {
            return series.value0.common;
        };
        throw new Error("Failed pattern match");
    })());
};
var typeForSeries = function (series) {
    var getType = function (s) {
        if (s instanceof LineSeries) {
            return ECharts_Type.Line.value;
        };
        if (s instanceof BarSeries) {
            return ECharts_Type.Bar.value;
        };
        if (s instanceof CandlestickSeries) {
            return ECharts_Type.Candlestick.value;
        };
        if (s instanceof ScatterSeries) {
            return ECharts_Type.Scatter.value;
        };
        if (s instanceof PieSeries) {
            return ECharts_Type.Pie.value;
        };
        if (s instanceof RadarSeries) {
            return ECharts_Type.Radar.value;
        };
        if (s instanceof ChordSeries) {
            return ECharts_Type.Chord.value;
        };
        if (s instanceof ForceSeries) {
            return ECharts_Type.Force.value;
        };
        if (s instanceof MapSeries) {
            return ECharts_Type.Map.value;
        };
        if (s instanceof GaugeSeries) {
            return ECharts_Type.Gauge.value;
        };
        if (s instanceof FunnelSeries) {
            return ECharts_Type.Funnel.value;
        };
        if (s instanceof EventRiverSeries) {
            return ECharts_Type.EventRiver.value;
        };
        throw new Error("Failed pattern match");
    };
    return [ Data_Argonaut_Combinators[":="](ECharts_Type.chartTypeEncodeJson)("type")(getType(series)) ];
};
var scatterSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    largeThreshold: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var scatterRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(r.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("largeThreshold")(r.largeThreshold), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var radarSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    polarIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var radarRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("polarIndex")(r.polarIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var pieSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    minAngle: Data_Maybe.Nothing.value, 
    clockWise: Data_Maybe.Nothing.value, 
    roseType: Data_Maybe.Nothing.value, 
    selectedOffset: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var pieRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.radiusEncodeJson))("radius")(r.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(r.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minAngle")(r.minAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clockWise")(r.clockWise), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roseTypeEncodeJson))("roseType")(r.roseType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("selectedOffset")(r.selectedOffset), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(r.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var mapSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    mapType: Data_Maybe.Nothing.value, 
    hoverable: Data_Maybe.Nothing.value, 
    dataRangeHoverLink: Data_Maybe.Nothing.value, 
    mapLocation: Data_Maybe.Nothing.value, 
    mapValueCalculation: Data_Maybe.Nothing.value, 
    mapValuePrecision: Data_Maybe.Nothing.value, 
    showLegendSymbol: Data_Maybe.Nothing.value, 
    roam: Data_Maybe.Nothing.value, 
    scaleLimit: Data_Maybe.Nothing.value, 
    nameMap: Data_Maybe.Nothing.value, 
    textFixed: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value
};
var mapRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(r.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mapType")(r.mapType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverable")(r.hoverable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("dataRangeHoverLink")(r.dataRangeHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.locationEncodeJson))("mapLocation")(r.mapLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.mapValueCalculationEncodeJson))("mapValueCalculation")(r.mapValueCalculation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("mapValuePrecision")(r.mapValuePrecision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showLegendSymbol")(r.showLegendSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roamEncodeJson))("roam")(r.roam), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.minMaxEncodeJson))("scaleLimit")(r.scaleLimit), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("nameMap")(r.nameMap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("textFixed")(r.textFixed), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("geoCoord")(r.geoCoord) ];
};
var lineSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    stack: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    showAllSymbol: Data_Maybe.Nothing.value, 
    smooth: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var lineRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("stack")(r.stack), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showAllSymbol")(r.showAllSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("smooth")(r.smooth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var gaugeSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    endAngle: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    precision: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisTick: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    detail: Data_Maybe.Nothing.value, 
    pointer: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value
};
var gaugeRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.radiusEncodeJson))("radius")(r.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(r.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("endAngle")(r.endAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(r.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(r.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(r.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(r.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLineEncodeJson))("axisLine")(r.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisTickEncodeJson))("axisTick")(r.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.splitLineEncodeJson))("splitLine")(r.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(r.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.gaugeDetailEncodeJson))("detail")(r.detail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.pointerEncodeJson))("pointer")(r.pointer), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("axisLabel")(r.axisLabel) ];
};
var funnelSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    funnelAlign: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    minSize: Data_Maybe.Nothing.value, 
    maxSize: Data_Maybe.Nothing.value, 
    gap: Data_Maybe.Nothing.value, 
    sort: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var funnelRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(r.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(r.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(r.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(r.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(r.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(r.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("funnelAlign")(r.funnelAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(r.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(r.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("minSize")(r.minSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("maxSize")(r.maxSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gap")(r.gap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sort")(r.sort), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var forceSeriesDefault = {
    categories: Data_Maybe.Nothing.value, 
    nodes: Data_Maybe.Nothing.value, 
    links: Data_Maybe.Nothing.value, 
    matrix: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    size: Data_Maybe.Nothing.value, 
    minRadius: Data_Maybe.Nothing.value, 
    maxRadius: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    linkSymbol: Data_Maybe.Nothing.value, 
    linkSymbolSize: Data_Maybe.Nothing.value, 
    scaling: Data_Maybe.Nothing.value, 
    gravity: Data_Maybe.Nothing.value, 
    draggable: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    useWorker: Data_Maybe.Nothing.value, 
    steps: Data_Maybe.Nothing.value, 
    ribbonType: Data_Maybe.Nothing.value
};
var forceRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.forceCategoryEncodeJson)))("categories")(r.categories), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.nodeEncodeJson)))("nodes")(r.nodes), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.linkEncodeJson)))("links")(r.links), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))))("matrix")(r.matrix), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("size")(r.size), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minRadius")(r.minRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("maxRadius")(r.maxRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbol")(r.linkSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbolSize")(r.linkSymbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("scaling")(r.scaling), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gravity")(r.gravity), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("draggable")(r.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(r.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("useWorker")(r.useWorker), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("steps")(r.steps), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ribbonType")(r.ribbonType) ];
};
var eventRiverSeriesDefault = {
    eventList: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var eventRiverRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_EventRiver.oneEventEncodeJson)))("eventList")(r.eventList), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(r.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var chordSeriesDefault = {
    nodes: Data_Maybe.Nothing.value, 
    categories: Data_Maybe.Nothing.value, 
    links: Data_Maybe.Nothing.value, 
    matrix: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    ribbonType: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    minRadius: Data_Maybe.Nothing.value, 
    maxRadius: Data_Maybe.Nothing.value, 
    showScale: Data_Maybe.Nothing.value, 
    showScaleText: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    sort: Data_Maybe.Nothing.value, 
    sortSub: Data_Maybe.Nothing.value, 
    clockWise: Data_Maybe.Nothing.value
};
var chordRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.nodeEncodeJson)))("nodes")(r.nodes), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.forceCategoryEncodeJson)))("categories")(r.categories), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.linkEncodeJson)))("links")(r.links), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))))("matrix")(r.matrix), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ribbonType")(r.ribbonType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minRadius")(r.minRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("maxRadius")(r.maxRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScale")(r.showScale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScaleText")(r.showScaleText), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("padding")(r.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sort")(r.sort), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sortSub")(r.sortSub), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clockWise")(r.clockWise) ];
};
var candlestickSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    barMinHeight: Data_Maybe.Nothing.value, 
    barWidth: Data_Maybe.Nothing.value, 
    barMaxWidth: Data_Maybe.Nothing.value
};
var candlestickRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinHeight")(r.barMinHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barWidth")(r.barWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMaxWidth")(r.barMaxWidth) ];
};
var barSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    stack: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    barGap: Data_Maybe.Nothing.value, 
    barCategoryGap: Data_Maybe.Nothing.value, 
    barMinHeight: Data_Maybe.Nothing.value, 
    barWidth: Data_Maybe.Nothing.value, 
    barMaxWidth: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var barRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("stack")(r.stack), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barGap")(r.barGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barCategoryGap")(r.barCategoryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinHeight")(r.barMinHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barWidth")(r.barWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMaxWidth")(r.barMaxWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var specialForSeries = function (series) {
    if (series instanceof LineSeries) {
        return lineRecEncode(series.value0.special);
    };
    if (series instanceof BarSeries) {
        return barRecEncode(series.value0.special);
    };
    if (series instanceof ScatterSeries) {
        return scatterRecEncode(series.value0.special);
    };
    if (series instanceof CandlestickSeries) {
        return candlestickRecEncode(series.value0.special);
    };
    if (series instanceof PieSeries) {
        return pieRecEncode(series.value0.special);
    };
    if (series instanceof RadarSeries) {
        return radarRecEncode(series.value0.special);
    };
    if (series instanceof ChordSeries) {
        return chordRecEncode(series.value0.special);
    };
    if (series instanceof ForceSeries) {
        return forceRecEncode(series.value0.special);
    };
    if (series instanceof MapSeries) {
        return mapRecEncode(series.value0.special);
    };
    if (series instanceof GaugeSeries) {
        return gaugeRecEncode(series.value0.special);
    };
    if (series instanceof FunnelSeries) {
        return funnelRecEncode(series.value0.special);
    };
    if (series instanceof EventRiverSeries) {
        return eventRiverRecEncode(series.value0.special);
    };
    throw new Error("Failed pattern match");
};
var encodeSeries = new Data_Argonaut_Encode.EncodeJson(function (series) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_Array.concat([ universalForSeries(series), typeForSeries(series), specialForSeries(series) ])));
});
var setSeries = function (series) {
    return function (merge) {
        return function (chart) {
            return setSeriesImpl(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(encodeSeries)))(series), merge, chart);
        };
    };
};
module.exports = {
    BarSeries: BarSeries, 
    CandlestickSeries: CandlestickSeries, 
    ChordSeries: ChordSeries, 
    EventRiverSeries: EventRiverSeries, 
    ForceSeries: ForceSeries, 
    FunnelSeries: FunnelSeries, 
    GaugeSeries: GaugeSeries, 
    LineSeries: LineSeries, 
    MapSeries: MapSeries, 
    PieSeries: PieSeries, 
    RadarSeries: RadarSeries, 
    ScatterSeries: ScatterSeries, 
    barSeriesDefault: barSeriesDefault, 
    candlestickSeriesDefault: candlestickSeriesDefault, 
    chordSeriesDefault: chordSeriesDefault, 
    encodeSeries: encodeSeries, 
    eventRiverSeriesDefault: eventRiverSeriesDefault, 
    forceSeriesDefault: forceSeriesDefault, 
    funnelSeriesDefault: funnelSeriesDefault, 
    gaugeSeriesDefault: gaugeSeriesDefault, 
    lineSeriesDefault: lineSeriesDefault, 
    mapSeriesDefault: mapSeriesDefault, 
    pieSeriesDefault: pieSeriesDefault, 
    radarSeriesDefault: radarSeriesDefault, 
    scatterSeriesDefault: scatterSeriesDefault, 
    setSeries: setSeries, 
    universalSeriesDefault: universalSeriesDefault
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Array":20,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Axis":53,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Item.Data":65,"ECharts.Mark.Line":71,"ECharts.Mark.Point":72,"ECharts.Series.EventRiver":75,"ECharts.Series.Force":76,"ECharts.Series.Gauge":77,"ECharts.Style.Item":82,"ECharts.Symbol":87,"ECharts.Title":89,"ECharts.Tooltip":91,"ECharts.Type":92,"ECharts.Utils":93,"Prelude":113}],79:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var AreaStyle = {
    create: function (value) {
        return value;
    }
};
var areaStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_70) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("color")(_70), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("fill") ]));
});
module.exports = {
    AreaStyle: AreaStyle, 
    areaStyleEncodeJson: areaStyleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.StrMap":43,"Prelude":113}],80:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Axis = require("ECharts.Axis");
var Data_Maybe = require("Data.Maybe");
var CheckpointStyle = {
    create: function (value) {
        return value;
    }
};
var checkpointStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_119) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_119.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_119.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_119.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_119.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_119.label) ]));
});
var checkpointStyleDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value
};
module.exports = {
    CheckpointStyle: CheckpointStyle, 
    checkpointStyleDefault: checkpointStyleDefault, 
    checkpointStyleEncodeJson: checkpointStyleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Axis":53,"ECharts.Symbol":87,"Prelude":113}],81:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var ChordStyle = {
    create: function (value) {
        return value;
    }
};
var chordStyleJson = new Data_Argonaut_Encode.EncodeJson(function (_71) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_71.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_71.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_71.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_71.borderColor) ]));
});
var chordStyleDefault = {
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
module.exports = {
    ChordStyle: ChordStyle, 
    chordStyleDefault: chordStyleDefault, 
    chordStyleJson: chordStyleJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],82:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Color = require("ECharts.Color");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Style_Chord = require("ECharts.Style.Chord");
var ECharts_Style_Node = require("ECharts.Style.Node");
var ECharts_Style_Link = require("ECharts.Style.Link");
var ItemLabelLine = {
    create: function (value) {
        return value;
    }
};
var ItemLabel = {
    create: function (value) {
        return value;
    }
};
var IStyle = {
    create: function (value) {
        return value;
    }
};
var ItemStyle = {
    create: function (value) {
        return value;
    }
};
var itemStyleDefault = {
    normal: Data_Maybe.Nothing.value, 
    emphasis: Data_Maybe.Nothing.value
};
var itemLabelLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_81) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_81.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_81.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_81.lineStyle) ]));
});
var itemLabelLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var itemLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_80) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_80.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.labelPositionEncodeJson))("position")(_80.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("distance")(_80.distance), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_80.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_80.textStyle) ]));
});
var itemLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    distance: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var istyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_82) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Color.calculableColorEncodeJson))("color")(_82.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_82.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_82.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("barBorderColor")(_82.barBorderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barBorderWidth")(_82.barBorderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("barBorderRadius")(_82.barBorderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelEncodeJson))("label")(_82.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelLineEncodeJson))("labelLine")(_82.labelLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_82.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_82.areaStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Chord.chordStyleJson))("chordStyle")(_82.chordStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Node.nodeStyleEncodeJson))("nodeStyle")(_82.nodeStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Link.linkStyleEncodeJson))("linkStyle")(_82.linkStyle) ]));
});
var itemStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_83) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("normal")(_83.normal), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("emphasis")(_83.emphasis) ]));
});
var istyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    barBorderColor: Data_Maybe.Nothing.value, 
    barBorderRadius: Data_Maybe.Nothing.value, 
    barBorderWidth: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    labelLine: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value, 
    chordStyle: Data_Maybe.Nothing.value, 
    nodeStyle: Data_Maybe.Nothing.value, 
    linkStyle: Data_Maybe.Nothing.value
};
module.exports = {
    IStyle: IStyle, 
    ItemLabel: ItemLabel, 
    ItemLabelLine: ItemLabelLine, 
    ItemStyle: ItemStyle, 
    istyleDefault: istyleDefault, 
    istyleEncodeJson: istyleEncodeJson, 
    itemLabelDefault: itemLabelDefault, 
    itemLabelEncodeJson: itemLabelEncodeJson, 
    itemLabelLineDefault: itemLabelLineDefault, 
    itemLabelLineEncodeJson: itemLabelLineEncodeJson, 
    itemStyleDefault: itemStyleDefault, 
    itemStyleEncodeJson: itemStyleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Color":55,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Formatter":62,"ECharts.Style.Area":79,"ECharts.Style.Chord":81,"ECharts.Style.Line":83,"ECharts.Style.Link":84,"ECharts.Style.Node":85,"ECharts.Style.Text":86,"Prelude":113}],83:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
function Solid() {

};
Solid.value = new Solid();
function Dotted() {

};
Dotted.value = new Dotted();
function Dashed() {

};
Dashed.value = new Dashed();
var LineStyle = {
    create: function (value) {
        return value;
    }
};
var linetypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Solid) {
            return "solid";
        };
        if (a instanceof Dotted) {
            return "dotted";
        };
        if (a instanceof Dashed) {
            return "dashed";
        };
        throw new Error("Failed pattern match");
    })());
});
var lineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_72) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_72.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linetypeEncodeJson))("type")(_72.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_72.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("shadowColor")(_72.shadowColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetX")(_72.shadowOffsetX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetY")(_72.shadowOffsetY) ]));
});
var lineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    shadowColor: Data_Maybe.Nothing.value, 
    shadowOffsetX: Data_Maybe.Nothing.value, 
    shadowOffsetY: Data_Maybe.Nothing.value
};
module.exports = {
    Dashed: Dashed, 
    Dotted: Dotted, 
    LineStyle: LineStyle, 
    Solid: Solid, 
    lineStyleDefault: lineStyleDefault, 
    lineStyleEncodeJson: lineStyleEncodeJson, 
    linetypeEncodeJson: linetypeEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],84:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
function LTCurve() {

};
LTCurve.value = new LTCurve();
function LTLine() {

};
LTLine.value = new LTLine();
var LinkStyle = {
    create: function (value) {
        return value;
    }
};
var linkTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof LTCurve) {
            return "curve";
        };
        if (a instanceof LTLine) {
            return "line";
        };
        throw new Error("Failed pattern match");
    })());
});
var linkStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_73) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTypeEncodeJson))("type")(_73.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_73.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_73.width) ]));
});
var linkStyleDefault = {
    type: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
module.exports = {
    LTCurve: LTCurve, 
    LTLine: LTLine, 
    LinkStyle: LinkStyle, 
    linkStyleDefault: linkStyleDefault, 
    linkStyleEncodeJson: linkStyleEncodeJson, 
    linkTypeEncodeJson: linkTypeEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],85:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var NodeStyle = {
    create: function (value) {
        return value;
    }
};
var nodeStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_74) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_74.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_74.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_74.borderWidth) ]));
});
var nodeStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value
};
module.exports = {
    NodeStyle: NodeStyle, 
    nodeStyleDefault: nodeStyleDefault, 
    nodeStyleEncodeJson: nodeStyleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"Prelude":113}],86:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
function TBLTop() {

};
TBLTop.value = new TBLTop();
function TBLBottom() {

};
TBLBottom.value = new TBLBottom();
function TBLMiddle() {

};
TBLMiddle.value = new TBLMiddle();
function FWNormal() {

};
FWNormal.value = new FWNormal();
function FWBold() {

};
FWBold.value = new FWBold();
function FWBolder() {

};
FWBolder.value = new FWBolder();
function FWLighter() {

};
FWLighter.value = new FWLighter();
function FW100() {

};
FW100.value = new FW100();
function FW200() {

};
FW200.value = new FW200();
function FW300() {

};
FW300.value = new FW300();
function FW400() {

};
FW400.value = new FW400();
function FW500() {

};
FW500.value = new FW500();
function FW600() {

};
FW600.value = new FW600();
function FW700() {

};
FW700.value = new FW700();
function FW800() {

};
FW800.value = new FW800();
function FW900() {

};
FW900.value = new FW900();
function FSNormal() {

};
FSNormal.value = new FSNormal();
function FSItalic() {

};
FSItalic.value = new FSItalic();
function FSOblique() {

};
FSOblique.value = new FSOblique();
var TextStyle = {
    create: function (value) {
        return value;
    }
};
var textStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    decoration: Data_Maybe.Nothing.value, 
    align: Data_Maybe.Nothing.value, 
    baseline: Data_Maybe.Nothing.value, 
    fontFamily: Data_Maybe.Nothing.value, 
    fontSize: Data_Maybe.Nothing.value, 
    fontStyle: Data_Maybe.Nothing.value, 
    fontWeight: Data_Maybe.Nothing.value
};
var textBaselineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof TBLTop) {
            return "top";
        };
        if (a instanceof TBLBottom) {
            return "bottom";
        };
        if (a instanceof TBLMiddle) {
            return "middle";
        };
        throw new Error("Failed pattern match");
    })());
});
var fontWeightEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FWNormal) {
            return "normal";
        };
        if (a instanceof FWBold) {
            return "bold";
        };
        if (a instanceof FWBolder) {
            return "bolder";
        };
        if (a instanceof FWLighter) {
            return "lighter";
        };
        if (a instanceof FW100) {
            return "100";
        };
        if (a instanceof FW200) {
            return "200";
        };
        if (a instanceof FW300) {
            return "300";
        };
        if (a instanceof FW400) {
            return "400";
        };
        if (a instanceof FW500) {
            return "500";
        };
        if (a instanceof FW600) {
            return "600";
        };
        if (a instanceof FW700) {
            return "700";
        };
        if (a instanceof FW800) {
            return "800";
        };
        if (a instanceof FW900) {
            return "900";
        };
        throw new Error("Failed pattern match");
    })());
});
var fontStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FSNormal) {
            return "normal";
        };
        if (a instanceof FSItalic) {
            return "italic";
        };
        if (a instanceof FSOblique) {
            return "oblique";
        };
        throw new Error("Failed pattern match");
    })());
});
var textStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_75) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_75.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("decoration")(_75.decoration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("align")(_75.align), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(textBaselineEncodeJson))("baseline")(_75.baseline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fontFamily")(_75.fontFamily), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("fontSize")(_75.fontSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontStyleEncodeJson))("fontStyle")(_75.fontStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontWeightEncodeJson))("fontWeight")(_75.fontWeight) ]));
});
module.exports = {
    FSItalic: FSItalic, 
    FSNormal: FSNormal, 
    FSOblique: FSOblique, 
    FW100: FW100, 
    FW200: FW200, 
    FW300: FW300, 
    FW400: FW400, 
    FW500: FW500, 
    FW600: FW600, 
    FW700: FW700, 
    FW800: FW800, 
    FW900: FW900, 
    FWBold: FWBold, 
    FWBolder: FWBolder, 
    FWLighter: FWLighter, 
    FWNormal: FWNormal, 
    TBLBottom: TBLBottom, 
    TBLMiddle: TBLMiddle, 
    TBLTop: TBLTop, 
    TextStyle: TextStyle, 
    fontStyleEncodeJson: fontStyleEncodeJson, 
    fontWeightEncodeJson: fontWeightEncodeJson, 
    textBaselineEncodeJson: textBaselineEncodeJson, 
    textStyleDefault: textStyleDefault, 
    textStyleEncodeJson: textStyleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Coords":58,"Prelude":113}],87:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
function Size(value0) {
    this.value0 = value0;
};
Size.create = function (value0) {
    return new Size(value0);
};
function Func(value0) {
    this.value0 = value0;
};
Func.create = function (value0) {
    return new Func(value0);
};
function Circle() {

};
Circle.value = new Circle();
function Rectangle() {

};
Rectangle.value = new Rectangle();
function Triangle() {

};
Triangle.value = new Triangle();
function Diamond() {

};
Diamond.value = new Diamond();
function EmptyCircle() {

};
EmptyCircle.value = new EmptyCircle();
function EmptyRectangle() {

};
EmptyRectangle.value = new EmptyRectangle();
function EmptyTriangle() {

};
EmptyTriangle.value = new EmptyTriangle();
function EmptyDiamond() {

};
EmptyDiamond.value = new EmptyDiamond();
function DblSize(value0) {
    this.value0 = value0;
};
DblSize.create = function (value0) {
    return new DblSize(value0);
};
function DblFunc(value0) {
    this.value0 = value0;
};
DblFunc.create = function (value0) {
    return new DblFunc(value0);
};
var symbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof Size) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(ss.value0);
    };
    if (ss instanceof Func) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match");
});
var encodeJsonSymbol = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Circle) {
            return "circle";
        };
        if (a instanceof Rectangle) {
            return "rectangle";
        };
        if (a instanceof Triangle) {
            return "triangle";
        };
        if (a instanceof Diamond) {
            return "diamond";
        };
        if (a instanceof EmptyCircle) {
            return "emptyCircle";
        };
        if (a instanceof EmptyRectangle) {
            return "emptyRectangle";
        };
        if (a instanceof EmptyTriangle) {
            return "emptyTriangle";
        };
        if (a instanceof EmptyDiamond) {
            return "emptyDiamond";
        };
        throw new Error("Failed pattern match");
    })());
});
var dblSymbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof DblSize) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))(ss.value0);
    };
    if (ss instanceof DblFunc) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match");
});
module.exports = {
    Circle: Circle, 
    DblFunc: DblFunc, 
    DblSize: DblSize, 
    Diamond: Diamond, 
    EmptyCircle: EmptyCircle, 
    EmptyDiamond: EmptyDiamond, 
    EmptyRectangle: EmptyRectangle, 
    EmptyTriangle: EmptyTriangle, 
    Func: Func, 
    Rectangle: Rectangle, 
    Size: Size, 
    Triangle: Triangle, 
    dblSymbolSizeEncodeJson: dblSymbolSizeEncodeJson, 
    encodeJsonSymbol: encodeJsonSymbol, 
    symbolSizeEncodeJson: symbolSizeEncodeJson
};

},{"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"ECharts.Utils":93,"Prelude":113}],88:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Style_Checkpoint = require("ECharts.Style.Checkpoint");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Symbol = require("ECharts.Symbol");
function TimelineTime() {

};
TimelineTime.value = new TimelineTime();
function TimelineNumber() {

};
TimelineNumber.value = new TimelineNumber();
function TCPLeft() {

};
TCPLeft.value = new TCPLeft();
function TCPRight() {

};
TCPRight.value = new TCPRight();
function TCPNone() {

};
TCPNone.value = new TCPNone();
var Timeline = {
    create: function (value) {
        return value;
    }
};
var timelineTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TimelineTime) {
            return "time";
        };
        if (a instanceof TimelineNumber) {
            return "number";
        };
        throw new Error("Failed pattern match");
    })());
});
var timelineDefault = {
    show: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    notMerge: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    controlPosition: Data_Maybe.Nothing.value, 
    autoPlay: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    playInterval: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    checkpointStyle: Data_Maybe.Nothing.value, 
    controlStyle: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    currentIndex: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var timelineControlPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TCPNone) {
            return "none";
        };
        if (a instanceof TCPRight) {
            return "right";
        };
        if (a instanceof TCPLeft) {
            return "left";
        };
        throw new Error("Failed pattern match");
    })());
});
var timelineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_120) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_120.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineTypeEncodeJson))("type")(_120.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("notMerge")(_120.notMerge), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_120.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_120.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_120.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_120.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_120.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_120.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_120.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_120.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_120.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_120.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_120.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineControlPositionEncodeJson))("controlPosition")(_120.controlPosition), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("autoPlay")(_120.autoPlay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_120.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("playInterval")(_120.playInterval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_120.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_120.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Checkpoint.checkpointStyleEncodeJson))("checkpointStyle")(_120.checkpointStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("controlStyle")(_120.controlStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_120.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_120.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("currentIndex")(_120.currentIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("data")(_120.data) ]));
});
module.exports = {
    TCPLeft: TCPLeft, 
    TCPNone: TCPNone, 
    TCPRight: TCPRight, 
    Timeline: Timeline, 
    TimelineNumber: TimelineNumber, 
    TimelineTime: TimelineTime, 
    timelineControlPositionEncodeJson: timelineControlPositionEncodeJson, 
    timelineDefault: timelineDefault, 
    timelineEncodeJson: timelineEncodeJson, 
    timelineTypeEncodeJson: timelineTypeEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Axis":53,"ECharts.Common":56,"ECharts.Style.Checkpoint":80,"ECharts.Style.Item":82,"ECharts.Style.Line":83,"ECharts.Symbol":87,"Prelude":113}],89:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
function Self() {

};
Self.value = new Self();
function Blank() {

};
Blank.value = new Blank();
var Title = {
    create: function (value) {
        return value;
    }
};
var titleDefault = {
    text: Data_Maybe.Nothing.value, 
    link: Data_Maybe.Nothing.value, 
    subtext: Data_Maybe.Nothing.value, 
    sublink: Data_Maybe.Nothing.value, 
    subtarget: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textAlign: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    subtextStyle: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    target: Data_Maybe.Nothing.value
};
var linkTargetEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Self) {
            return "self";
        };
        if (a instanceof Blank) {
            return "blank";
        };
        throw new Error("Failed pattern match");
    })());
});
var titleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_84) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_84.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_84.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("target")(_84.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("subtext")(_84.subtext), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("sublink")(_84.sublink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("subtarget")(_84.subtarget), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_84.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_84.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("textAlign")(_84.textAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_84.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_84.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_84.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_84.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_84.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_84.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("subtextStyle")(_84.subtextStyle) ]));
});
module.exports = {
    Blank: Blank, 
    Self: Self, 
    Title: Title, 
    linkTargetEncodeJson: linkTargetEncodeJson, 
    titleDefault: titleDefault, 
    titleEncodeJson: titleEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Style.Text":86,"Prelude":113}],90:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Image = require("ECharts.Image");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
var SaveAsImageFeature = {
    create: function (value) {
        return value;
    }
};
var RestoreFeature = {
    create: function (value) {
        return value;
    }
};
var MarkFeatureTitle = {
    create: function (value) {
        return value;
    }
};
var MarkFeature = {
    create: function (value) {
        return value;
    }
};
function MagicLine() {

};
MagicLine.value = new MagicLine();
function MagicBar() {

};
MagicBar.value = new MagicBar();
function MagicStack() {

};
MagicStack.value = new MagicStack();
function MagicTiled() {

};
MagicTiled.value = new MagicTiled();
function MagicForce() {

};
MagicForce.value = new MagicForce();
function MagicChord() {

};
MagicChord.value = new MagicChord();
function MagicPie() {

};
MagicPie.value = new MagicPie();
function MagicFunnel() {

};
MagicFunnel.value = new MagicFunnel();
var MagicTypeFeature = {
    create: function (value) {
        return value;
    }
};
var DataZoomFeatureTitle = {
    create: function (value) {
        return value;
    }
};
var DataZoomFeature = {
    create: function (value) {
        return value;
    }
};
var DataViewFeature = {
    create: function (value) {
        return value;
    }
};
var Feature = {
    create: function (value) {
        return value;
    }
};
var Toolbox = {
    create: function (value) {
        return value;
    }
};
var toolboxDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    disableColor: Data_Maybe.Nothing.value, 
    effectiveColor: Data_Maybe.Nothing.value, 
    showTitle: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    feature: Data_Maybe.Nothing.value
};
var saveAsImageFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
var saveAsImageEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_87) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_87.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_87.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Image.encodeImg))("type")(_87.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_87.lang) ]));
});
var restoreFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_88) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_88.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_88.title) ]));
});
var restoreFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var mftitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_92) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mark")(_92.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markUndo")(_92.markUndo), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markClear")(_92.markUndo) ]));
});
var markFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_93) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_93.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(mftitleEncodeJson))("title")(_93.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_93.lineStyle) ]));
});
var markFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var magicTypeFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    option: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
var magicTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof MagicLine) {
            return "line";
        };
        if (a instanceof MagicBar) {
            return "bar";
        };
        if (a instanceof MagicStack) {
            return "stack";
        };
        if (a instanceof MagicTiled) {
            return "tiled";
        };
        if (a instanceof MagicForce) {
            return "force";
        };
        if (a instanceof MagicChord) {
            return "chord";
        };
        if (a instanceof MagicPie) {
            return "pie";
        };
        if (a instanceof MagicFunnel) {
            return "funnel";
        };
        throw new Error("Failed pattern match");
    })());
});
var magicTypeFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_94) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_94.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("title")(_94.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("option")(_94.option), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(magicTypeEncodeJson)))("type")(_94.type) ]));
});
var featureDefault = {
    mark: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    dataView: Data_Maybe.Nothing.value, 
    magicType: Data_Maybe.Nothing.value, 
    restore: Data_Maybe.Nothing.value, 
    saveAsImage: Data_Maybe.Nothing.value
};
var datazoomTitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_89) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoom")(_89.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoomReset")(_89.dataZoomReset) ]));
});
var dataviewFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_90) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_90.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(datazoomTitleEncodeJson))("title")(_90.title) ]));
});
var dataZoomFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var dataViewFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_91) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_91.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_91.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("readOnly")(_91.readOnly), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_91.lang) ]));
});
var featureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_86) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(markFeatureEncodeJson))("mark")(_86.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataviewFeatureEncodeJson))("dataZoom")(_86.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataViewFeatureEncodeJson))("dataView")(_86.dataView), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(magicTypeFeatureEncodeJson))("magicType")(_86.magicType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(restoreFeatureEncodeJson))("restore")(_86.restore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(saveAsImageEncodeJson))("saveAsImage")(_86.saveAsImage) ]));
});
var toolboxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_85) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_85.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_85.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_85.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_85.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_85.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_85.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_85.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_85.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_85.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemSize")(_85.itemSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_85.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("disableColor")(_85.disableColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("effectiveColor")(_85.effectiveColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showTitle")(_85.showTitle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_85.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(featureEncodeJson))("feature")(_85.feature) ]));
});
var dataViewFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    readOnly: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
module.exports = {
    DataViewFeature: DataViewFeature, 
    DataZoomFeature: DataZoomFeature, 
    DataZoomFeatureTitle: DataZoomFeatureTitle, 
    Feature: Feature, 
    MagicBar: MagicBar, 
    MagicChord: MagicChord, 
    MagicForce: MagicForce, 
    MagicFunnel: MagicFunnel, 
    MagicLine: MagicLine, 
    MagicPie: MagicPie, 
    MagicStack: MagicStack, 
    MagicTiled: MagicTiled, 
    MagicTypeFeature: MagicTypeFeature, 
    MarkFeature: MarkFeature, 
    MarkFeatureTitle: MarkFeatureTitle, 
    RestoreFeature: RestoreFeature, 
    SaveAsImageFeature: SaveAsImageFeature, 
    Toolbox: Toolbox, 
    dataViewFeatureDefault: dataViewFeatureDefault, 
    dataViewFeatureEncodeJson: dataViewFeatureEncodeJson, 
    dataZoomFeatureDefault: dataZoomFeatureDefault, 
    dataviewFeatureEncodeJson: dataviewFeatureEncodeJson, 
    datazoomTitleEncodeJson: datazoomTitleEncodeJson, 
    featureDefault: featureDefault, 
    featureEncodeJson: featureEncodeJson, 
    magicTypeEncodeJson: magicTypeEncodeJson, 
    magicTypeFeatureDefault: magicTypeFeatureDefault, 
    magicTypeFeatureEncodeJson: magicTypeFeatureEncodeJson, 
    markFeatureDefault: markFeatureDefault, 
    markFeatureEncodeJson: markFeatureEncodeJson, 
    mftitleEncodeJson: mftitleEncodeJson, 
    restoreFeatureDefault: restoreFeatureDefault, 
    restoreFeatureEncodeJson: restoreFeatureEncodeJson, 
    saveAsImageEncodeJson: saveAsImageEncodeJson, 
    saveAsImageFeatureDefault: saveAsImageFeatureDefault, 
    toolboxDefault: toolboxDefault, 
    toolboxEncodeJson: toolboxEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Image":64,"ECharts.Style.Line":83,"ECharts.Style.Text":86,"Prelude":113}],91:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Utils = require("ECharts.Utils");
var Data_Function = require("Data.Function");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
function TriggerItem() {

};
TriggerItem.value = new TriggerItem();
function TriggerAxis() {

};
TriggerAxis.value = new TriggerAxis();
function Fixed(value0) {
    this.value0 = value0;
};
Fixed.create = function (value0) {
    return new Fixed(value0);
};
function FuncPos(value0) {
    this.value0 = value0;
};
FuncPos.create = function (value0) {
    return new FuncPos(value0);
};
function LinePointer() {

};
LinePointer.value = new LinePointer();
function CrossPointer() {

};
CrossPointer.value = new CrossPointer();
function ShadowPointer() {

};
ShadowPointer.value = new ShadowPointer();
function NonePointer() {

};
NonePointer.value = new NonePointer();
var TooltipAxisPointer = {
    create: function (value) {
        return value;
    }
};
var Tooltip = {
    create: function (value) {
        return value;
    }
};
var tooltipTriggerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_95) {
    if (_95 instanceof TriggerItem) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("item");
    };
    if (_95 instanceof TriggerAxis) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("axis");
    };
    throw new Error("Failed pattern match");
});
var tooltipPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_96) {
    if (_96 instanceof Fixed) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))(_96.value0);
    };
    if (_96 instanceof FuncPos) {
        return ECharts_Utils.func2json(Data_Function.mkFn1(_96.value0));
    };
    throw new Error("Failed pattern match");
});
var tooltipDefault = {
    show: Data_Maybe.Nothing.value, 
    showContent: Data_Maybe.Nothing.value, 
    trigger: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    islandFormatter: Data_Maybe.Nothing.value, 
    showDelay: Data_Maybe.Nothing.value, 
    hideDelay: Data_Maybe.Nothing.value, 
    transitionDuration: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderRadius: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    axisPointer: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    enterable: Data_Maybe.Nothing.value
};
var tooltipAxisPointerTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LinePointer) {
            return "line";
        };
        if (a instanceof CrossPointer) {
            return "cross";
        };
        if (a instanceof ShadowPointer) {
            return "shadow";
        };
        if (a instanceof NonePointer) {
            return "none";
        };
        throw new Error("Failed pattern match");
    })());
});
var tooltipAxisPointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_97) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerTypeEncodeJson))("type")(_97.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_97.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("crossStyle")(_97.crossStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("shadowStyle")(_97.shadowStyle) ]));
});
var tooltipEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_98) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_98.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showContent")(_98.showContent), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipTriggerEncodeJson))("trigger")(_98.trigger), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipPositionEncodeJson))("position")(_98.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_98.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("islandFormatter")(_98.islandFormatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("showDelay")(_98.showDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("hideDelay")(_98.hideDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("transitionDuration")(_98.transitionDuration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_98.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_98.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderRadius")(_98.borderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_98.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_98.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerEncodeJson))("axisPointer")(_98.axisPointer), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_98.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("enterable")(_98.enterable) ]));
});
var tooltipAxisPointerDefault = {
    type: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    crossStyle: Data_Maybe.Nothing.value, 
    shadowStyle: Data_Maybe.Nothing.value
};
module.exports = {
    CrossPointer: CrossPointer, 
    Fixed: Fixed, 
    FuncPos: FuncPos, 
    LinePointer: LinePointer, 
    NonePointer: NonePointer, 
    ShadowPointer: ShadowPointer, 
    Tooltip: Tooltip, 
    TooltipAxisPointer: TooltipAxisPointer, 
    TriggerAxis: TriggerAxis, 
    TriggerItem: TriggerItem, 
    tooltipAxisPointerDefault: tooltipAxisPointerDefault, 
    tooltipAxisPointerEncodeJson: tooltipAxisPointerEncodeJson, 
    tooltipAxisPointerTypeEncodeJson: tooltipAxisPointerTypeEncodeJson, 
    tooltipDefault: tooltipDefault, 
    tooltipEncodeJson: tooltipEncodeJson, 
    tooltipPositionEncodeJson: tooltipPositionEncodeJson, 
    tooltipTriggerEncodeJson: tooltipTriggerEncodeJson
};

},{"Data.Argonaut.Combinators":15,"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Data.Function":28,"Data.Maybe":32,"Data.StrMap":43,"ECharts.Common":56,"ECharts.Formatter":62,"ECharts.Style.Area":79,"ECharts.Style.Line":83,"ECharts.Style.Text":86,"ECharts.Utils":93,"Prelude":113}],92:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
function Line() {

};
Line.value = new Line();
function Bar() {

};
Bar.value = new Bar();
function Scatter() {

};
Scatter.value = new Scatter();
function Candlestick() {

};
Candlestick.value = new Candlestick();
function Pie() {

};
Pie.value = new Pie();
function Radar() {

};
Radar.value = new Radar();
function Chord() {

};
Chord.value = new Chord();
function Force() {

};
Force.value = new Force();
function Map() {

};
Map.value = new Map();
function Gauge() {

};
Gauge.value = new Gauge();
function Funnel() {

};
Funnel.value = new Funnel();
function EventRiver() {

};
EventRiver.value = new EventRiver();
var chartTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Line) {
            return "line";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Scatter) {
            return "scatter";
        };
        if (a instanceof Candlestick) {
            return "k";
        };
        if (a instanceof Pie) {
            return "pie";
        };
        if (a instanceof Radar) {
            return "radar";
        };
        if (a instanceof Chord) {
            return "chord";
        };
        if (a instanceof Force) {
            return "force";
        };
        if (a instanceof Map) {
            return "map";
        };
        if (a instanceof Gauge) {
            return "gauge";
        };
        if (a instanceof Funnel) {
            return "funnel";
        };
        if (a instanceof EventRiver) {
            return "eventRiver";
        };
        throw new Error("Failed pattern match");
    })());
});
module.exports = {
    Bar: Bar, 
    Candlestick: Candlestick, 
    Chord: Chord, 
    EventRiver: EventRiver, 
    Force: Force, 
    Funnel: Funnel, 
    Gauge: Gauge, 
    Line: Line, 
    Map: Map, 
    Pie: Pie, 
    Radar: Radar, 
    Scatter: Scatter, 
    chartTypeEncodeJson: chartTypeEncodeJson
};

},{"Data.Argonaut.Core":16,"Data.Argonaut.Encode":18,"Prelude":113}],93:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

function unnull(obj) {
  if (obj == null || typeof(obj) != 'object') {
    return obj;
  }
  var temp = new obj.constructor();
  for (var i in obj) {
    if (obj.hasOwnProperty(i) && obj[i] !== null && obj[i] !== undefined) {
      temp[i] = unnull(obj[i]);
    }
  }
  return temp;
}
;

function func2json(fn) {
  return fn;
}
;
module.exports = {
    func2json: func2json, 
    unnull: unnull
};

},{"Prelude":113}],94:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var Data_Maybe = require("Data.Maybe");
var Data_Date = require("Data.Date");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Data_Array = require("Data.Array");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options = function (dateDefault) {
    return ECharts_Options.Option.create((function () {
        var _424 = {};
        for (var _425 in ECharts_Options.optionDefault) {
            if (ECharts_Options.optionDefault.hasOwnProperty(_425)) {
                _424[_425] = ECharts_Options.optionDefault[_425];
            };
        };
        _424.tooltip = Data_Maybe.Just.create((function () {
            var _398 = {};
            for (var _399 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_399)) {
                    _398[_399] = ECharts_Tooltip.tooltipDefault[_399];
                };
            };
            _398.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            _398.enterable = new Data_Maybe.Just(true);
            return _398;
        })());
        _424.title = Data_Maybe.Just.create((function () {
            var _400 = {};
            for (var _401 in ECharts_Title.titleDefault) {
                if (ECharts_Title.titleDefault.hasOwnProperty(_401)) {
                    _400[_401] = ECharts_Title.titleDefault[_401];
                };
            };
            _400.text = new Data_Maybe.Just("event river");
            _400.subtext = new Data_Maybe.Just("subtext");
            return _400;
        })());
        _424.legend = Data_Maybe.Just.create((function () {
            var _402 = {};
            for (var _403 in ECharts_Legend.legendDefault) {
                if (ECharts_Legend.legendDefault.hasOwnProperty(_403)) {
                    _402[_403] = ECharts_Legend.legendDefault[_403];
                };
            };
            _402.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "first", "second" ]));
            return _402;
        })());
        _424.toolbox = Data_Maybe.Just.create((function () {
            var _412 = {};
            for (var _413 in ECharts_Toolbox.toolboxDefault) {
                if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_413)) {
                    _412[_413] = ECharts_Toolbox.toolboxDefault[_413];
                };
            };
            _412.feature = Data_Maybe.Just.create((function () {
                var _410 = {};
                for (var _411 in ECharts_Toolbox.featureDefault) {
                    if (ECharts_Toolbox.featureDefault.hasOwnProperty(_411)) {
                        _410[_411] = ECharts_Toolbox.featureDefault[_411];
                    };
                };
                _410.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                    var _404 = {};
                    for (var _405 in ECharts_Toolbox.markFeatureDefault) {
                        if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_405)) {
                            _404[_405] = ECharts_Toolbox.markFeatureDefault[_405];
                        };
                    };
                    _404.show = new Data_Maybe.Just(true);
                    return _404;
                })()));
                _410.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                    var _406 = {};
                    for (var _407 in ECharts_Toolbox.restoreFeatureDefault) {
                        if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_407)) {
                            _406[_407] = ECharts_Toolbox.restoreFeatureDefault[_407];
                        };
                    };
                    _406.show = new Data_Maybe.Just(true);
                    return _406;
                })()));
                _410.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                    var _408 = {};
                    for (var _409 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                        if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_409)) {
                            _408[_409] = ECharts_Toolbox.saveAsImageFeatureDefault[_409];
                        };
                    };
                    _408.show = new Data_Maybe.Just(true);
                    return _408;
                })()));
                return _410;
            })());
            return _412;
        })());
        _424.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
            var _414 = {};
            for (var _415 in ECharts_Axis.axisDefault) {
                if (ECharts_Axis.axisDefault.hasOwnProperty(_415)) {
                    _414[_415] = ECharts_Axis.axisDefault[_415];
                };
            };
            _414.type = new Data_Maybe.Just(ECharts_Axis.TimeAxis.value);
            _414.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.ValueBoundaryGap(5.0e-2, 0.1));
            return _414;
        })()));
        _424.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.EventRiverSeries({
            common: (function () {
                var _416 = {};
                for (var _417 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_417)) {
                        _416[_417] = ECharts_Series.universalSeriesDefault[_417];
                    };
                };
                _416.name = new Data_Maybe.Just("first");
                return _416;
            })(), 
            special: (function () {
                var _418 = {};
                for (var _419 in ECharts_Series.eventRiverSeriesDefault) {
                    if (ECharts_Series.eventRiverSeriesDefault.hasOwnProperty(_419)) {
                        _418[_419] = ECharts_Series.eventRiverSeriesDefault[_419];
                    };
                };
                _418.weight = new Data_Maybe.Just(123);
                _418.eventList = new Data_Maybe.Just([ {
                    name: new Data_Maybe.Just("river1"), 
                    weight: new Data_Maybe.Just(123), 
                    evolution: new Data_Maybe.Just([ {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-01")), 
                        value: 14, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-02")), 
                        value: 34, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-03")), 
                        value: 60, 
                        detail: Data_Maybe.Nothing.value
                    } ])
                }, {
                    name: new Data_Maybe.Just("river2"), 
                    weight: new Data_Maybe.Just(123), 
                    evolution: new Data_Maybe.Just([ {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-02")), 
                        value: 10, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-03")), 
                        value: 34, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-05")), 
                        value: 40, 
                        detail: Data_Maybe.Nothing.value
                    } ])
                } ]);
                return _418;
            })()
        }), new ECharts_Series.EventRiverSeries({
            common: (function () {
                var _420 = {};
                for (var _421 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_421)) {
                        _420[_421] = ECharts_Series.universalSeriesDefault[_421];
                    };
                };
                _420.name = new Data_Maybe.Just("second");
                return _420;
            })(), 
            special: (function () {
                var _422 = {};
                for (var _423 in ECharts_Series.eventRiverSeriesDefault) {
                    if (ECharts_Series.eventRiverSeriesDefault.hasOwnProperty(_423)) {
                        _422[_423] = ECharts_Series.eventRiverSeriesDefault[_423];
                    };
                };
                _422.weight = new Data_Maybe.Just(123);
                _422.eventList = new Data_Maybe.Just([ {
                    name: new Data_Maybe.Just("Apec"), 
                    weight: new Data_Maybe.Just(123), 
                    evolution: new Data_Maybe.Just([ {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-06")), 
                        value: 14, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-08")), 
                        value: 12, 
                        detail: Data_Maybe.Nothing.value
                    }, {
                        time: Data_Maybe.fromMaybe(dateDefault)(Data_Date.fromString("2014-05-10")), 
                        value: 14, 
                        detail: Data_Maybe.Nothing.value
                    } ])
                } ]);
                return _422;
            })()
        }) ]));
        return _424;
    })());
};
var eventRiver = function (id) {
    return function __do() {
        var _14 = Data_Date.now();
        var _13 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options(_14))(true))();
        return Prelude.unit;
    };
};
module.exports = {
    eventRiver: eventRiver, 
    options: options
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Date":24,"Data.Maybe":32,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Series.EventRiver":75,"ECharts.Title":89,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Prelude":113,"Utils":118}],95:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var Math = require("Math");
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var ECharts_Events = require("ECharts.Events");
var ECharts_Chart = require("ECharts.Chart");
var Control_Monad_Eff = require("Control.Monad.Eff");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Coords = require("ECharts.Coords");
var subscribe = function (chart) {
    var sub = function (et) {
        return function (hndl) {
            return ECharts_Events.listen(et)(hndl)(chart);
        };
    };
    return function __do() {
        sub(ECharts_Events.Click.value)(Utils.log)();
        sub(ECharts_Events.DoubleClick.value)(Utils.log)();
        sub(ECharts_Events.DataZoom.value)(Utils.log)();
        sub(ECharts_Events.LegendSelected.value)(Utils.log)();
        sub(ECharts_Events.MagicTypeChanged.value)(Utils.log)();
        return sub(ECharts_Events.DataViewChanged.value)(Utils.log)();
    };
};
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var options_ = function (line) {
    return function (bar) {
        return ECharts_Options.Option.create((function () {
            var _460 = {};
            for (var _461 in ECharts_Options.optionDefault) {
                if (ECharts_Options.optionDefault.hasOwnProperty(_461)) {
                    _460[_461] = ECharts_Options.optionDefault[_461];
                };
            };
            _460.tooltip = Data_Maybe.Just.create((function () {
                var _428 = {};
                for (var _429 in ECharts_Tooltip.tooltipDefault) {
                    if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_429)) {
                        _428[_429] = ECharts_Tooltip.tooltipDefault[_429];
                    };
                };
                _428.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
                return _428;
            })());
            _460.legend = Data_Maybe.Just.create((function () {
                var _430 = {};
                for (var _431 in ECharts_Legend.legendDefault) {
                    if (ECharts_Legend.legendDefault.hasOwnProperty(_431)) {
                        _430[_431] = ECharts_Legend.legendDefault[_431];
                    };
                };
                _430.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "fst", "snd" ]));
                return _430;
            })());
            _460.toolbox = Data_Maybe.Just.create(ECharts_Toolbox.Toolbox.create((function () {
                var _444 = {};
                for (var _445 in ECharts_Toolbox.toolboxDefault) {
                    if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_445)) {
                        _444[_445] = ECharts_Toolbox.toolboxDefault[_445];
                    };
                };
                _444.show = new Data_Maybe.Just(true);
                _444.x = new Data_Maybe.Just(ECharts_Coords.XRight.value);
                _444.feature = Data_Maybe.Just.create(ECharts_Toolbox.Feature.create((function () {
                    var _442 = {};
                    for (var _443 in ECharts_Toolbox.featureDefault) {
                        if (ECharts_Toolbox.featureDefault.hasOwnProperty(_443)) {
                            _442[_443] = ECharts_Toolbox.featureDefault[_443];
                        };
                    };
                    _442.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                        var _432 = {};
                        for (var _433 in ECharts_Toolbox.markFeatureDefault) {
                            if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_433)) {
                                _432[_433] = ECharts_Toolbox.markFeatureDefault[_433];
                            };
                        };
                        _432.show = new Data_Maybe.Just(true);
                        return _432;
                    })()));
                    _442.dataView = Data_Maybe.Just.create(ECharts_Toolbox.DataViewFeature.create((function () {
                        var _434 = {};
                        for (var _435 in ECharts_Toolbox.dataViewFeatureDefault) {
                            if (ECharts_Toolbox.dataViewFeatureDefault.hasOwnProperty(_435)) {
                                _434[_435] = ECharts_Toolbox.dataViewFeatureDefault[_435];
                            };
                        };
                        _434.show = new Data_Maybe.Just(true);
                        _434.readOnly = new Data_Maybe.Just(false);
                        return _434;
                    })()));
                    _442.magicType = Data_Maybe.Just.create(ECharts_Toolbox.MagicTypeFeature.create((function () {
                        var _436 = {};
                        for (var _437 in ECharts_Toolbox.magicTypeFeatureDefault) {
                            if (ECharts_Toolbox.magicTypeFeatureDefault.hasOwnProperty(_437)) {
                                _436[_437] = ECharts_Toolbox.magicTypeFeatureDefault[_437];
                            };
                        };
                        _436.show = new Data_Maybe.Just(true);
                        _436.type = new Data_Maybe.Just([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value, ECharts_Toolbox.MagicStack.value, ECharts_Toolbox.MagicTiled.value ]);
                        return _436;
                    })()));
                    _442.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                        var _438 = {};
                        for (var _439 in ECharts_Toolbox.restoreFeatureDefault) {
                            if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_439)) {
                                _438[_439] = ECharts_Toolbox.restoreFeatureDefault[_439];
                            };
                        };
                        _438.show = new Data_Maybe.Just(true);
                        return _438;
                    })()));
                    _442.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                        var _440 = {};
                        for (var _441 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                            if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_441)) {
                                _440[_441] = ECharts_Toolbox.saveAsImageFeatureDefault[_441];
                            };
                        };
                        _440.show = new Data_Maybe.Just(true);
                        return _440;
                    })()));
                    return _442;
                })()));
                return _444;
            })()));
            _460.calculable = new Data_Maybe.Just(true);
            _460.dataZoom = Data_Maybe.Just.create(ECharts_DataZoom.DataZoom.create((function () {
                var _446 = {};
                for (var _447 in ECharts_DataZoom.dataZoomDefault) {
                    if (ECharts_DataZoom.dataZoomDefault.hasOwnProperty(_447)) {
                        _446[_447] = ECharts_DataZoom.dataZoomDefault[_447];
                    };
                };
                _446.show = new Data_Maybe.Just(true);
                _446.realtime = new Data_Maybe.Just(true);
                _446.start = new Data_Maybe.Just(40);
                _446.end = new Data_Maybe.Just(60);
                return _446;
            })()));
            _460.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
                var _448 = {};
                for (var _449 in ECharts_Axis.axisDefault) {
                    if (ECharts_Axis.axisDefault.hasOwnProperty(_449)) {
                        _448[_449] = ECharts_Axis.axisDefault[_449];
                    };
                };
                _448.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
                _448.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.CatBoundaryGap(true));
                _448.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(function (i) {
                    return ECharts_Axis.CommonAxisData.create("2013-03-" + Prelude.show(Prelude.showNumber)(i));
                })(Data_Array[".."](1)(30)));
                return _448;
            })())));
            _460.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
                var _450 = {};
                for (var _451 in ECharts_Axis.axisDefault) {
                    if (ECharts_Axis.axisDefault.hasOwnProperty(_451)) {
                        _450[_451] = ECharts_Axis.axisDefault[_451];
                    };
                };
                _450.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
                return _450;
            })())));
            _460.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.LineSeries({
                common: (function () {
                    var _452 = {};
                    for (var _453 in ECharts_Series.universalSeriesDefault) {
                        if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_453)) {
                            _452[_453] = ECharts_Series.universalSeriesDefault[_453];
                        };
                    };
                    _452.name = new Data_Maybe.Just("fst");
                    return _452;
                })(), 
                special: (function () {
                    var _454 = {};
                    for (var _455 in ECharts_Series.lineSeriesDefault) {
                        if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_455)) {
                            _454[_455] = ECharts_Series.lineSeriesDefault[_455];
                        };
                    };
                    _454.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(line));
                    return _454;
                })()
            }), new ECharts_Series.BarSeries({
                common: (function () {
                    var _456 = {};
                    for (var _457 in ECharts_Series.universalSeriesDefault) {
                        if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_457)) {
                            _456[_457] = ECharts_Series.universalSeriesDefault[_457];
                        };
                    };
                    _456.name = new Data_Maybe.Just("snd");
                    return _456;
                })(), 
                special: (function () {
                    var _458 = {};
                    for (var _459 in ECharts_Series.barSeriesDefault) {
                        if (ECharts_Series.barSeriesDefault.hasOwnProperty(_459)) {
                            _458[_459] = ECharts_Series.barSeriesDefault[_459];
                        };
                    };
                    _458.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(bar));
                    return _458;
                })()
            }) ]));
            return _460;
        })());
    };
};
var lineData = function __do() {
    var _15 = Utils.randomLst(30)();
    return Prelude["<$>"](Data_Array.functorArray)(function (x) {
        return Math.round(x * 30 + 30);
    })(_15);
};
var barData = function __do() {
    var _16 = Utils.randomLst(30)();
    return Prelude["<$>"](Data_Array.functorArray)(function (x) {
        return Math.round(x * 10);
    })(_16);
};
var options = function __do() {
    var _18 = lineData();
    var _17 = barData();
    return options_(_18)(_17);
};
var events = function (id) {
    return function __do() {
        var _20 = options();
        var _19 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(_20)(true))();
        subscribe(_19)();
        return Prelude.unit;
    };
};
module.exports = {
    barData: barData, 
    events: events, 
    lineData: lineData, 
    options: options, 
    options_: options_, 
    simpleData: simpleData, 
    subscribe: subscribe
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Coords":58,"ECharts.DataZoom":60,"ECharts.Events":61,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Math":105,"Prelude":113,"Utils":118}],96:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Array = require("Data.Array");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Options = require("ECharts.Options");
var ECharts_Series = require("ECharts.Series");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var ECharts_Color = require("ECharts.Color");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
function MockData(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
MockData.create = function (value0) {
    return function (value1) {
        return new MockData(value0, value1);
    };
};

function clientWidth(id) {
  return function() {
    return document.getElementById(id).clientWidth;
  };
}
;

function clientHeight(id) {
  return function() {
    return document.getElementById(id).clientHeight;
  };
}
;
var randomInRange = function (min) {
    return function (max) {
        return Prelude["<$>"](Control_Monad_Eff.functorEff)(function (x) {
            return (max - min) * x + min;
        })(Control_Monad_Eff_Random.random);
    };
};
var nodes = Prelude["return"](Control_Monad_Eff.monadEff)([  ]);
var nodeNormalize = function (node) {
    return ECharts_Series_Force.Node.create((function () {
        var _468 = {};
        for (var _469 in ECharts_Series_Force.nodeDefault(node.value)) {
            if ((ECharts_Series_Force.nodeDefault(node.value)).hasOwnProperty(_469)) {
                _468[_469] = (ECharts_Series_Force.nodeDefault(node.value))[_469];
            };
        };
        _468.name = new Data_Maybe.Just(node.name);
        _468.initial = new Data_Maybe.Just(node.initial);
        _468.fixX = new Data_Maybe.Just(node.fixX);
        _468.fixY = new Data_Maybe.Just(node.fixY);
        _468.category = Data_Maybe.Just.create(node.category);
        return _468;
    })());
};
var links = Prelude["return"](Control_Monad_Eff.monadEff)([  ]);
var linkNormalize = function (link) {
    return {
        source: new ECharts_Series_Force.Name(link.source), 
        target: new ECharts_Series_Force.Name(link.target), 
        weight: link.weight, 
        itemStyle: Data_Maybe.Nothing.value
    };
};
var itemColor = function (color) {
    return Data_Maybe.Just.create((function () {
        var _472 = {};
        for (var _473 in ECharts_Style_Item.itemStyleDefault) {
            if (ECharts_Style_Item.itemStyleDefault.hasOwnProperty(_473)) {
                _472[_473] = ECharts_Style_Item.itemStyleDefault[_473];
            };
        };
        _472.normal = Data_Maybe.Just.create((function () {
            var _470 = {};
            for (var _471 in ECharts_Style_Item.istyleDefault) {
                if (ECharts_Style_Item.istyleDefault.hasOwnProperty(_471)) {
                    _470[_471] = ECharts_Style_Item.istyleDefault[_471];
                };
            };
            _470.color = Data_Maybe.Just.create(new ECharts_Color.SimpleColor(color));
            return _470;
        })());
        return _472;
    })());
};
var constMinRadius = 2;
var constMinChildren = 2;
var constMaxRadius = 10;
var mkOptions = function (nodes_1) {
    return function (links_1) {
        return ECharts_Options.Option.create((function () {
            var _484 = {};
            for (var _485 in ECharts_Options.optionDefault) {
                if (ECharts_Options.optionDefault.hasOwnProperty(_485)) {
                    _484[_485] = ECharts_Options.optionDefault[_485];
                };
            };
            _484.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.ForceSeries({
                common: (function () {
                    var _474 = {};
                    for (var _475 in ECharts_Series.universalSeriesDefault) {
                        if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_475)) {
                            _474[_475] = ECharts_Series.universalSeriesDefault[_475];
                        };
                    };
                    _474.name = new Data_Maybe.Just("Force tree");
                    return _474;
                })(), 
                special: (function () {
                    var _482 = {};
                    for (var _483 in ECharts_Series.forceSeriesDefault) {
                        if (ECharts_Series.forceSeriesDefault.hasOwnProperty(_483)) {
                            _482[_483] = ECharts_Series.forceSeriesDefault[_483];
                        };
                    };
                    _482.ribbonType = new Data_Maybe.Just(true);
                    _482.categories = new Data_Maybe.Just([ ECharts_Series_Force.ForceCategory.create((function () {
                        var _476 = {};
                        for (var _477 in ECharts_Series_Force.forceCategoryDefault) {
                            if (ECharts_Series_Force.forceCategoryDefault.hasOwnProperty(_477)) {
                                _476[_477] = ECharts_Series_Force.forceCategoryDefault[_477];
                            };
                        };
                        _476.name = new Data_Maybe.Just("first");
                        _476.itemStyle = itemColor("#ff7f50");
                        return _476;
                    })()), ECharts_Series_Force.ForceCategory.create((function () {
                        var _478 = {};
                        for (var _479 in ECharts_Series_Force.forceCategoryDefault) {
                            if (ECharts_Series_Force.forceCategoryDefault.hasOwnProperty(_479)) {
                                _478[_479] = ECharts_Series_Force.forceCategoryDefault[_479];
                            };
                        };
                        _478.name = new Data_Maybe.Just("second");
                        _478.itemStyle = itemColor("#6f57bc");
                        return _478;
                    })()), ECharts_Series_Force.ForceCategory.create((function () {
                        var _480 = {};
                        for (var _481 in ECharts_Series_Force.forceCategoryDefault) {
                            if (ECharts_Series_Force.forceCategoryDefault.hasOwnProperty(_481)) {
                                _480[_481] = ECharts_Series_Force.forceCategoryDefault[_481];
                            };
                        };
                        _480.name = new Data_Maybe.Just("third");
                        _480.itemStyle = itemColor("#af0000");
                        return _480;
                    })()) ]);
                    _482.nodes = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(nodeNormalize)(nodes_1));
                    _482.links = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(linkNormalize)(links_1));
                    _482.minRadius = new Data_Maybe.Just(constMinRadius);
                    _482.maxRadius = new Data_Maybe.Just(constMaxRadius);
                    return _482;
                })()
            }) ]));
            return _484;
        })());
    };
};
var constMaxDepth = 4;
var createRootNode = function (depth) {
    return function __do() {
        var _24 = clientWidth("force4")();
        var _23 = clientHeight("force4")();
        var _22 = Control_Monad_Eff_Random.random();
        var _21 = randomInRange(constMinRadius)(constMaxRadius)();
        return (function () {
            var x = _24 / 2 + (0.5 - _22) * 200;
            var y = (_23 - 20) * depth / (constMaxDepth + 1) + 20;
            return Prelude["return"](Control_Monad_Eff.monadEff)({
                name: "ROOT_NODE", 
                value: _21, 
                id: "root", 
                depth: depth, 
                initial: Data_Tuple_Nested["/\\"](x)(y), 
                fixX: false, 
                fixY: true, 
                category: 2
            });
        })()();
    };
};
var createNodeWithIndex = function (idx) {
    return function (depth) {
        return function __do() {
            var _25 = createRootNode(depth)();
            var _491 = {};
            for (var _492 in _25) {
                if (_25.hasOwnProperty(_492)) {
                    _491[_492] = _25[_492];
                };
            };
            _491.id = idx;
            _491.name = "NODE_" + idx;
            _491.category = depth === constMaxDepth ? 0 : 1;
            return _491;
        };
    };
};
var mkChild = function (node) {
    return function (idx) {
        return function __do() {
            var _26 = createNodeWithIndex(idx)(node.depth + 1)();
            return (function () {
                var link = {
                    source: node.name, 
                    target: _26.name, 
                    weight: 1
                };
                return Prelude["return"](Control_Monad_Eff.monadEff)(new Data_Tuple.Tuple(_26, link));
            })()();
        };
    };
};
var constMaxChildren = 3;
var mkChildren = function (node) {
    return function __do() {
        var _27 = randomInRange(constMinChildren)(constMaxChildren)();
        return (function () {
            var ids = Prelude["<$>"](Data_Array.functorArray)(function (x) {
                return node.id + (":" + Prelude.show(Prelude.showNumber)(x));
            })(Data_Array[".."](1)(_27));
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(mkChild(node))(ids));
        })()();
    };
};
var forceMockThreeDataI = function (_131) {
    return function (_132) {
        return function (_133) {
            if (_133 === 0) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(_132);
            };
            var nextAccum = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (_130) {
                return function (_129) {
                    return new MockData(Prelude[":"](_129.value0)(_130.value0), Prelude[":"](_129.value1)(_130.value1));
                };
            })(_132)(_131);
            return function __do() {
                var _28 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(mkChildren)(Data_Tuple.fst))(_131))();
                return forceMockThreeDataI(Data_Array.concat(_28))(nextAccum)(_133 - 1)();
            };
        };
    };
};
var forceMockThreeData = function __do() {
    var _30 = createRootNode(0)();
    var _29 = mkChildren(_30)();
    return forceMockThreeDataI(_29)(new MockData([ _30 ], [  ]))(constMaxDepth)();
};
var options = function __do() {
    var _31 = forceMockThreeData();
    Utils.log(_31.value1)();
    return mkOptions(_31.value0)(_31.value1);
};
var force4 = function (id) {
    return function __do() {
        var _33 = options();
        var _32 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(_33)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    MockData: MockData, 
    clientHeight: clientHeight, 
    clientWidth: clientWidth, 
    constMaxChildren: constMaxChildren, 
    constMaxDepth: constMaxDepth, 
    constMaxRadius: constMaxRadius, 
    constMinChildren: constMinChildren, 
    constMinRadius: constMinRadius, 
    createNodeWithIndex: createNodeWithIndex, 
    createRootNode: createRootNode, 
    force4: force4, 
    forceMockThreeData: forceMockThreeData, 
    forceMockThreeDataI: forceMockThreeDataI, 
    itemColor: itemColor, 
    linkNormalize: linkNormalize, 
    links: links, 
    mkChild: mkChild, 
    mkChildren: mkChildren, 
    mkOptions: mkOptions, 
    nodeNormalize: nodeNormalize, 
    nodes: nodes, 
    options: options, 
    randomInRange: randomInRange
};

},{"Control.Monad.Eff":11,"Control.Monad.Eff.Random":10,"Data.Array":20,"Data.Foldable":27,"Data.Maybe":32,"Data.Traversable":47,"Data.Tuple":49,"Data.Tuple.Nested":48,"ECharts.Chart":54,"ECharts.Color":55,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Series.Force":76,"ECharts.Style.Item":82,"Prelude":113,"Utils":118}],97:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Options = require("ECharts.Options");
var ECharts_Series = require("ECharts.Series");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Common = require("ECharts.Common");
var Control_Monad_Eff = require("Control.Monad.Eff");
var simpleDat = function (val) {
    return function (nam) {
        return ECharts_Item_Data.Dat.create((function () {
            var _513 = {};
            for (var _514 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(val))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(val))).hasOwnProperty(_514)) {
                    _513[_514] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(val)))[_514];
                };
            };
            _513.name = new Data_Maybe.Just(nam);
            return _513;
        })());
    };
};
var options = ECharts_Options.Option.create((function () {
    var _517 = {};
    for (var _518 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_518)) {
            _517[_518] = ECharts_Options.optionDefault[_518];
        };
    };
    _517.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.FunnelSeries({
        common: ECharts_Series.universalSeriesDefault, 
        special: (function () {
            var _515 = {};
            for (var _516 in ECharts_Series.funnelSeriesDefault) {
                if (ECharts_Series.funnelSeriesDefault.hasOwnProperty(_516)) {
                    _515[_516] = ECharts_Series.funnelSeriesDefault[_516];
                };
            };
            _515.data = Data_Maybe.Just.create([ simpleDat(60)("foo"), simpleDat(80)("bar"), simpleDat(12)("baz"), simpleDat(123)("quux") ]);
            _515.sort = new Data_Maybe.Just(ECharts_Common.Asc.value);
            return _515;
        })()
    }) ]));
    return _517;
})());
var funnel2 = function (id) {
    return function __do() {
        var _34 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    funnel2: funnel2, 
    options: options, 
    simpleDat: simpleDat
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Chart":54,"ECharts.Common":56,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Options":73,"ECharts.Series":78,"Prelude":113,"Utils":118}],98:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Signal_Time = require("Signal.Time");
var Prelude = require("Prelude");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var ECharts_Options = require("ECharts.Options");
var ECharts_Series = require("ECharts.Series");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Signal = require("Signal");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Control_Monad_Eff = require("Control.Monad.Eff");
var options_ = function (val) {
    return ECharts_Options.Option.create((function () {
        var _522 = {};
        for (var _523 in ECharts_Options.optionDefault) {
            if (ECharts_Options.optionDefault.hasOwnProperty(_523)) {
                _522[_523] = ECharts_Options.optionDefault[_523];
            };
        };
        _522.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.GaugeSeries({
            common: ECharts_Series.universalSeriesDefault, 
            special: (function () {
                var _520 = {};
                for (var _521 in ECharts_Series.gaugeSeriesDefault) {
                    if (ECharts_Series.gaugeSeriesDefault.hasOwnProperty(_521)) {
                        _520[_521] = ECharts_Series.gaugeSeriesDefault[_521];
                    };
                };
                _520.data = new Data_Maybe.Just([ ECharts_Item_Data.Value.create(new ECharts_Item_Value.Simple(val)) ]);
                return _520;
            })()
        }) ]));
        return _522;
    })());
};
var gaugeValueSignal = Signal["~>"](Signal.functorSignal)(Signal_Time.every(2000))(Prelude["const"](function __do() {
    var _35 = Control_Monad_Eff_Random.random();
    return _35 * 100;
}));
var options = Signal["~>"](Signal.functorSignal)(gaugeValueSignal)(function (g) {
    return function __do() {
        var _36 = g();
        return options_(_36);
    };
});
var gauge4 = function (id) {
    return function __do() {
        var _38 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(options)(function (opts) {
            return function __do() {
                var _37 = opts();
                ECharts_Options.setOption(_37)(true)(_38)();
                return Prelude.unit;
            };
        }))();
    };
};
module.exports = {
    gauge4: gauge4, 
    gaugeValueSignal: gaugeValueSignal, 
    options: options, 
    options_: options_
};

},{"Control.Monad.Eff":11,"Control.Monad.Eff.Random":10,"Data.Array":20,"Data.Maybe":32,"ECharts.Chart":54,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Options":73,"ECharts.Series":78,"Prelude":113,"Signal":117,"Signal.Time":116,"Utils":118}],99:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var nan = NaN;;
var infinity = Infinity;;
function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
var readFloat = parseFloat;;
module.exports = {
    infinity: infinity, 
    isFinite: isFinite, 
    isNaN: isNaN, 
    nan: nan, 
    readFloat: readFloat, 
    readInt: readInt
};

},{"Prelude":113}],100:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var simpleDat = function (o) {
    return function (c) {
        return function (l) {
            return function (h) {
                return ECharts_Item_Data.Value.create(new ECharts_Item_Value.HLOC({
                    h: h, 
                    l: l, 
                    o: o, 
                    c: c
                }));
            };
        };
    };
};
var options = ECharts_Options.Option.create((function () {
    var _534 = {};
    for (var _535 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_535)) {
            _534[_535] = ECharts_Options.optionDefault[_535];
        };
    };
    _534.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
        var _528 = {};
        for (var _529 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_529)) {
                _528[_529] = ECharts_Axis.axisDefault[_529];
            };
        };
        _528.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
        _528.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "2013/1/24", "2013/1/25", "2013/1/28", "2013/1/29", "2013/1/30" ]));
        return _528;
    })()));
    _534.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
        var _530 = {};
        for (var _531 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_531)) {
                _530[_531] = ECharts_Axis.axisDefault[_531];
            };
        };
        _530.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
        return _530;
    })()));
    _534.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.CandlestickSeries({
        common: ECharts_Series.universalSeriesDefault, 
        special: (function () {
            var _532 = {};
            for (var _533 in ECharts_Series.candlestickSeriesDefault) {
                if (ECharts_Series.candlestickSeriesDefault.hasOwnProperty(_533)) {
                    _532[_533] = ECharts_Series.candlestickSeriesDefault[_533];
                };
            };
            _532.data = Data_Maybe.Just.create([ simpleDat(2320.26)(2302.6)(2287.3)(2362.94), simpleDat(2300)(2291.3)(2288.26)(2308.38), simpleDat(2295.35)(2346.5)(2295.35)(2346.92), simpleDat(2347.22)(2358.98)(2337.35)(2363.8), simpleDat(2360.75)(2382.48)(2347.89)(2383.76) ]);
            return _532;
        })()
    }) ]));
    return _534;
})());
var k = function (id) {
    return function __do() {
        var _39 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    k: k, 
    options: options, 
    simpleDat: simpleDat
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Options":73,"ECharts.Series":78,"Prelude":113,"Utils":118}],101:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var ECharts_Coords = require("ECharts.Coords");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var options = ECharts_Options.Option.create((function () {
    var _579 = {};
    for (var _580 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_580)) {
            _579[_580] = ECharts_Options.optionDefault[_580];
        };
    };
    _579.tooltip = Data_Maybe.Just.create((function () {
        var _537 = {};
        for (var _538 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_538)) {
                _537[_538] = ECharts_Tooltip.tooltipDefault[_538];
            };
        };
        _537.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
        return _537;
    })());
    _579.legend = Data_Maybe.Just.create((function () {
        var _539 = {};
        for (var _540 in ECharts_Legend.legendDefault) {
            if (ECharts_Legend.legendDefault.hasOwnProperty(_540)) {
                _539[_540] = ECharts_Legend.legendDefault[_540];
            };
        };
        _539.x = new Data_Maybe.Just(ECharts_Coords.XLeft.value);
        _539.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "email marketing", "affiliate advertising", "video ads", "direct access", "search engine" ]));
        return _539;
    })());
    _579.toolbox = Data_Maybe.Just.create(ECharts_Toolbox.Toolbox.create((function () {
        var _553 = {};
        for (var _554 in ECharts_Toolbox.toolboxDefault) {
            if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_554)) {
                _553[_554] = ECharts_Toolbox.toolboxDefault[_554];
            };
        };
        _553.show = new Data_Maybe.Just(true);
        _553.x = new Data_Maybe.Just(ECharts_Coords.XRight.value);
        _553.feature = Data_Maybe.Just.create(ECharts_Toolbox.Feature.create((function () {
            var _551 = {};
            for (var _552 in ECharts_Toolbox.featureDefault) {
                if (ECharts_Toolbox.featureDefault.hasOwnProperty(_552)) {
                    _551[_552] = ECharts_Toolbox.featureDefault[_552];
                };
            };
            _551.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                var _541 = {};
                for (var _542 in ECharts_Toolbox.markFeatureDefault) {
                    if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_542)) {
                        _541[_542] = ECharts_Toolbox.markFeatureDefault[_542];
                    };
                };
                _541.show = new Data_Maybe.Just(true);
                return _541;
            })()));
            _551.dataView = Data_Maybe.Just.create(ECharts_Toolbox.DataViewFeature.create((function () {
                var _543 = {};
                for (var _544 in ECharts_Toolbox.dataViewFeatureDefault) {
                    if (ECharts_Toolbox.dataViewFeatureDefault.hasOwnProperty(_544)) {
                        _543[_544] = ECharts_Toolbox.dataViewFeatureDefault[_544];
                    };
                };
                _543.show = new Data_Maybe.Just(true);
                _543.readOnly = new Data_Maybe.Just(false);
                return _543;
            })()));
            _551.magicType = Data_Maybe.Just.create(ECharts_Toolbox.MagicTypeFeature.create((function () {
                var _545 = {};
                for (var _546 in ECharts_Toolbox.magicTypeFeatureDefault) {
                    if (ECharts_Toolbox.magicTypeFeatureDefault.hasOwnProperty(_546)) {
                        _545[_546] = ECharts_Toolbox.magicTypeFeatureDefault[_546];
                    };
                };
                _545.show = new Data_Maybe.Just(true);
                _545.type = new Data_Maybe.Just([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value, ECharts_Toolbox.MagicStack.value, ECharts_Toolbox.MagicTiled.value ]);
                return _545;
            })()));
            _551.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                var _547 = {};
                for (var _548 in ECharts_Toolbox.restoreFeatureDefault) {
                    if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_548)) {
                        _547[_548] = ECharts_Toolbox.restoreFeatureDefault[_548];
                    };
                };
                _547.show = new Data_Maybe.Just(true);
                return _547;
            })()));
            _551.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                var _549 = {};
                for (var _550 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                    if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_550)) {
                        _549[_550] = ECharts_Toolbox.saveAsImageFeatureDefault[_550];
                    };
                };
                _549.show = new Data_Maybe.Just(true);
                return _549;
            })()));
            return _551;
        })()));
        return _553;
    })()));
    _579.calculable = new Data_Maybe.Just(true);
    _579.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _555 = {};
        for (var _556 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_556)) {
                _555[_556] = ECharts_Axis.axisDefault[_556];
            };
        };
        _555.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
        _555.boundaryGap = Data_Maybe.Just.create(new ECharts_Axis.CatBoundaryGap(false));
        _555.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ]));
        return _555;
    })())));
    _579.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _557 = {};
        for (var _558 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_558)) {
                _557[_558] = ECharts_Axis.axisDefault[_558];
            };
        };
        _557.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
        return _557;
    })())));
    _579.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.LineSeries({
        common: (function () {
            var _559 = {};
            for (var _560 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_560)) {
                    _559[_560] = ECharts_Series.universalSeriesDefault[_560];
                };
            };
            _559.name = new Data_Maybe.Just("email marketing");
            return _559;
        })(), 
        special: (function () {
            var _561 = {};
            for (var _562 in ECharts_Series.lineSeriesDefault) {
                if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_562)) {
                    _561[_562] = ECharts_Series.lineSeriesDefault[_562];
                };
            };
            _561.stack = new Data_Maybe.Just("total");
            _561.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 120, 132, 101, 134, 90, 230, 210 ]));
            return _561;
        })()
    }), new ECharts_Series.LineSeries({
        common: (function () {
            var _563 = {};
            for (var _564 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_564)) {
                    _563[_564] = ECharts_Series.universalSeriesDefault[_564];
                };
            };
            _563.name = new Data_Maybe.Just("affiliate advertising");
            return _563;
        })(), 
        special: (function () {
            var _565 = {};
            for (var _566 in ECharts_Series.lineSeriesDefault) {
                if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_566)) {
                    _565[_566] = ECharts_Series.lineSeriesDefault[_566];
                };
            };
            _565.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 220, 182, 191, 234, 290, 330, 310 ]));
            return _565;
        })()
    }), new ECharts_Series.LineSeries({
        common: (function () {
            var _567 = {};
            for (var _568 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_568)) {
                    _567[_568] = ECharts_Series.universalSeriesDefault[_568];
                };
            };
            _567.name = new Data_Maybe.Just("video ads");
            return _567;
        })(), 
        special: (function () {
            var _569 = {};
            for (var _570 in ECharts_Series.lineSeriesDefault) {
                if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_570)) {
                    _569[_570] = ECharts_Series.lineSeriesDefault[_570];
                };
            };
            _569.stack = new Data_Maybe.Just("total");
            _569.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 150, 232, 201, 154, 190, 330, 410 ]));
            return _569;
        })()
    }), new ECharts_Series.LineSeries({
        common: (function () {
            var _571 = {};
            for (var _572 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_572)) {
                    _571[_572] = ECharts_Series.universalSeriesDefault[_572];
                };
            };
            _571.name = new Data_Maybe.Just("direct access");
            return _571;
        })(), 
        special: (function () {
            var _573 = {};
            for (var _574 in ECharts_Series.lineSeriesDefault) {
                if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_574)) {
                    _573[_574] = ECharts_Series.lineSeriesDefault[_574];
                };
            };
            _573.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 320, 332, 301, 334, 390, 330, 320 ]));
            return _573;
        })()
    }), new ECharts_Series.LineSeries({
        common: (function () {
            var _575 = {};
            for (var _576 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_576)) {
                    _575[_576] = ECharts_Series.universalSeriesDefault[_576];
                };
            };
            _575.name = new Data_Maybe.Just("search engine");
            return _575;
        })(), 
        special: (function () {
            var _577 = {};
            for (var _578 in ECharts_Series.lineSeriesDefault) {
                if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_578)) {
                    _577[_578] = ECharts_Series.lineSeriesDefault[_578];
                };
            };
            _577.stack = new Data_Maybe.Just("total");
            _577.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 820, 932, 901, 934, 1290, 1330, 1320 ]));
            return _577;
        })()
    }) ]));
    return _579;
})());
var line4 = function (id) {
    return function __do() {
        var _40 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(options)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    line4: line4, 
    options: options, 
    simpleData: simpleData
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Coords":58,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Prelude":113,"Utils":118}],102:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Loading = require("ECharts.Loading");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Series = require("ECharts.Series");
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Axis = require("ECharts.Axis");
var Signal = require("Signal");
var Prelude = require("Prelude");
var Utils = require("Utils");
var Signal_Time = require("Signal.Time");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
function StartLoading(value0) {
    this.value0 = value0;
};
StartLoading.create = function (value0) {
    return new StartLoading(value0);
};
function StopLoading(value0) {
    this.value0 = value0;
};
StopLoading.create = function (value0) {
    return new StopLoading(value0);
};
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var series = function (_134) {
    if (_134) {
        return [ new ECharts_Series.LineSeries({
            common: (function () {
                var _583 = {};
                for (var _584 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_584)) {
                        _583[_584] = ECharts_Series.universalSeriesDefault[_584];
                    };
                };
                _583.name = new Data_Maybe.Just("first");
                return _583;
            })(), 
            special: (function () {
                var _585 = {};
                for (var _586 in ECharts_Series.lineSeriesDefault) {
                    if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_586)) {
                        _585[_586] = ECharts_Series.lineSeriesDefault[_586];
                    };
                };
                _585.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3 ]));
                return _585;
            })()
        }), new ECharts_Series.LineSeries({
            common: (function () {
                var _587 = {};
                for (var _588 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_588)) {
                        _587[_588] = ECharts_Series.universalSeriesDefault[_588];
                    };
                };
                _587.name = new Data_Maybe.Just("second");
                return _587;
            })(), 
            special: (function () {
                var _589 = {};
                for (var _590 in ECharts_Series.lineSeriesDefault) {
                    if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_590)) {
                        _589[_590] = ECharts_Series.lineSeriesDefault[_590];
                    };
                };
                _589.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3 ]));
                return _589;
            })()
        }) ];
    };
    if (!_134) {
        return [ new ECharts_Series.BarSeries({
            common: (function () {
                var _591 = {};
                for (var _592 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_592)) {
                        _591[_592] = ECharts_Series.universalSeriesDefault[_592];
                    };
                };
                _591.name = new Data_Maybe.Just("first");
                return _591;
            })(), 
            special: (function () {
                var _593 = {};
                for (var _594 in ECharts_Series.barSeriesDefault) {
                    if (ECharts_Series.barSeriesDefault.hasOwnProperty(_594)) {
                        _593[_594] = ECharts_Series.barSeriesDefault[_594];
                    };
                };
                _593.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3 ]));
                return _593;
            })()
        }), new ECharts_Series.BarSeries({
            common: (function () {
                var _595 = {};
                for (var _596 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_596)) {
                        _595[_596] = ECharts_Series.universalSeriesDefault[_596];
                    };
                };
                _595.name = new Data_Maybe.Just("second");
                return _595;
            })(), 
            special: (function () {
                var _597 = {};
                for (var _598 in ECharts_Series.barSeriesDefault) {
                    if (ECharts_Series.barSeriesDefault.hasOwnProperty(_598)) {
                        _597[_598] = ECharts_Series.barSeriesDefault[_598];
                    };
                };
                _597.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3 ]));
                return _597;
            })()
        }) ];
    };
    throw new Error("Failed pattern match");
};
var options = function (i) {
    return ECharts_Options.Option.create((function () {
        var _621 = {};
        for (var _622 in ECharts_Options.optionDefault) {
            if (ECharts_Options.optionDefault.hasOwnProperty(_622)) {
                _621[_622] = ECharts_Options.optionDefault[_622];
            };
        };
        _621.tooltip = Data_Maybe.Just.create((function () {
            var _599 = {};
            for (var _600 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_600)) {
                    _599[_600] = ECharts_Tooltip.tooltipDefault[_600];
                };
            };
            _599.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
            return _599;
        })());
        _621.toolbox = Data_Maybe.Just.create(ECharts_Toolbox.Toolbox.create((function () {
            var _613 = {};
            for (var _614 in ECharts_Toolbox.toolboxDefault) {
                if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_614)) {
                    _613[_614] = ECharts_Toolbox.toolboxDefault[_614];
                };
            };
            _613.show = new Data_Maybe.Just(true);
            _613.feature = Data_Maybe.Just.create(ECharts_Toolbox.Feature.create((function () {
                var _611 = {};
                for (var _612 in ECharts_Toolbox.featureDefault) {
                    if (ECharts_Toolbox.featureDefault.hasOwnProperty(_612)) {
                        _611[_612] = ECharts_Toolbox.featureDefault[_612];
                    };
                };
                _611.mark = Data_Maybe.Just.create(ECharts_Toolbox.MarkFeature.create((function () {
                    var _601 = {};
                    for (var _602 in ECharts_Toolbox.markFeatureDefault) {
                        if (ECharts_Toolbox.markFeatureDefault.hasOwnProperty(_602)) {
                            _601[_602] = ECharts_Toolbox.markFeatureDefault[_602];
                        };
                    };
                    _601.show = new Data_Maybe.Just(true);
                    return _601;
                })()));
                _611.dataView = Data_Maybe.Just.create(ECharts_Toolbox.DataViewFeature.create((function () {
                    var _603 = {};
                    for (var _604 in ECharts_Toolbox.dataViewFeatureDefault) {
                        if (ECharts_Toolbox.dataViewFeatureDefault.hasOwnProperty(_604)) {
                            _603[_604] = ECharts_Toolbox.dataViewFeatureDefault[_604];
                        };
                    };
                    _603.show = new Data_Maybe.Just(true);
                    _603.readOnly = new Data_Maybe.Just(false);
                    return _603;
                })()));
                _611.magicType = Data_Maybe.Just.create(ECharts_Toolbox.MagicTypeFeature.create((function () {
                    var _605 = {};
                    for (var _606 in ECharts_Toolbox.magicTypeFeatureDefault) {
                        if (ECharts_Toolbox.magicTypeFeatureDefault.hasOwnProperty(_606)) {
                            _605[_606] = ECharts_Toolbox.magicTypeFeatureDefault[_606];
                        };
                    };
                    _605.show = new Data_Maybe.Just(true);
                    _605.type = new Data_Maybe.Just([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value ]);
                    return _605;
                })()));
                _611.restore = Data_Maybe.Just.create(ECharts_Toolbox.RestoreFeature.create((function () {
                    var _607 = {};
                    for (var _608 in ECharts_Toolbox.restoreFeatureDefault) {
                        if (ECharts_Toolbox.restoreFeatureDefault.hasOwnProperty(_608)) {
                            _607[_608] = ECharts_Toolbox.restoreFeatureDefault[_608];
                        };
                    };
                    _607.show = new Data_Maybe.Just(true);
                    return _607;
                })()));
                _611.saveAsImage = Data_Maybe.Just.create(ECharts_Toolbox.SaveAsImageFeature.create((function () {
                    var _609 = {};
                    for (var _610 in ECharts_Toolbox.saveAsImageFeatureDefault) {
                        if (ECharts_Toolbox.saveAsImageFeatureDefault.hasOwnProperty(_610)) {
                            _609[_610] = ECharts_Toolbox.saveAsImageFeatureDefault[_610];
                        };
                    };
                    _609.show = new Data_Maybe.Just(true);
                    return _609;
                })()));
                return _611;
            })()));
            return _613;
        })()));
        _621.legend = Data_Maybe.Just.create((function () {
            var _615 = {};
            for (var _616 in ECharts_Legend.legendDefault) {
                if (ECharts_Legend.legendDefault.hasOwnProperty(_616)) {
                    _615[_616] = ECharts_Legend.legendDefault[_616];
                };
            };
            _615.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "first", "second" ]));
            return _615;
        })());
        _621.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
            var _617 = {};
            for (var _618 in ECharts_Axis.axisDefault) {
                if (ECharts_Axis.axisDefault.hasOwnProperty(_618)) {
                    _617[_618] = ECharts_Axis.axisDefault[_618];
                };
            };
            _617.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
            _617.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ]));
            return _617;
        })()));
        _621.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
            var _619 = {};
            for (var _620 in ECharts_Axis.axisDefault) {
                if (ECharts_Axis.axisDefault.hasOwnProperty(_620)) {
                    _619[_620] = ECharts_Axis.axisDefault[_620];
                };
            };
            _619.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
            return _619;
        })()));
        _621.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)(series(i % 2 === 0)));
        return _621;
    })());
};
var effect = function (eff) {
    return ECharts_Loading.LoadingOption.create((function () {
        var _625 = {};
        for (var _626 in ECharts_Loading.loadingOptionDefault) {
            if (ECharts_Loading.loadingOptionDefault.hasOwnProperty(_626)) {
                _625[_626] = ECharts_Loading.loadingOptionDefault[_626];
            };
        };
        _625.text = Data_Maybe.Just.create("effect");
        _625.effect = new Data_Maybe.Just(eff);
        _625.textStyle = Data_Maybe.Just.create(ECharts_Style_Text.TextStyle.create((function () {
            var _623 = {};
            for (var _624 in ECharts_Style_Text.textStyleDefault) {
                if (ECharts_Style_Text.textStyleDefault.hasOwnProperty(_624)) {
                    _623[_624] = ECharts_Style_Text.textStyleDefault[_624];
                };
            };
            _623.fontSize = new Data_Maybe.Just(20);
            return _623;
        })()));
        return _625;
    })());
};
var allEffects = [ ECharts_Loading.Spin.value, ECharts_Loading.Bar.value, ECharts_Loading.Ring.value, ECharts_Loading.Whirling.value, ECharts_Loading.DynamicLine.value, ECharts_Loading.Bubble.value ];
var dataStream = Signal.foldp(function (_) {
    return function (curstateE) {
        return function __do() {
            var _43 = curstateE();
            return (function () {
                if (_43 instanceof StartLoading) {
                    return function __do() {
                        var _41 = Utils.randomInList(allEffects)();
                        return StopLoading.create(options(_41.value1));
                    };
                };
                if (_43 instanceof StopLoading) {
                    return function __do() {
                        var _42 = Utils.randomInList(allEffects)();
                        return new StartLoading(effect(_42.value0));
                    };
                };
                throw new Error("Failed pattern match");
            })()();
        };
    };
})(Prelude["return"](Control_Monad_Eff.monadEff)(new StartLoading(effect(ECharts_Loading.Spin.value))))(Signal_Time.every(2000));
var loading = function (id) {
    return function __do() {
        var _45 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(dataStream)(function (effContent) {
            return function __do() {
                var _44 = effContent();
                return (function () {
                    if (_44 instanceof StartLoading) {
                        return function __do() {
                            var _ = ECharts_Loading.showLoading(_44.value0)(_45)();
                            return Prelude.unit;
                        };
                    };
                    if (_44 instanceof StopLoading) {
                        return function __do() {
                            var _ = Prelude[">>="](Control_Monad_Eff.bindEff)(ECharts_Options.setOption(_44.value0)(true)(_45))(ECharts_Loading.hideLoading)();
                            return Prelude.unit;
                        };
                    };
                    throw new Error("Failed pattern match");
                })()();
            };
        }))();
    };
};
module.exports = {
    StartLoading: StartLoading, 
    StopLoading: StopLoading, 
    allEffects: allEffects, 
    dataStream: dataStream, 
    effect: effect, 
    loading: loading, 
    options: options, 
    series: series, 
    simpleData: simpleData
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"Data.Tuple":49,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Loading":68,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Style.Text":86,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Prelude":113,"Signal":117,"Signal.Time":116,"Utils":118}],103:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Utils = require("Utils");
var Prelude = require("Prelude");
var Line4 = require("Line4");
var Scatter3 = require("Scatter3");
var K = require("K");
var Radar3 = require("Radar3");
var Chord2 = require("Chord2");
var Force4 = require("Force4");
var Map11 = require("Map11");
var Gauge4 = require("Gauge4");
var Funnel2 = require("Funnel2");
var EventRiver1 = require("EventRiver1");
var DynamicLineBar = require("DynamicLineBar");
var Loading = require("Loading");
var Events = require("Events");
var Connect = require("Connect");
var Mix2Safe = require("Mix2Safe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var main = Utils.onLoad(function __do() {
    Line4.line4("line4")();
    Scatter3.scatter3("scatter3")();
    K.k("k")();
    Radar3.radar3("radar3")();
    Chord2.chord2("chord2")();
    Force4.force4("force4")();
    Map11.map11("map11")();
    Gauge4.gauge4("gauge4")();
    Funnel2.funnel2("funnel2")();
    EventRiver1.eventRiver("event-river")();
    DynamicLineBar.dynamicLineBar("dynamic-line-bar")();
    Loading.loading("loading")();
    Events.events("events")();
    Connect.connectM("connect1")("connect2")();
    return Mix2Safe.mix2safe("mix2safe")();
});
module.exports = {
    main: main
};

},{"Chord2":2,"Connect":3,"Control.Monad.Eff":11,"DynamicLineBar":51,"EventRiver1":94,"Events":95,"Force4":96,"Funnel2":97,"Gauge4":98,"K":100,"Line4":101,"Loading":102,"Map11":104,"Mix2Safe":106,"Prelude":113,"Radar3":114,"Scatter3":115,"Utils":118}],104:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Options = require("ECharts.Options");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Series = require("ECharts.Series");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var Data_StrMap = require("Data.StrMap");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Control_Monad_Eff = require("Control.Monad.Eff");
var nameValue = function (_135) {
    return ECharts_Mark_Data.MarkPointData.create((function () {
        var _645 = {};
        for (var _646 in ECharts_Mark_Data.markPointDataDefault) {
            if (ECharts_Mark_Data.markPointDataDefault.hasOwnProperty(_646)) {
                _645[_646] = ECharts_Mark_Data.markPointDataDefault[_646];
            };
        };
        _645.name = new Data_Maybe.Just(_135.name);
        _645.value = new Data_Maybe.Just(_135.value);
        return _645;
    })());
};
var option = ECharts_Options.Option.create((function () {
    var _657 = {};
    for (var _658 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_658)) {
            _657[_658] = ECharts_Options.optionDefault[_658];
        };
    };
    _657.tooltip = Data_Maybe.Just.create((function () {
        var _649 = {};
        for (var _650 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_650)) {
                _649[_650] = ECharts_Tooltip.tooltipDefault[_650];
            };
        };
        _649.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
        return _649;
    })());
    _657.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.MapSeries({
        common: (function () {
            var _653 = {};
            for (var _654 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_654)) {
                    _653[_654] = ECharts_Series.universalSeriesDefault[_654];
                };
            };
            _653.markPoint = Data_Maybe.Just.create(ECharts_Mark_Point.MarkPoint.create((function () {
                var _651 = {};
                for (var _652 in ECharts_Mark_Point.markPointDefault) {
                    if (ECharts_Mark_Point.markPointDefault.hasOwnProperty(_652)) {
                        _651[_652] = ECharts_Mark_Point.markPointDefault[_652];
                    };
                };
                _651.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(nameValue)([ {
                    name: "trololo", 
                    value: 123
                } ]));
                return _651;
            })()));
            return _653;
        })(), 
        special: (function () {
            var _655 = {};
            for (var _656 in ECharts_Series.mapSeriesDefault) {
                if (ECharts_Series.mapSeriesDefault.hasOwnProperty(_656)) {
                    _655[_656] = ECharts_Series.mapSeriesDefault[_656];
                };
            };
            _655.data = new Data_Maybe.Just([  ]);
            _655.mapType = new Data_Maybe.Just("china");
            _655.geoCoord = Data_Maybe.Just.create(Data_StrMap.fromList([ new Data_Tuple.Tuple("trololo", new Data_Tuple.Tuple(121, 43)) ]));
            return _655;
        })()
    }) ]));
    return _657;
})());
var map11 = function (id) {
    return function __do() {
        var _46 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(option)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    map11: map11, 
    nameValue: nameValue, 
    option: option
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"Data.StrMap":43,"Data.Tuple":49,"ECharts.Chart":54,"ECharts.Mark.Data":69,"ECharts.Mark.Point":72,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Tooltip":91,"Prelude":113,"Utils":118}],105:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var abs = Math.abs;;
var acos = Math.acos;;
var asin = Math.asin;;
var atan = Math.atan;;
function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
var ceil = Math.ceil;;
var cos = Math.cos;;
var exp = Math.exp;;
var floor = Math.floor;;
var log = Math.log;;
function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
function pow(n){  return function(p) {    return Math.pow(n, p);  }};
var round = Math.round;;
var sin = Math.sin;;
var sqrt = Math.sqrt;;
var tan = Math.tan;;
var e       = Math.E;;
var ln2     = Math.LN2;;
var ln10    = Math.LN10;;
var log2e   = Math.LOG2E;;
var log10e  = Math.LOG10E;;
var pi      = Math.PI;;
var sqrt1_2 = Math.SQRT1_2;;
var sqrt2   = Math.SQRT2;;
module.exports = {
    abs: abs, 
    acos: acos, 
    asin: asin, 
    atan: atan, 
    atan2: atan2, 
    ceil: ceil, 
    cos: cos, 
    e: e, 
    exp: exp, 
    floor: floor, 
    ln10: ln10, 
    ln2: ln2, 
    log: log, 
    log10e: log10e, 
    log2e: log2e, 
    max: max, 
    min: min, 
    pi: pi, 
    pow: pow, 
    round: round, 
    sin: sin, 
    sqrt: sqrt, 
    sqrt1_2: sqrt1_2, 
    sqrt2: sqrt2, 
    tan: tan
};

},{"Prelude":113}],106:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Series = require("ECharts.Series");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Options = require("ECharts.Options");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Axis = require("ECharts.Axis");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Common = require("ECharts.Common");
var Data_Tuple = require("Data.Tuple");
var ECharts_Coords = require("ECharts.Coords");
var Control_Monad_Eff = require("Control.Monad.Eff");
var simpleData = Prelude["<<<"](Prelude.semigroupoidArr)(ECharts_Item_Data.Value.create)(ECharts_Item_Value.Simple.create);
var series = [ new ECharts_Series.BarSeries({
    common: (function () {
        var _660 = {};
        for (var _661 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_661)) {
                _660[_661] = ECharts_Series.universalSeriesDefault[_661];
            };
        };
        _660.name = new Data_Maybe.Just("direct access");
        return _660;
    })(), 
    special: (function () {
        var _662 = {};
        for (var _663 in ECharts_Series.barSeriesDefault) {
            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_663)) {
                _662[_663] = ECharts_Series.barSeriesDefault[_663];
            };
        };
        _662.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 320, 332, 301, 334, 390, 330, 320 ]));
        _662.stack = new Data_Maybe.Just("total");
        return _662;
    })()
}), new ECharts_Series.BarSeries({
    common: (function () {
        var _666 = {};
        for (var _667 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_667)) {
                _666[_667] = ECharts_Series.universalSeriesDefault[_667];
            };
        };
        _666.name = new Data_Maybe.Just("email marketing");
        _666.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _664 = {};
            for (var _665 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_665)) {
                    _664[_665] = ECharts_Tooltip.tooltipDefault[_665];
                };
            };
            _664.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _664;
        })()));
        return _666;
    })(), 
    special: (function () {
        var _668 = {};
        for (var _669 in ECharts_Series.barSeriesDefault) {
            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_669)) {
                _668[_669] = ECharts_Series.barSeriesDefault[_669];
            };
        };
        _668.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 120, 132, 101, 134, 90, 230, 210 ]));
        _668.stack = new Data_Maybe.Just("total");
        return _668;
    })()
}), new ECharts_Series.BarSeries({
    common: (function () {
        var _672 = {};
        for (var _673 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_673)) {
                _672[_673] = ECharts_Series.universalSeriesDefault[_673];
            };
        };
        _672.name = new Data_Maybe.Just("affiliate advertising");
        _672.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _670 = {};
            for (var _671 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_671)) {
                    _670[_671] = ECharts_Tooltip.tooltipDefault[_671];
                };
            };
            _670.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _670;
        })()));
        return _672;
    })(), 
    special: (function () {
        var _674 = {};
        for (var _675 in ECharts_Series.barSeriesDefault) {
            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_675)) {
                _674[_675] = ECharts_Series.barSeriesDefault[_675];
            };
        };
        _674.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 220, 182, 191, 234, 290, 330, 310 ]));
        return _674;
    })()
}), new ECharts_Series.BarSeries({
    common: (function () {
        var _678 = {};
        for (var _679 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_679)) {
                _678[_679] = ECharts_Series.universalSeriesDefault[_679];
            };
        };
        _678.name = new Data_Maybe.Just("video ads");
        _678.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _676 = {};
            for (var _677 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_677)) {
                    _676[_677] = ECharts_Tooltip.tooltipDefault[_677];
                };
            };
            _676.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            return _676;
        })()));
        return _678;
    })(), 
    special: (function () {
        var _680 = {};
        for (var _681 in ECharts_Series.barSeriesDefault) {
            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_681)) {
                _680[_681] = ECharts_Series.barSeriesDefault[_681];
            };
        };
        _680.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 150, 232, 201, 154, 190, 330, 410 ]));
        return _680;
    })()
}), new ECharts_Series.LineSeries({
    common: (function () {
        var _682 = {};
        for (var _683 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_683)) {
                _682[_683] = ECharts_Series.universalSeriesDefault[_683];
            };
        };
        _682.name = new Data_Maybe.Just("must be");
        return _682;
    })(), 
    special: (function () {
        var _684 = {};
        for (var _685 in ECharts_Series.lineSeriesDefault) {
            if (ECharts_Series.lineSeriesDefault.hasOwnProperty(_685)) {
                _684[_685] = ECharts_Series.lineSeriesDefault[_685];
            };
        };
        _684.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)([ 862, 1018, 964, 1026, 1679, 1600, 1570 ]));
        return _684;
    })()
}), new ECharts_Series.PieSeries({
    common: (function () {
        var _690 = {};
        for (var _691 in ECharts_Series.universalSeriesDefault) {
            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_691)) {
                _690[_691] = ECharts_Series.universalSeriesDefault[_691];
            };
        };
        _690.name = new Data_Maybe.Just("search engine");
        _690.itemStyle = Data_Maybe.Just.create({
            emphasis: Data_Maybe.Nothing.value, 
            normal: Data_Maybe.Just.create(ECharts_Style_Item.IStyle.create((function () {
                var _686 = {};
                for (var _687 in ECharts_Style_Item.istyleDefault) {
                    if (ECharts_Style_Item.istyleDefault.hasOwnProperty(_687)) {
                        _686[_687] = ECharts_Style_Item.istyleDefault[_687];
                    };
                };
                _686.labelLine = Data_Maybe.Just.create({
                    show: new Data_Maybe.Just(true), 
                    length: new Data_Maybe.Just(20), 
                    lineStyle: Data_Maybe.Nothing.value
                });
                return _686;
            })()))
        });
        _690.tooltip = Data_Maybe.Just.create(ECharts_Tooltip.Tooltip.create((function () {
            var _688 = {};
            for (var _689 in ECharts_Tooltip.tooltipDefault) {
                if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_689)) {
                    _688[_689] = ECharts_Tooltip.tooltipDefault[_689];
                };
            };
            _688.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerItem.value);
            _688.formatter = Data_Maybe.Just.create(new ECharts_Formatter.Template("{a} <br/> {b}: {c} ({d}%)"));
            return _688;
        })()));
        return _690;
    })(), 
    special: (function () {
        var _700 = {};
        for (var _701 in ECharts_Series.pieSeriesDefault) {
            if (ECharts_Series.pieSeriesDefault.hasOwnProperty(_701)) {
                _700[_701] = ECharts_Series.pieSeriesDefault[_701];
            };
        };
        _700.radius = Data_Maybe.Just.create(new ECharts_Common.Rs({
            inner: new ECharts_Common.Pixel(0), 
            outer: new ECharts_Common.Pixel(50)
        }));
        _700.center = Data_Maybe.Just.create(new Data_Tuple.Tuple(new ECharts_Common.Percent(160), new ECharts_Common.Percent(130)));
        _700.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Item_Data.Dat.create)([ (function () {
            var _692 = {};
            for (var _693 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047))).hasOwnProperty(_693)) {
                    _692[_693] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(1047)))[_693];
                };
            };
            _692.name = new Data_Maybe.Just("Baidu");
            return _692;
        })(), (function () {
            var _694 = {};
            for (var _695 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264))).hasOwnProperty(_695)) {
                    _694[_695] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(264)))[_695];
                };
            };
            _694.name = new Data_Maybe.Just("Google");
            return _694;
        })(), (function () {
            var _696 = {};
            for (var _697 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145))).hasOwnProperty(_697)) {
                    _696[_697] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(145)))[_697];
                };
            };
            _696.name = new Data_Maybe.Just("Bing");
            return _696;
        })(), (function () {
            var _698 = {};
            for (var _699 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102))).hasOwnProperty(_699)) {
                    _698[_699] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Simple(102)))[_699];
                };
            };
            _698.name = new Data_Maybe.Just("other");
            return _698;
        })() ]));
        return _700;
    })()
}) ];
var options = ECharts_Options.Option.create((function () {
    var _714 = {};
    for (var _715 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_715)) {
            _714[_715] = ECharts_Options.optionDefault[_715];
        };
    };
    _714.tooltip = Data_Maybe.Just.create((function () {
        var _702 = {};
        for (var _703 in ECharts_Tooltip.tooltipDefault) {
            if (ECharts_Tooltip.tooltipDefault.hasOwnProperty(_703)) {
                _702[_703] = ECharts_Tooltip.tooltipDefault[_703];
            };
        };
        _702.trigger = new Data_Maybe.Just(ECharts_Tooltip.TriggerAxis.value);
        return _702;
    })());
    _714.toolbox = Data_Maybe.Just.create((function () {
        var _704 = {};
        for (var _705 in ECharts_Toolbox.toolboxDefault) {
            if (ECharts_Toolbox.toolboxDefault.hasOwnProperty(_705)) {
                _704[_705] = ECharts_Toolbox.toolboxDefault[_705];
            };
        };
        _704.show = new Data_Maybe.Just(true);
        _704.y = new Data_Maybe.Just(ECharts_Coords.YBottom.value);
        _704.feature = Data_Maybe.Just.create({
            mark: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                lineStyle: Data_Maybe.Nothing.value
            }), 
            dataView: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                readOnly: new Data_Maybe.Just(true), 
                lang: Data_Maybe.Nothing.value
            }), 
            magicType: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                option: Data_Maybe.Nothing.value, 
                type: Data_Maybe.Just.create([ ECharts_Toolbox.MagicLine.value, ECharts_Toolbox.MagicBar.value, ECharts_Toolbox.MagicStack.value, ECharts_Toolbox.MagicTiled.value ])
            }), 
            restore: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value
            }), 
            saveAsImage: Data_Maybe.Just.create({
                show: new Data_Maybe.Just(true), 
                title: Data_Maybe.Nothing.value, 
                type: Data_Maybe.Nothing.value, 
                lang: Data_Maybe.Nothing.value
            }), 
            dataZoom: Data_Maybe.Nothing.value
        });
        return _704;
    })());
    _714.calculable = new Data_Maybe.Just(true);
    _714.legend = Data_Maybe.Just.create(ECharts_Legend.Legend.create((function () {
        var _706 = {};
        for (var _707 in ECharts_Legend.legendDefault) {
            if (ECharts_Legend.legendDefault.hasOwnProperty(_707)) {
                _706[_707] = ECharts_Legend.legendDefault[_707];
            };
        };
        _706.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Legend.legendItemDefault)([ "direct access", "email marketing", "affiliate advertising", "video ads", "search engine", "Baidu", "Google", "must be", "other" ]));
        return _706;
    })()));
    _714.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _710 = {};
        for (var _711 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_711)) {
                _710[_711] = ECharts_Axis.axisDefault[_711];
            };
        };
        _710.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
        _710.splitLine = Data_Maybe.Just.create(ECharts_Axis.AxisSplitLine.create((function () {
            var _708 = {};
            for (var _709 in ECharts_Axis.axisSplitLineDefault) {
                if (ECharts_Axis.axisSplitLineDefault.hasOwnProperty(_709)) {
                    _708[_709] = ECharts_Axis.axisSplitLineDefault[_709];
                };
            };
            _708.show = new Data_Maybe.Just(false);
            return _708;
        })()));
        _710.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(ECharts_Axis.CommonAxisData.create)([ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ]));
        return _710;
    })())));
    _714.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis.create((function () {
        var _712 = {};
        for (var _713 in ECharts_Axis.axisDefault) {
            if (ECharts_Axis.axisDefault.hasOwnProperty(_713)) {
                _712[_713] = ECharts_Axis.axisDefault[_713];
            };
        };
        _712.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
        _712.position = new Data_Maybe.Just(ECharts_Axis.RightAxis.value);
        return _712;
    })())));
    _714.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)(series));
    return _714;
})());
var mix2safe = function (id) {
    return function __do() {
        var _47 = Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value))();
        ECharts_Options.setOption(options)(true)(_47)();
        return Prelude.unit;
    };
};
module.exports = {
    mix2safe: mix2safe, 
    options: options, 
    series: series, 
    simpleData: simpleData
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"Data.Tuple":49,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Common":56,"ECharts.Coords":58,"ECharts.Formatter":62,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Legend":67,"ECharts.Options":73,"ECharts.Series":78,"ECharts.Style.Item":82,"ECharts.Toolbox":90,"ECharts.Tooltip":91,"Prelude":113,"Utils":118}],107:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Profunctor = require("Data.Profunctor");
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_Const = require("Data.Const");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Any = require("Data.Monoid.Any");
var Data_Monoid_All = require("Data.Monoid.All");
var Data_Monoid_First = require("Data.Monoid.First");
var Data_Maybe = require("Data.Maybe");
var foldOf = function (asa) {
    return function (s) {
        return Data_Const.getConst(asa(Data_Const.Const.create)(s));
    };
};
var foldMapOf = function (__dict_Profunctor_0) {
    return function (prsa) {
        return function (par) {
            return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(prsa(Data_Profunctor.rmap(__dict_Profunctor_0)(Data_Const.Const.create)(par)));
        };
    };
};
var foldlOf = function (pErsa) {
    return function (par2r) {
        return function (r) {
            return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.lmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.runDual)(Prelude.flip(Data_Monoid_Endo.runEndo)(r)))(foldMapOf(Data_Profunctor.profunctorArr)(pErsa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.Dual.create)(Data_Monoid_Endo.Endo.create))(Prelude.flip(par2r))));
        };
    };
};
var foldrOf = function (__dict_Profunctor_1) {
    return function (pErsa) {
        return function (par2r) {
            return function (r) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Prelude.flip(Data_Monoid_Endo.runEndo)(r))(foldMapOf(__dict_Profunctor_1)(pErsa)(Data_Profunctor.rmap(__dict_Profunctor_1)(Data_Monoid_Endo.Endo.create)(par2r)));
            };
        };
    };
};
var toListOf = function (easa) {
    return foldrOf(Data_Profunctor.profunctorArr)(easa)(Prelude[":"])([  ]);
};
var $up$dot$dot = Prelude.flip(toListOf);
var has = function (asa) {
    return function (s) {
        return Data_Monoid_Any.runAny(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](true))(s));
    };
};
var hasn$primet = function (asa) {
    return function (s) {
        return Data_Monoid_All.runAll(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](false))(s));
    };
};
var $up$qmark = function (s) {
    return function (fasa) {
        return Data_Monoid_First.runFirst(foldMapOf(Data_Profunctor.profunctorArr)(fasa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_First.First.create)(Data_Maybe.Just.create))(s));
    };
};
var filtered = function (__dict_Applicative_2) {
    return function (__dict_Choice_3) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(__dict_Choice_3["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                return p(x) ? new Data_Either.Right(x) : new Data_Either.Left(x);
            })(Data_Either.either(Prelude.pure(__dict_Applicative_2))(Prelude.id(Prelude.categoryArr))))(Data_Profunctor_Choice.right(__dict_Choice_3));
        };
    };
};
module.exports = {
    "^..": $up$dot$dot, 
    "^?": $up$qmark, 
    filtered: filtered, 
    foldMapOf: foldMapOf, 
    foldOf: foldOf, 
    foldlOf: foldlOf, 
    foldrOf: foldrOf, 
    has: has, 
    "hasn't": hasn$primet, 
    toListOf: toListOf
};

},{"Data.Const":22,"Data.Either":25,"Data.Maybe":32,"Data.Monoid.All":33,"Data.Monoid.Any":34,"Data.Monoid.Dual":35,"Data.Monoid.Endo":36,"Data.Monoid.First":37,"Data.Profunctor":40,"Data.Profunctor.Choice":39,"Prelude":113}],108:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function IndexKey() {

};
function IndexValue() {

};
var indexValueStrMap = new IndexValue();
var indexValueSet = new IndexValue();
var indexValueMaybe = new IndexValue();
var indexValueMap = new IndexValue();
var indexValueIdentity = new IndexValue();
var indexValueArray = new IndexValue();
var indexValueArr = new IndexValue();
var indexKeyStrMap = new IndexKey();
var indexKeySet = new IndexKey();
var indexKeyMaybe = new IndexKey();
var indexKeyMap = new IndexKey();
var indexKeyIdentity = new IndexKey();
var indexKeyArray = new IndexKey();
var indexKeyArr = new IndexKey();
module.exports = {
    IndexKey: IndexKey, 
    IndexValue: IndexValue, 
    indexKeyArr: indexKeyArr, 
    indexKeyArray: indexKeyArray, 
    indexKeyIdentity: indexKeyIdentity, 
    indexKeyMap: indexKeyMap, 
    indexKeyMaybe: indexKeyMaybe, 
    indexKeySet: indexKeySet, 
    indexKeyStrMap: indexKeyStrMap, 
    indexValueArr: indexValueArr, 
    indexValueArray: indexValueArray, 
    indexValueIdentity: indexValueIdentity, 
    indexValueMap: indexValueMap, 
    indexValueMaybe: indexValueMaybe, 
    indexValueSet: indexValueSet, 
    indexValueStrMap: indexValueStrMap
};

},{"Prelude":113}],109:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Set = require("Data.Set");
var Data_Map = require("Data.Map");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap = require("Data.StrMap");
var Optic_Index_Class = require("Optic.Index.Class");
var Data_Identity = require("Data.Identity");
function Index(__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
    this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
    this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
    this.ix = ix;
};
var ix = function (dict) {
    return dict.ix;
};
var indexStrMap = new Index(function () {
    return Optic_Index_Class.indexKeyStrMap;
}, function () {
    return Optic_Index_Class.indexValueStrMap;
}, function (str) {
    return function (__dict_Applicative_0) {
        return function (v2fv) {
            return function (sm) {
                return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_0)(sm))(function (v) {
                    return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                        return Data_StrMap.insert(str)(v$prime)(sm);
                    })(v2fv(v));
                })(Data_StrMap.lookup(str)(sm));
            };
        };
    };
});
var indexSet = function (__dict_Ord_1) {
    return new Index(function () {
        return Optic_Index_Class.indexKeySet;
    }, function () {
        return Optic_Index_Class.indexValueSet;
    }, function (a) {
        return function (__dict_Applicative_2) {
            return function (u2fu) {
                return function (s) {
                    return Data_Set.member(__dict_Ord_1)(a)(s) ? Prelude.pure(__dict_Applicative_2)(Data_Set.insert(__dict_Ord_1)(a)(s)) : Prelude.pure(__dict_Applicative_2)(s);
                };
            };
        };
    });
};
var indexMaybe = new Index(function () {
    return Optic_Index_Class.indexKeyMaybe;
}, function () {
    return Optic_Index_Class.indexValueMaybe;
}, function (_727) {
    return function (__dict_Applicative_3) {
        return function (_728) {
            return function (_729) {
                if (_729 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
                };
                if (_729 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_728(_729.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
});
var indexMap = function (__dict_Ord_4) {
    return new Index(function () {
        return Optic_Index_Class.indexKeyMap;
    }, function () {
        return Optic_Index_Class.indexValueMap;
    }, function (k) {
        return function (__dict_Applicative_5) {
            return function (v2fv) {
                return function (m) {
                    return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_5)(m))(function (v) {
                        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                            return Data_Map.insert(__dict_Ord_4)(k)(v$prime)(m);
                        })(v2fv(v));
                    })(Data_Map.lookup(__dict_Ord_4)(k)(m));
                };
            };
        };
    });
};
var indexIdentity = new Index(function () {
    return Optic_Index_Class.indexKeyIdentity;
}, function () {
    return Optic_Index_Class.indexValueIdentity;
}, function (_730) {
    return function (__dict_Applicative_6) {
        return function (_731) {
            return function (_732) {
                return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Identity.Identity.create)(_731(_732));
            };
        };
    };
});
var indexArray = new Index(function () {
    return Optic_Index_Class.indexKeyArray;
}, function () {
    return Optic_Index_Class.indexValueArray;
}, function (_733) {
    return function (__dict_Applicative_7) {
        return function (_734) {
            return function (_735) {
                if (_733 < 0) {
                    return Prelude.pure(__dict_Applicative_7)(_735);
                };
                if (_735.length === 0) {
                    return Prelude.pure(__dict_Applicative_7)([  ]);
                };
                if (_733 === 0 && _735.length >= 1) {
                    var _2517 = _735.slice(1);
                    return Prelude["<#>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(_734(_735[0]))(function (a$prime) {
                        return Prelude[":"](a$prime)(_2517);
                    });
                };
                if (_735.length >= 1) {
                    var _2519 = _735.slice(1);
                    return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_735[0]))(ix(indexArray)(_733 - 1)(__dict_Applicative_7)(_734)(_2519));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
});
var indexArr = function (__dict_Eq_8) {
    return new Index(function () {
        return Optic_Index_Class.indexKeyArr;
    }, function () {
        return Optic_Index_Class.indexValueArr;
    }, function (e) {
        return function (__dict_Applicative_9) {
            return function (a2fa) {
                return function (e2a) {
                    return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                        return function (e$prime) {
                            return Prelude["=="](__dict_Eq_8)(e)(e$prime) ? a : e2a(e$prime);
                        };
                    })(a2fa(e2a(e)));
                };
            };
        };
    });
};
module.exports = {
    Index: Index, 
    indexArr: indexArr, 
    indexArray: indexArray, 
    indexIdentity: indexIdentity, 
    indexMap: indexMap, 
    indexMaybe: indexMaybe, 
    indexSet: indexSet, 
    indexStrMap: indexStrMap, 
    ix: ix
};

},{"Data.Identity":29,"Data.Map":30,"Data.Maybe":32,"Data.Set":41,"Data.StrMap":43,"Optic.Index.Class":108,"Prelude":113}],110:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor = require("Data.Profunctor");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
function Market(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
Market.create = function (value0) {
    return function (value1) {
        return new Market(value0, value1);
    };
};
var profunctorMarket = new Data_Profunctor.Profunctor(function (_170) {
    return function (_171) {
        return function (_172) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_172.value0)(_171), Prelude[">>>"](Prelude.semigroupoidArr)(_170)(Prelude[">>>"](Prelude.semigroupoidArr)(_172.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_171)(Data_Either.Left.create))(Data_Either.Right.create))));
        };
    };
});
var functorMarket = new Prelude.Functor(function (_168) {
    return function (_169) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_169.value0)(_168), Prelude[">>>"](Prelude.semigroupoidArr)(_169.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_168)(Data_Either.Left.create))(Data_Either.Right.create)));
    };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
    return profunctorMarket;
}, function (_173) {
    return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_173.value0)(Data_Either.Left.create), function (thing) {
        if (thing instanceof Data_Either.Left) {
            return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create)(_173.value1(thing.value0));
        };
        if (thing instanceof Data_Either.Right) {
            return Data_Either.Left.create(new Data_Either.Right(thing.value0));
        };
        throw new Error("Failed pattern match");
    });
}, function (_174) {
    return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_174.value0)(Data_Either.Right.create), function (thing) {
        if (thing instanceof Data_Either.Left) {
            return Data_Either.Left.create(new Data_Either.Left(thing.value0));
        };
        if (thing instanceof Data_Either.Right) {
            return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Right.create)(_174.value1(thing.value0));
        };
        throw new Error("Failed pattern match");
    });
});
module.exports = {
    Market: Market, 
    choiceMarket: choiceMarket, 
    functorMarket: functorMarket, 
    profunctorMarket: profunctorMarket
};

},{"Data.Either":25,"Data.Profunctor":40,"Data.Profunctor.Choice":39,"Prelude":113}],111:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Either = require("Data.Either");
var Prelude = require("Prelude");
var Data_Profunctor = require("Data.Profunctor");
var Data_Profunctor_Choice = require("Data.Profunctor.Choice");
var Data_Maybe = require("Data.Maybe");
var Data_Identity = require("Data.Identity");
var Optic_Internal_Prism = require("Optic.Internal.Prism");
var withPrism = function (stab) {
    return function (f) {
        var _2533 = stab(new Optic_Internal_Prism.Market(Data_Identity.Identity.create, Data_Either.Right.create));
        return f(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_2533.value0))(Prelude[">>>"](Prelude.semigroupoidArr)(_2533.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Data_Either.Left.create))(Data_Either.Right.create)));
    };
};
var prism = function (__dict_Applicative_0) {
    return function (__dict_Choice_1) {
        return function (b2t) {
            return function (s2Eta) {
                return function (pafb) {
                    return Data_Profunctor.dimap(__dict_Choice_1["__superclass_Data.Profunctor.Profunctor_0"]())(s2Eta)(Data_Either.either(Prelude.pure(__dict_Applicative_0))(Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(b2t)))(Data_Profunctor_Choice.right(__dict_Choice_1)(pafb));
                };
            };
        };
    };
};
var prism$prime = function (b2s) {
    return function (s2Ma) {
        return function (__dict_Applicative_2) {
            return function (__dict_Choice_3) {
                return prism(__dict_Applicative_2)(__dict_Choice_3)(b2s)(function (s) {
                    return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(s2Ma(s));
                });
            };
        };
    };
};
var nearly = function (x) {
    return function (p) {
        return function (__dict_Applicative_4) {
            return function (__dict_Choice_5) {
                var guard = function (_743) {
                    if (_743) {
                        return new Data_Maybe.Just(Prelude.unit);
                    };
                    if (!_743) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return prism$prime(Prelude["const"](x))(Prelude["<<<"](Prelude.semigroupoidArr)(guard)(p))(__dict_Applicative_4)(__dict_Choice_5);
            };
        };
    };
};
var only = function (__dict_Eq_6) {
    return function (x) {
        return function (__dict_Applicative_7) {
            return function (__dict_Choice_8) {
                return nearly(x)(Prelude["=="](__dict_Eq_6)(x))(__dict_Applicative_7)(__dict_Choice_8);
            };
        };
    };
};
var matching = function (stab) {
    return withPrism(stab)(function (_) {
        return function (s) {
            return s;
        };
    });
};
var is = function (stab) {
    return function (s) {
        return Data_Either.either(Prelude["const"](false))(Prelude["const"](true))(matching(stab)(s));
    };
};
var isn$primet = function (stab) {
    return function (s) {
        return !is(stab)(s);
    };
};
var clonePrism = function (__dict_Applicative_9) {
    return function (__dict_Choice_10) {
        return function (stab) {
            return withPrism(stab)(prism(__dict_Applicative_9)(__dict_Choice_10));
        };
    };
};
module.exports = {
    clonePrism: clonePrism, 
    is: is, 
    "isn't": isn$primet, 
    matching: matching, 
    nearly: nearly, 
    only: only, 
    prism: prism, 
    "prism'": prism$prime, 
    withPrism: withPrism
};

},{"Data.Either":25,"Data.Identity":29,"Data.Maybe":32,"Data.Profunctor":40,"Data.Profunctor.Choice":39,"Optic.Internal.Prism":110,"Prelude":113}],112:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
module.exports = {
    unsafeIndex: unsafeIndex
};

},{"Prelude":113}],113:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Unit = {
    create: function (value) {
        return value;
    }
};
function LT() {

};
LT.value = new LT();
function GT() {

};
GT.value = new GT();
function EQ() {

};
EQ.value = new EQ();
function Semigroupoid($less$less$less) {
    this["<<<"] = $less$less$less;
};
function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
function Show(show) {
    this.show = show;
};
function Functor($less$dollar$greater) {
    this["<$>"] = $less$dollar$greater;
};
function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
    this["<*>"] = $less$times$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
function Applicative(__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
    this[">>="] = $greater$greater$eq;
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
};
function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
function Num($percent, $times, $plus, $minus, $div, negate) {
    this["%"] = $percent;
    this["*"] = $times;
    this["+"] = $plus;
    this["-"] = $minus;
    this["/"] = $div;
    this.negate = negate;
};
function Eq($div$eq, $eq$eq) {
    this["/="] = $div$eq;
    this["=="] = $eq$eq;
};
function Ord(__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
    this[".&."] = $dot$amp$dot;
    this[".^."] = $dot$up$dot;
    this[".|."] = $dot$bar$dot;
    this.complement = complement;
    this.shl = shl;
    this.shr = shr;
    this.zshr = zshr;
};
function BoolLike($amp$amp, not, $bar$bar) {
    this["&&"] = $amp$amp;
    this.not = not;
    this["||"] = $bar$bar;
};
function Semigroup($less$greater) {
    this["<>"] = $less$greater;
};
function cons(e) {  return function(l) {    return [e].concat(l);  };};
function showStringImpl(s) {  return JSON.stringify(s);};
function showNumberImpl(n) {  return n.toString();};
function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
function numNegate(n) {  return -n;};
function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
function numComplement(n) {  return ~n;};
function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
function boolNot(b) {  return !b;};
function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
var $bar$bar = function (dict) {
    return dict["||"];
};
var $greater$greater$eq = function (dict) {
    return dict[">>="];
};
var $eq$eq = function (dict) {
    return dict["=="];
};
var $less$greater = function (dict) {
    return dict["<>"];
};
var $less$less$less = function (dict) {
    return dict["<<<"];
};
var $greater$greater$greater = function (__dict_Semigroupoid_0) {
    return function (f) {
        return function (g) {
            return $less$less$less(__dict_Semigroupoid_0)(g)(f);
        };
    };
};
var $less$times$greater = function (dict) {
    return dict["<*>"];
};
var $less$dollar$greater = function (dict) {
    return dict["<$>"];
};
var $less$hash$greater = function (__dict_Functor_1) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_1)(f)(fa);
        };
    };
};
var $colon = cons;
var $div$eq = function (dict) {
    return dict["/="];
};
var $div = function (dict) {
    return dict["/"];
};
var $dot$bar$dot = function (dict) {
    return dict[".|."];
};
var $dot$up$dot = function (dict) {
    return dict[".^."];
};
var $dot$amp$dot = function (dict) {
    return dict[".&."];
};
var $minus = function (dict) {
    return dict["-"];
};
var $plus$plus = function (__dict_Semigroup_2) {
    return $less$greater(__dict_Semigroup_2);
};
var $plus = function (dict) {
    return dict["+"];
};
var $times = function (dict) {
    return dict["*"];
};
var $amp$amp = function (dict) {
    return dict["&&"];
};
var $percent = function (dict) {
    return dict["%"];
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zshr = function (dict) {
    return dict.zshr;
};
var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var shr = function (dict) {
    return dict.shr;
};
var showUnit = new Show(function (_106) {
    return "Unit {}";
});
var showString = new Show(showStringImpl);
var showOrdering = new Show(function (_114) {
    if (_114 instanceof LT) {
        return "LT";
    };
    if (_114 instanceof GT) {
        return "GT";
    };
    if (_114 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match");
});
var showNumber = new Show(showNumberImpl);
var showBoolean = new Show(function (_107) {
    if (_107) {
        return "true";
    };
    if (!_107) {
        return "false";
    };
    throw new Error("Failed pattern match");
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_3) {
    return new Show(showArrayImpl(show(__dict_Show_3)));
};
var shl = function (dict) {
    return dict.shl;
};
var semigroupoidArr = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_121) {
    return function (_122) {
        return {};
    };
});
var semigroupString = new Semigroup(concatString);
var semigroupArr = function (__dict_Semigroup_4) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
            };
        };
    });
};
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Monad_5) {
    return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
};
var otherwise = true;
var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
var not = function (dict) {
    return dict.not;
};
var negate = function (dict) {
    return dict.negate;
};
var liftM1 = function (__dict_Monad_6) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_6)(f(_0));
            });
        };
    };
};
var liftA1 = function (__dict_Applicative_7) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArr = new Functor($less$less$less(semigroupoidArr));
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_110) {
    return function (_111) {
        return false;
    };
}, function (_108) {
    return function (_109) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_115) {
    return function (_116) {
        return EQ.value;
    };
});
var eqString = new Eq(refIneq, refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqNumber = new Eq(refIneq, refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqBoolean = new Eq(refIneq, refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, function (_117) {
    return function (_118) {
        if (!_117 && !_118) {
            return EQ.value;
        };
        if (!_117 && _118) {
            return LT.value;
        };
        if (_117 && _118) {
            return EQ.value;
        };
        if (_117 && !_118) {
            return GT.value;
        };
        throw new Error("Failed pattern match");
    };
});
var $$const = function (_102) {
    return function (_103) {
        return _102;
    };
};
var $$void = function (__dict_Functor_9) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
    };
};
var complement = function (dict) {
    return dict.complement;
};
var compare = function (dict) {
    return dict.compare;
};
var $less = function (__dict_Ord_11) {
    return function (a1) {
        return function (a2) {
            var _871 = compare(__dict_Ord_11)(a1)(a2);
            if (_871 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_12) {
    return function (a1) {
        return function (a2) {
            var _872 = compare(__dict_Ord_12)(a1)(a2);
            if (_872 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_13) {
    return function (a1) {
        return function (a2) {
            var _873 = compare(__dict_Ord_13)(a1)(a2);
            if (_873 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_14) {
    return function (a1) {
        return function (a2) {
            var _874 = compare(__dict_Ord_14)(a1)(a2);
            if (_874 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryArr = new Category(function () {
    return semigroupoidArr;
}, function (x) {
    return x;
});
var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
var eqArray = function (__dict_Eq_8) {
    return new Eq(function (xs) {
        return function (ys) {
            return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
        };
    }, function (xs) {
        return function (ys) {
            return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
        };
    });
};
var ordArray = function (__dict_Ord_10) {
    return new Ord(function () {
        return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
    }, function (_119) {
        return function (_120) {
            if (_119.length === 0 && _120.length === 0) {
                return EQ.value;
            };
            if (_119.length === 0) {
                return LT.value;
            };
            if (_120.length === 0) {
                return GT.value;
            };
            if (_119.length >= 1) {
                var _881 = _119.slice(1);
                if (_120.length >= 1) {
                    var _879 = _120.slice(1);
                    var _877 = compare(__dict_Ord_10)(_119[0])(_120[0]);
                    if (_877 instanceof EQ) {
                        return compare(ordArray(__dict_Ord_10))(_881)(_879);
                    };
                    return _877;
                };
            };
            throw new Error("Failed pattern match");
        };
    });
};
var eqOrdering = new Eq(function (x) {
    return function (y) {
        return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
    };
}, function (_112) {
    return function (_113) {
        if (_112 instanceof LT && _113 instanceof LT) {
            return true;
        };
        if (_112 instanceof GT && _113 instanceof GT) {
            return true;
        };
        if (_112 instanceof EQ && _113 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
var asTypeOf = function (_104) {
    return function (_105) {
        return _104;
    };
};
var applyArr = new Apply(function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
}, function () {
    return functorArr;
});
var bindArr = new Bind(function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
}, function () {
    return applyArr;
});
var applicativeArr = new Applicative(function () {
    return applyArr;
}, $$const);
var monadArr = new Monad(function () {
    return applicativeArr;
}, function () {
    return bindArr;
});
var ap = function (__dict_Monad_15) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_15)(_2(_1));
                });
            });
        };
    };
};
module.exports = {
    "#": $hash, 
    "$": $dollar, 
    "%": $percent, 
    "&&": $amp$amp, 
    "*": $times, 
    "+": $plus, 
    "++": $plus$plus, 
    "-": $minus, 
    ".&.": $dot$amp$dot, 
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    "/": $div, 
    "/=": $div$eq, 
    ":": $colon, 
    "<": $less, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    "<*>": $less$times$greater, 
    "<<<": $less$less$less, 
    "<=": $less$eq, 
    "<>": $less$greater, 
    "==": $eq$eq, 
    ">": $greater, 
    ">=": $greater$eq, 
    ">>=": $greater$greater$eq, 
    ">>>": $greater$greater$greater, 
    Applicative: Applicative, 
    Apply: Apply, 
    Bind: Bind, 
    Bits: Bits, 
    BoolLike: BoolLike, 
    Category: Category, 
    EQ: EQ, 
    Eq: Eq, 
    Functor: Functor, 
    GT: GT, 
    LT: LT, 
    Monad: Monad, 
    Num: Num, 
    Ord: Ord, 
    Semigroup: Semigroup, 
    Semigroupoid: Semigroupoid, 
    Show: Show, 
    Unit: Unit, 
    ap: ap, 
    applicativeArr: applicativeArr, 
    applyArr: applyArr, 
    asTypeOf: asTypeOf, 
    bindArr: bindArr, 
    bitsNumber: bitsNumber, 
    boolLikeBoolean: boolLikeBoolean, 
    categoryArr: categoryArr, 
    compare: compare, 
    complement: complement, 
    cons: cons, 
    "const": $$const, 
    eqArray: eqArray, 
    eqBoolean: eqBoolean, 
    eqNumber: eqNumber, 
    eqOrdering: eqOrdering, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    flip: flip, 
    functorArr: functorArr, 
    id: id, 
    liftA1: liftA1, 
    liftM1: liftM1, 
    monadArr: monadArr, 
    negate: negate, 
    not: not, 
    numNumber: numNumber, 
    ordArray: ordArray, 
    ordBoolean: ordBoolean, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordUnit: ordUnit, 
    otherwise: otherwise, 
    pure: pure, 
    refEq: refEq, 
    refIneq: refIneq, 
    "return": $$return, 
    semigroupArr: semigroupArr, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupoidArr: semigroupoidArr, 
    shl: shl, 
    show: show, 
    showArray: showArray, 
    showBoolean: showBoolean, 
    showNumber: showNumber, 
    showOrdering: showOrdering, 
    showString: showString, 
    showUnit: showUnit, 
    shr: shr, 
    unit: unit, 
    "void": $$void, 
    zshr: zshr, 
    "||": $bar$bar
};

},{}],114:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Options = require("ECharts.Options");
var ECharts_Series = require("ECharts.Series");
var Prelude = require("Prelude");
var Utils = require("Utils");
var ECharts_Chart = require("ECharts.Chart");
var Data_Maybe = require("Data.Maybe");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var indicator = function (text) {
    return function (max) {
        return ECharts_Axis.Indicator.create((function () {
            var _717 = {};
            for (var _718 in ECharts_Axis.indicatorDefault) {
                if (ECharts_Axis.indicatorDefault.hasOwnProperty(_718)) {
                    _717[_718] = ECharts_Axis.indicatorDefault[_718];
                };
            };
            _717.text = new Data_Maybe.Just(text);
            _717.max = new Data_Maybe.Just(max);
            return _717;
        })());
    };
};
var datPair = function (val) {
    return function (name) {
        return ECharts_Item_Data.Dat.create((function () {
            var _719 = {};
            for (var _720 in ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Many(val))) {
                if ((ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Many(val))).hasOwnProperty(_720)) {
                    _719[_720] = (ECharts_Item_Data.dataDefault(new ECharts_Item_Value.Many(val)))[_720];
                };
            };
            _719.name = new Data_Maybe.Just(name);
            return _719;
        })());
    };
};
var option = ECharts_Options.Option.create((function () {
    var _727 = {};
    for (var _728 in ECharts_Options.optionDefault) {
        if (ECharts_Options.optionDefault.hasOwnProperty(_728)) {
            _727[_728] = ECharts_Options.optionDefault[_728];
        };
    };
    _727.polar = Data_Maybe.Just.create([ (function () {
        var _721 = {};
        for (var _722 in ECharts_Axis.polarDefault) {
            if (ECharts_Axis.polarDefault.hasOwnProperty(_722)) {
                _721[_722] = ECharts_Axis.polarDefault[_722];
            };
        };
        _721.indicator = new Data_Maybe.Just([ indicator("sales")(6000), indicator("Administration")(16000), indicator("IT")(30000), indicator("Development")(52000), indicator("Customer Support")(38000), indicator("Marketing")(25000) ]);
        return _721;
    })() ]);
    _727.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.RadarSeries({
        common: (function () {
            var _723 = {};
            for (var _724 in ECharts_Series.universalSeriesDefault) {
                if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_724)) {
                    _723[_724] = ECharts_Series.universalSeriesDefault[_724];
                };
            };
            _723.name = new Data_Maybe.Just("budget vs spending");
            return _723;
        })(), 
        special: (function () {
            var _725 = {};
            for (var _726 in ECharts_Series.radarSeriesDefault) {
                if (ECharts_Series.radarSeriesDefault.hasOwnProperty(_726)) {
                    _725[_726] = ECharts_Series.radarSeriesDefault[_726];
                };
            };
            _725.data = new Data_Maybe.Just([ datPair([ 4300, 10000, 28000, 35000, 50000, 19000 ])("Allocated"), datPair([ 5000, 14000, 28000, 31000, 42000, 21000 ])("Actual") ]);
            return _725;
        })()
    }) ]));
    return _727;
})());
var radar3 = function (id) {
    return function __do() {
        var _48 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(option)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    datPair: datPair, 
    indicator: indicator, 
    option: option, 
    radar3: radar3
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Options":73,"ECharts.Series":78,"Prelude":113,"Utils":118}],115:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Utils = require("Utils");
var Data_Array = require("Data.Array");
var Math = require("Math");
var ECharts_Options = require("ECharts.Options");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Series = require("ECharts.Series");
var ECharts_Chart = require("ECharts.Chart");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Maybe = require("Data.Maybe");
var sinData = function __do() {
    var _50 = Utils.randomLst(10000)();
    var _49 = Utils.randomLst(10000)();
    return (function () {
        var randoms = Data_Array.zipWith(function (i) {
            return function (x) {
                return new Data_Tuple.Tuple(Utils.precise(3)(i * 10), x);
            };
        })(_50)(_49);
        var mapfn = function (_136) {
            return new Data_Tuple.Tuple(_136.value0, Utils.precise(3)(Math.sin(_136.value0) - _136.value0 * ((_136.value0 % 2) > 0 ? 0.1 : -0.1) * _136.value1));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(randoms));
    })()();
};
var simpleData = function (_138) {
    return ECharts_Item_Data.Value.create(new ECharts_Item_Value.XYR({
        x: _138.value0, 
        y: _138.value1, 
        r: Data_Maybe.Nothing.value
    }));
};
var showIt = {
    show: true
};
var cosData = function __do() {
    var _52 = Utils.randomLst(10000)();
    var _51 = Utils.randomLst(10000)();
    return (function () {
        var randoms = Data_Array.zipWith(function (i) {
            return function (x) {
                return new Data_Tuple.Tuple(Utils.precise(3)(i * 10), x);
            };
        })(_52)(_51);
        var mapfn = function (_137) {
            return new Data_Tuple.Tuple(_137.value0, Utils.precise(3)(Math.cos(_137.value0) - _137.value0 * ((_137.value0 % 2) > 0 ? 0.1 : -0.1) * _137.value1));
        };
        return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude["<$>"](Data_Array.functorArray)(mapfn)(randoms));
    })()();
};
var options = function __do() {
    var _54 = sinData();
    var _53 = cosData();
    return ECharts_Options.Option.create((function () {
        var _757 = {};
        for (var _758 in ECharts_Options.optionDefault) {
            if (ECharts_Options.optionDefault.hasOwnProperty(_758)) {
                _757[_758] = ECharts_Options.optionDefault[_758];
            };
        };
        _757.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
            var _745 = {};
            for (var _746 in ECharts_Axis.axisDefault) {
                if (ECharts_Axis.axisDefault.hasOwnProperty(_746)) {
                    _745[_746] = ECharts_Axis.axisDefault[_746];
                };
            };
            _745.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
            return _745;
        })()));
        _757.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create((function () {
            var _747 = {};
            for (var _748 in ECharts_Axis.axisDefault) {
                if (ECharts_Axis.axisDefault.hasOwnProperty(_748)) {
                    _747[_748] = ECharts_Axis.axisDefault[_748];
                };
            };
            _747.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
            return _747;
        })()));
        _757.series = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(Data_Maybe.Just.create)([ new ECharts_Series.ScatterSeries({
            common: (function () {
                var _749 = {};
                for (var _750 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_750)) {
                        _749[_750] = ECharts_Series.universalSeriesDefault[_750];
                    };
                };
                _749.name = new Data_Maybe.Just("sin");
                return _749;
            })(), 
            special: (function () {
                var _751 = {};
                for (var _752 in ECharts_Series.scatterSeriesDefault) {
                    if (ECharts_Series.scatterSeriesDefault.hasOwnProperty(_752)) {
                        _751[_752] = ECharts_Series.scatterSeriesDefault[_752];
                    };
                };
                _751.large = new Data_Maybe.Just(true);
                _751.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(_54));
                return _751;
            })()
        }), new ECharts_Series.ScatterSeries({
            common: (function () {
                var _753 = {};
                for (var _754 in ECharts_Series.universalSeriesDefault) {
                    if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_754)) {
                        _753[_754] = ECharts_Series.universalSeriesDefault[_754];
                    };
                };
                _753.name = new Data_Maybe.Just("cos");
                return _753;
            })(), 
            special: (function () {
                var _755 = {};
                for (var _756 in ECharts_Series.scatterSeriesDefault) {
                    if (ECharts_Series.scatterSeriesDefault.hasOwnProperty(_756)) {
                        _755[_756] = ECharts_Series.scatterSeriesDefault[_756];
                    };
                };
                _755.large = new Data_Maybe.Just(true);
                _755.data = Data_Maybe.Just.create(Prelude["<$>"](Data_Array.functorArray)(simpleData)(_53));
                return _755;
            })()
        }) ]));
        return _757;
    })());
};
var scatter3 = function (id) {
    return function __do() {
        var _56 = options();
        var _55 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Utils.getElementById(id))(ECharts_Chart.init(Data_Maybe.Nothing.value)))(ECharts_Options.setOption(_56)(true))();
        return Prelude.unit;
    };
};
module.exports = {
    cosData: cosData, 
    options: options, 
    scatter3: scatter3, 
    showIt: showIt, 
    simpleData: simpleData, 
    sinData: sinData
};

},{"Control.Monad.Eff":11,"Data.Array":20,"Data.Maybe":32,"Data.Tuple":49,"ECharts.Axis":53,"ECharts.Chart":54,"ECharts.Item.Data":65,"ECharts.Item.Value":66,"ECharts.Options":73,"ECharts.Series":78,"Math":105,"Prelude":113,"Utils":118}],116:[function(require,module,exports){
(function (process){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Signal = require("Signal");
var Prelude = require("Prelude");

  function everyP(constant, now, t) {
    var out = constant(now());
    setInterval(function() {
      out.set(now());
    }, t);
    return out;
  };

  function now() {
    var perf = typeof performance !== 'undefined' ? performance : null;
    return (
      perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
      (process && process.hrtime && function() {
        var t = process.hrtime();
        return (t[0] * 1e9 + t[1]) / 1e6;
      }) ||
      Date.now
    ).call(perf);
  };
var second = 1000;
var millisecond = 1;
var every = Data_Function.runFn3(everyP)(Signal.constant)(now);
module.exports = {
    every: every, 
    millisecond: millisecond, 
    now: now, 
    second: second
};

}).call(this,require("1YiZ5S"))
},{"1YiZ5S":119,"Data.Function":28,"Prelude":113,"Signal":117}],117:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");

  function constant(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  function liftP(constant, fun, sig) {
    var out = constant(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };

  function applySigP(constant, fun, sig) {
    var out = constant(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };

  function mergeP(constant, sig1, sig2) {
    var out = constant(sig1.get());
    sig1.subscribe(out.set);
    sig2.subscribe(out.set);
    return out;
  };

  function foldpP(constant, fun, seed, sig) {
    var acc = seed;
    var out = constant(acc);
    sig.subscribe(function(val) {
      acc = fun(val)(acc);
      out.set(acc);
    });
    return out;
  };

  function sampleOnP(constant, sig1, sig2) {
    var out = constant(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };

  function distinctP(eq) {
  return function(constant) {
  return function(sig) {
    var val = sig.get();
    var out = constant(val);
    sig.subscribe(function(newval) {
      if (eq['/='](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };};};

  function distinctRefP(constant, sig) {
    var val = sig.get();
    var out = constant(val);
    sig.subscribe(function(newval) {
      if (val !== newval) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };

  function zipP(constant, f, sig1, sig2) {
    var val1 = sig1.get(), val2 = sig2.get();
    var out = constant(f(val1)(val2));
    sig1.subscribe(function(v) {
      val1 = v;
      out.set(f(val1)(val2));
    });
    sig2.subscribe(function(v) {
      val2 = v;
      out.set(f(val1)(val2));
    });
    return out;
  };

  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

  function unwrapP(constant, sig) {
    return function() {
      var out = constant(sig.get()());
      sig.subscribe(function(val) { out.set(val()); });
      return out;
    };
  };
var $tilde$greater = function (__dict_Functor_0) {
    return Prelude.flip(Prelude["<$>"](__dict_Functor_0));
};
var $tilde = function (__dict_Apply_1) {
    return Prelude["<*>"](__dict_Apply_1);
};
var $less$tilde = function (__dict_Functor_2) {
    return Prelude["<$>"](__dict_Functor_2);
};
var zip = function (f) {
    return function (a) {
        return function (b) {
            return zipP(constant, f, a, b);
        };
    };
};
var unwrap = Data_Function.runFn2(unwrapP)(constant);
var sampleOn = Data_Function.runFn3(sampleOnP)(constant);
var merge = Data_Function.runFn3(mergeP)(constant);
var semigroupSignal = new Prelude.Semigroup(merge);
var lift = Data_Function.runFn3(liftP)(constant);
var functorSignal = new Prelude.Functor(lift);
var foldp = Data_Function.runFn4(foldpP)(constant);
var distinct$prime = Data_Function.runFn2(distinctRefP)(constant);
var distinct = function (__dict_Eq_3) {
    return distinctP(__dict_Eq_3)(constant);
};
var applySig = Data_Function.runFn3(applySigP)(constant);
var applySignal = new Prelude.Apply(applySig, function () {
    return functorSignal;
});
var lift2 = function (f) {
    return function (a) {
        return function (b) {
            return $tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b);
        };
    };
};
var lift3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return $tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var lift4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var lift5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Prelude.Applicative(function () {
    return applySignal;
}, constant);
module.exports = {
    "<~": $less$tilde, 
    applicativeSignal: applicativeSignal, 
    applySig: applySig, 
    applySignal: applySignal, 
    constant: constant, 
    distinct: distinct, 
    "distinct'": distinct$prime, 
    foldp: foldp, 
    functorSignal: functorSignal, 
    lift: lift, 
    merge: merge, 
    runSignal: runSignal, 
    sampleOn: sampleOn, 
    semigroupSignal: semigroupSignal, 
    unwrap: unwrap, 
    zip: zip, 
    "~": $tilde, 
    "~>": $tilde$greater
};

},{"Data.Function":28,"Prelude":113}],118:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Array = require("Data.Array");
var Prelude = require("Prelude");
var Control_Monad_Eff_Random = require("Control.Monad.Eff.Random");
var Math = require("Math");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");

function undefine(a) {
  return undefined;
}
;

function log(a) {
  return function() {
    console.log(a);
  };
}

;

function getElementById(id) {
  return function() {
    console.log(id);
    return document.getElementById(id);
  };
}
;

function onLoad(action) {
  return function() {
    window.onload = action;
  };
}
;

function windowize(key) {
  return function(a) {
    return function() {
      window[key] = a;
    };
  };
}
;

function precise(pre) {
  return function(num) {
    var Math = window['Math'];
    var result = Math.round(Math.pow(10, pre) * num) / Math.pow(10, pre);
    return result;
  };
}
;

function randomLst(count) {
  return function() {
    var Math = window['Math'];
    var result = [];
    for (var i = 0; i < count; i++) {
      result.push(Math.random());
    }
    return result;
  };
}
;
var randomInList = function (lst) {
    var l = Data_Array.length(lst);
    return function __do() {
        var _35 = Control_Monad_Eff_Random.random();
        return (function () {
            var i = Math.floor(_35 * l);
            return Prelude["return"](Control_Monad_Eff.monadEff)((function () {
                var _2865 = Data_Array["!!"](lst)(i);
                if (_2865 instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(_2865.value0, i);
                };
                throw new Error("Failed pattern match");
            })());
        })()();
    };
};
module.exports = {
    getElementById: getElementById, 
    log: log, 
    onLoad: onLoad, 
    precise: precise, 
    randomInList: randomInList, 
    randomLst: randomLst, 
    undefine: undefine, 
    windowize: windowize
};

},{"Control.Monad.Eff":11,"Control.Monad.Eff.Random":10,"Data.Array":20,"Data.Maybe":32,"Data.Tuple":49,"Math":105,"Prelude":113}],119:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}]},{},[1])